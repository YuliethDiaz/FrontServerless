{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport BaseMaskStrategy from \"./ui.text_editor.mask.strategy.base\";\nvar DELETE_INPUT_TYPE = \"deleteContentBackward\";\n\nvar InputEventsMaskStrategy = /*#__PURE__*/function (_BaseMaskStrategy) {\n  _inherits(InputEventsMaskStrategy, _BaseMaskStrategy);\n\n  var _super = _createSuper(InputEventsMaskStrategy);\n\n  function InputEventsMaskStrategy() {\n    _classCallCheck(this, InputEventsMaskStrategy);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(InputEventsMaskStrategy, [{\n    key: \"_getStrategyName\",\n    value: function _getStrategyName() {\n      return \"inputEvents\";\n    }\n  }, {\n    key: \"getHandleEventNames\",\n    value: function getHandleEventNames() {\n      return [].concat(_toConsumableArray(_get(_getPrototypeOf(InputEventsMaskStrategy.prototype), \"getHandleEventNames\", this).call(this)), [\"beforeInput\"]);\n    }\n  }, {\n    key: \"_beforeInputHandler\",\n    value: function _beforeInputHandler() {\n      this._prevCaret = this.editorCaret();\n    }\n  }, {\n    key: \"_inputHandler\",\n    value: function _inputHandler(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (!originalEvent) {\n        return;\n      }\n\n      var inputType = originalEvent.inputType,\n          data = originalEvent.data;\n      var currentCaret = this.editorCaret();\n\n      if (inputType === DELETE_INPUT_TYPE) {\n        var length = this._prevCaret.end - this._prevCaret.start || 1;\n        this.editor.setBackwardDirection();\n\n        this._updateEditorMask({\n          start: currentCaret.start,\n          length: length,\n          text: this._getEmptyString(length)\n        });\n      } else {\n        var _this$_prevCaret, _this$_prevCaret2, _this$_prevCaret3;\n\n        if (!currentCaret.end) {\n          return;\n        }\n\n        this._autoFillHandler(originalEvent);\n\n        this.editorCaret(currentCaret);\n\n        var _length = (null === (_this$_prevCaret = this._prevCaret) || void 0 === _this$_prevCaret ? void 0 : _this$_prevCaret.end) - (null === (_this$_prevCaret2 = this._prevCaret) || void 0 === _this$_prevCaret2 ? void 0 : _this$_prevCaret2.start);\n\n        var newData = data + (_length ? this._getEmptyString(_length - data.length) : \"\");\n        this.editor.setForwardDirection();\n\n        var hasValidChars = this._updateEditorMask({\n          start: null === (_this$_prevCaret3 = this._prevCaret) || void 0 === _this$_prevCaret3 ? void 0 : _this$_prevCaret3.start,\n          length: _length || newData.length,\n          text: newData\n        });\n\n        if (!hasValidChars) {\n          this.editorCaret(this._prevCaret);\n        }\n      }\n    }\n  }, {\n    key: \"_getEmptyString\",\n    value: function _getEmptyString(length) {\n      return Array(length + 1).join(\" \");\n    }\n  }, {\n    key: \"_updateEditorMask\",\n    value: function _updateEditorMask(args) {\n      var textLength = args.text.length;\n\n      var updatedCharsCount = this.editor._handleChain(args);\n\n      if (this.editor.isForwardDirection()) {\n        var _this$editorCaret = this.editorCaret(),\n            start = _this$editorCaret.start,\n            end = _this$editorCaret.end;\n\n        var correction = updatedCharsCount - textLength;\n\n        if (start <= updatedCharsCount && updatedCharsCount > 1) {\n          this.editorCaret({\n            start: start + correction,\n            end: end + correction\n          });\n        }\n\n        this.editor.isForwardDirection() && this.editor._adjustCaret();\n      }\n\n      this.editor._displayMask();\n\n      return !!updatedCharsCount;\n    }\n  }]);\n\n  return InputEventsMaskStrategy;\n}(BaseMaskStrategy);\n\nexport default InputEventsMaskStrategy;","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/devextreme/esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js"],"names":["BaseMaskStrategy","DELETE_INPUT_TYPE","InputEventsMaskStrategy","_prevCaret","editorCaret","_ref","originalEvent","inputType","data","currentCaret","length","end","start","editor","setBackwardDirection","_updateEditorMask","text","_getEmptyString","_this$_prevCaret","_this$_prevCaret2","_this$_prevCaret3","_autoFillHandler","_length","newData","setForwardDirection","hasValidChars","Array","join","args","textLength","updatedCharsCount","_handleChain","isForwardDirection","correction","_adjustCaret","_displayMask"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/text_box/ui.text_editor.mask.strategy.input_events.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport BaseMaskStrategy from \"./ui.text_editor.mask.strategy.base\";\r\nvar DELETE_INPUT_TYPE = \"deleteContentBackward\";\r\nclass InputEventsMaskStrategy extends BaseMaskStrategy {\r\n    _getStrategyName() {\r\n        return \"inputEvents\"\r\n    }\r\n    getHandleEventNames() {\r\n        return [...super.getHandleEventNames(), \"beforeInput\"]\r\n    }\r\n    _beforeInputHandler() {\r\n        this._prevCaret = this.editorCaret()\r\n    }\r\n    _inputHandler(_ref) {\r\n        var {\r\n            originalEvent: originalEvent\r\n        } = _ref;\r\n        if (!originalEvent) {\r\n            return\r\n        }\r\n        var {\r\n            inputType: inputType,\r\n            data: data\r\n        } = originalEvent;\r\n        var currentCaret = this.editorCaret();\r\n        if (inputType === DELETE_INPUT_TYPE) {\r\n            var length = this._prevCaret.end - this._prevCaret.start || 1;\r\n            this.editor.setBackwardDirection();\r\n            this._updateEditorMask({\r\n                start: currentCaret.start,\r\n                length: length,\r\n                text: this._getEmptyString(length)\r\n            })\r\n        } else {\r\n            var _this$_prevCaret, _this$_prevCaret2, _this$_prevCaret3;\r\n            if (!currentCaret.end) {\r\n                return\r\n            }\r\n            this._autoFillHandler(originalEvent);\r\n            this.editorCaret(currentCaret);\r\n            var _length = (null === (_this$_prevCaret = this._prevCaret) || void 0 === _this$_prevCaret ? void 0 : _this$_prevCaret.end) - (null === (_this$_prevCaret2 = this._prevCaret) || void 0 === _this$_prevCaret2 ? void 0 : _this$_prevCaret2.start);\r\n            var newData = data + (_length ? this._getEmptyString(_length - data.length) : \"\");\r\n            this.editor.setForwardDirection();\r\n            var hasValidChars = this._updateEditorMask({\r\n                start: null === (_this$_prevCaret3 = this._prevCaret) || void 0 === _this$_prevCaret3 ? void 0 : _this$_prevCaret3.start,\r\n                length: _length || newData.length,\r\n                text: newData\r\n            });\r\n            if (!hasValidChars) {\r\n                this.editorCaret(this._prevCaret)\r\n            }\r\n        }\r\n    }\r\n    _getEmptyString(length) {\r\n        return Array(length + 1).join(\" \")\r\n    }\r\n    _updateEditorMask(args) {\r\n        var textLength = args.text.length;\r\n        var updatedCharsCount = this.editor._handleChain(args);\r\n        if (this.editor.isForwardDirection()) {\r\n            var {\r\n                start: start,\r\n                end: end\r\n            } = this.editorCaret();\r\n            var correction = updatedCharsCount - textLength;\r\n            if (start <= updatedCharsCount && updatedCharsCount > 1) {\r\n                this.editorCaret({\r\n                    start: start + correction,\r\n                    end: end + correction\r\n                })\r\n            }\r\n            this.editor.isForwardDirection() && this.editor._adjustCaret()\r\n        }\r\n        this.editor._displayMask();\r\n        return !!updatedCharsCount\r\n    }\r\n}\r\nexport default InputEventsMaskStrategy;\r\n"]},"metadata":{},"sourceType":"module"}