{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scroll_view/ui.scrollable.native.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getHeight, getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isDxMouseWheelEvent } from \"../../events/utils/index\";\nimport { noop } from \"../../core/utils/common\";\nimport { each } from \"../../core/utils/iterator\";\nimport devices from \"../../core/devices\";\nimport Class from \"../../core/class\";\nimport Scrollbar from \"./ui.scrollbar\";\nvar SCROLLABLE_NATIVE = \"dxNativeScrollable\";\nvar SCROLLABLE_NATIVE_CLASS = \"dx-scrollable-native\";\nvar SCROLLABLE_SCROLLBAR_SIMULATED = \"dx-scrollable-scrollbar-simulated\";\nvar SCROLLABLE_SCROLLBARS_HIDDEN = \"dx-scrollable-scrollbars-hidden\";\nvar VERTICAL = \"vertical\";\nvar HORIZONTAL = \"horizontal\";\nvar HIDE_SCROLLBAR_TIMEOUT = 500;\nvar NativeStrategy = Class.inherit({\n  ctor: function ctor(scrollable) {\n    this._init(scrollable);\n  },\n  _init: function _init(scrollable) {\n    this._component = scrollable;\n    this._$element = scrollable.$element();\n    this._$container = $(scrollable.container());\n    this._$content = scrollable.$content();\n    this._direction = scrollable.option(\"direction\");\n    this._useSimulatedScrollbar = scrollable.option(\"useSimulatedScrollbar\");\n    this.option = scrollable.option.bind(scrollable);\n    this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\n    this._isLocked = scrollable._isLocked.bind(scrollable);\n    this._isDirection = scrollable._isDirection.bind(scrollable);\n    this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\n    this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable);\n    this._isRtlNativeStrategy = scrollable._isRtlNativeStrategy.bind(scrollable);\n  },\n  render: function render() {\n    var device = devices.real();\n    var deviceType = device.platform;\n\n    this._$element.addClass(SCROLLABLE_NATIVE_CLASS).addClass(SCROLLABLE_NATIVE_CLASS + \"-\" + deviceType).toggleClass(SCROLLABLE_SCROLLBARS_HIDDEN, !this._isScrollbarVisible());\n\n    if (this._isScrollbarVisible() && this._useSimulatedScrollbar) {\n      this._renderScrollbars();\n    }\n  },\n  updateRtlPosition: function updateRtlPosition(isFirstRender) {\n    if (isFirstRender && this.option(\"rtlEnabled\")) {\n      if (this._isScrollbarVisible() && this._useSimulatedScrollbar) {\n        this._moveScrollbars();\n      }\n    }\n  },\n  _renderScrollbars: function _renderScrollbars() {\n    this._scrollbars = {};\n    this._hideScrollbarTimeout = 0;\n\n    this._$element.addClass(SCROLLABLE_SCROLLBAR_SIMULATED);\n\n    this._renderScrollbar(VERTICAL);\n\n    this._renderScrollbar(HORIZONTAL);\n  },\n  _renderScrollbar: function _renderScrollbar(direction) {\n    if (!this._isDirection(direction)) {\n      return;\n    }\n\n    this._scrollbars[direction] = new Scrollbar($(\"<div>\").appendTo(this._$element), {\n      direction: direction,\n      expandable: this._component.option(\"scrollByThumb\")\n    });\n  },\n  handleInit: noop,\n  handleStart: noop,\n  handleMove: function handleMove(e) {\n    if (this._isLocked()) {\n      e.cancel = true;\n      return;\n    }\n\n    if (this._allowedDirection()) {\n      e.originalEvent.isScrollingEvent = true;\n    }\n  },\n  handleEnd: noop,\n  handleCancel: noop,\n  handleStop: noop,\n  _eachScrollbar: function _eachScrollbar(callback) {\n    callback = callback.bind(this);\n    each(this._scrollbars || {}, function (direction, scrollbar) {\n      callback(scrollbar, direction);\n    });\n  },\n  createActions: function createActions() {\n    this._scrollAction = this._createActionByOption(\"onScroll\");\n    this._updateAction = this._createActionByOption(\"onUpdated\");\n  },\n  _createActionArgs: function _createActionArgs() {\n    var _this$location = this.location(),\n        left = _this$location.left,\n        top = _this$location.top;\n\n    return {\n      event: this._eventForUserAction,\n      scrollOffset: this._getScrollOffset(),\n      reachedLeft: this._isRtlNativeStrategy() ? this._isReachedRight(-left) : this._isReachedLeft(left),\n      reachedRight: this._isRtlNativeStrategy() ? this._isReachedLeft(-Math.abs(left)) : this._isReachedRight(left),\n      reachedTop: this._isDirection(VERTICAL) ? Math.round(top) >= 0 : void 0,\n      reachedBottom: this._isDirection(VERTICAL) ? Math.round(Math.abs(top) - this._getMaxOffset().top) >= 0 : void 0\n    };\n  },\n  _getScrollOffset: function _getScrollOffset() {\n    var _this$location2 = this.location(),\n        top = _this$location2.top,\n        left = _this$location2.left;\n\n    return {\n      top: -top,\n      left: this._normalizeOffsetLeft(-left)\n    };\n  },\n  _normalizeOffsetLeft: function _normalizeOffsetLeft(scrollLeft) {\n    if (this._isRtlNativeStrategy()) {\n      return this._getMaxOffset().left + scrollLeft;\n    }\n\n    return scrollLeft;\n  },\n  _isReachedLeft: function _isReachedLeft(left) {\n    return this._isDirection(HORIZONTAL) ? Math.round(left) >= 0 : void 0;\n  },\n  _isReachedRight: function _isReachedRight(left) {\n    return this._isDirection(HORIZONTAL) ? Math.round(Math.abs(left) - this._getMaxOffset().left) >= 0 : void 0;\n  },\n  _isScrollbarVisible: function _isScrollbarVisible() {\n    var _this$option = this.option(),\n        showScrollbar = _this$option.showScrollbar;\n\n    return \"never\" !== showScrollbar && false !== showScrollbar;\n  },\n  handleScroll: function handleScroll(e) {\n    this._eventForUserAction = e;\n\n    this._moveScrollbars();\n\n    this._scrollAction(this._createActionArgs());\n  },\n  _moveScrollbars: function _moveScrollbars() {\n    var _this$_getScrollOffse = this._getScrollOffset(),\n        top = _this$_getScrollOffse.top,\n        left = _this$_getScrollOffse.left;\n\n    this._eachScrollbar(function (scrollbar) {\n      scrollbar.moveTo({\n        top: -top,\n        left: -left\n      });\n      scrollbar.option(\"visible\", true);\n    });\n\n    this._hideScrollbars();\n  },\n  _hideScrollbars: function _hideScrollbars() {\n    clearTimeout(this._hideScrollbarTimeout);\n    this._hideScrollbarTimeout = setTimeout(function () {\n      this._eachScrollbar(function (scrollbar) {\n        scrollbar.option(\"visible\", false);\n      });\n    }.bind(this), HIDE_SCROLLBAR_TIMEOUT);\n  },\n  location: function location() {\n    return {\n      left: -this._$container.scrollLeft(),\n      top: -this._$container.scrollTop()\n    };\n  },\n  disabledChanged: noop,\n  update: function update() {\n    this._update();\n\n    this._updateAction(this._createActionArgs());\n  },\n  _update: function _update() {\n    this._updateDimensions();\n\n    this._updateScrollbars();\n  },\n  _updateDimensions: function _updateDimensions() {\n    this._containerSize = {\n      height: getHeight(this._$container),\n      width: getWidth(this._$container)\n    };\n    this._componentContentSize = {\n      height: getHeight(this._component.$content()),\n      width: getWidth(this._component.$content())\n    };\n    this._contentSize = {\n      height: getHeight(this._$content),\n      width: getWidth(this._$content)\n    };\n  },\n  _updateScrollbars: function _updateScrollbars() {\n    this._eachScrollbar(function (scrollbar, direction) {\n      var dimension = direction === VERTICAL ? \"height\" : \"width\";\n      scrollbar.option({\n        containerSize: this._containerSize[dimension],\n        contentSize: this._componentContentSize[dimension]\n      });\n      scrollbar.update();\n    });\n  },\n  _allowedDirections: function _allowedDirections() {\n    return {\n      vertical: this._isDirection(VERTICAL) && this._contentSize.height > this._containerSize.height,\n      horizontal: this._isDirection(HORIZONTAL) && this._contentSize.width > this._containerSize.width\n    };\n  },\n  dispose: function dispose() {\n    var className = this._$element.get(0).className;\n\n    var scrollableNativeRegexp = new RegExp(SCROLLABLE_NATIVE_CLASS + \"\\\\S*\", \"g\");\n\n    if (scrollableNativeRegexp.test(className)) {\n      this._$element.removeClass(className.match(scrollableNativeRegexp).join(\" \"));\n    }\n\n    eventsEngine.off(this._$element, \".\" + SCROLLABLE_NATIVE);\n    eventsEngine.off(this._$container, \".\" + SCROLLABLE_NATIVE);\n\n    this._removeScrollbars();\n\n    clearTimeout(this._hideScrollbarTimeout);\n  },\n  _removeScrollbars: function _removeScrollbars() {\n    this._eachScrollbar(function (scrollbar) {\n      scrollbar.$element().remove();\n    });\n  },\n  scrollBy: function scrollBy(distance) {\n    var location = this.location();\n\n    this._$container.scrollTop(Math.round(-location.top - distance.top));\n\n    this._$container.scrollLeft(Math.round(-location.left - distance.left));\n  },\n  validate: function validate(e) {\n    if (this.option(\"disabled\")) {\n      return false;\n    }\n\n    if (isDxMouseWheelEvent(e) && this._isScrolledInMaxDirection(e)) {\n      return false;\n    }\n\n    return !!this._allowedDirection();\n  },\n  _isScrolledInMaxDirection: function _isScrolledInMaxDirection(e) {\n    var container = this._$container.get(0);\n\n    var result;\n\n    if (e.delta > 0) {\n      result = e.shiftKey ? !container.scrollLeft : !container.scrollTop;\n    } else if (e.shiftKey) {\n      result = container.scrollLeft >= this._getMaxOffset().left;\n    } else {\n      result = container.scrollTop >= this._getMaxOffset().top;\n    }\n\n    return result;\n  },\n  getDirection: function getDirection() {\n    return this._allowedDirection();\n  }\n});\nexport default NativeStrategy;","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/devextreme/esm/ui/scroll_view/ui.scrollable.native.js"],"names":["getHeight","getWidth","$","eventsEngine","isDxMouseWheelEvent","noop","each","devices","Class","Scrollbar","SCROLLABLE_NATIVE","SCROLLABLE_NATIVE_CLASS","SCROLLABLE_SCROLLBAR_SIMULATED","SCROLLABLE_SCROLLBARS_HIDDEN","VERTICAL","HORIZONTAL","HIDE_SCROLLBAR_TIMEOUT","NativeStrategy","inherit","ctor","scrollable","_init","_component","_$element","$element","_$container","container","_$content","$content","_direction","option","_useSimulatedScrollbar","bind","_createActionByOption","_isLocked","_isDirection","_allowedDirection","_getMaxOffset","_isRtlNativeStrategy","render","device","real","deviceType","platform","addClass","toggleClass","_isScrollbarVisible","_renderScrollbars","updateRtlPosition","isFirstRender","_moveScrollbars","_scrollbars","_hideScrollbarTimeout","_renderScrollbar","direction","appendTo","expandable","handleInit","handleStart","handleMove","e","cancel","originalEvent","isScrollingEvent","handleEnd","handleCancel","handleStop","_eachScrollbar","callback","scrollbar","createActions","_scrollAction","_updateAction","_createActionArgs","location","left","top","event","_eventForUserAction","scrollOffset","_getScrollOffset","reachedLeft","_isReachedRight","_isReachedLeft","reachedRight","Math","abs","reachedTop","round","reachedBottom","_normalizeOffsetLeft","scrollLeft","showScrollbar","handleScroll","moveTo","_hideScrollbars","clearTimeout","setTimeout","scrollTop","disabledChanged","update","_update","_updateDimensions","_updateScrollbars","_containerSize","height","width","_componentContentSize","_contentSize","dimension","containerSize","contentSize","_allowedDirections","vertical","horizontal","dispose","className","get","scrollableNativeRegexp","RegExp","test","removeClass","match","join","off","_removeScrollbars","remove","scrollBy","distance","validate","_isScrolledInMaxDirection","result","delta","shiftKey","getDirection"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scroll_view/ui.scrollable.native.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getHeight,\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isDxMouseWheelEvent\r\n} from \"../../events/utils/index\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport devices from \"../../core/devices\";\r\nimport Class from \"../../core/class\";\r\nimport Scrollbar from \"./ui.scrollbar\";\r\nvar SCROLLABLE_NATIVE = \"dxNativeScrollable\";\r\nvar SCROLLABLE_NATIVE_CLASS = \"dx-scrollable-native\";\r\nvar SCROLLABLE_SCROLLBAR_SIMULATED = \"dx-scrollable-scrollbar-simulated\";\r\nvar SCROLLABLE_SCROLLBARS_HIDDEN = \"dx-scrollable-scrollbars-hidden\";\r\nvar VERTICAL = \"vertical\";\r\nvar HORIZONTAL = \"horizontal\";\r\nvar HIDE_SCROLLBAR_TIMEOUT = 500;\r\nvar NativeStrategy = Class.inherit({\r\n    ctor: function(scrollable) {\r\n        this._init(scrollable)\r\n    },\r\n    _init: function(scrollable) {\r\n        this._component = scrollable;\r\n        this._$element = scrollable.$element();\r\n        this._$container = $(scrollable.container());\r\n        this._$content = scrollable.$content();\r\n        this._direction = scrollable.option(\"direction\");\r\n        this._useSimulatedScrollbar = scrollable.option(\"useSimulatedScrollbar\");\r\n        this.option = scrollable.option.bind(scrollable);\r\n        this._createActionByOption = scrollable._createActionByOption.bind(scrollable);\r\n        this._isLocked = scrollable._isLocked.bind(scrollable);\r\n        this._isDirection = scrollable._isDirection.bind(scrollable);\r\n        this._allowedDirection = scrollable._allowedDirection.bind(scrollable);\r\n        this._getMaxOffset = scrollable._getMaxOffset.bind(scrollable);\r\n        this._isRtlNativeStrategy = scrollable._isRtlNativeStrategy.bind(scrollable)\r\n    },\r\n    render: function() {\r\n        var device = devices.real();\r\n        var deviceType = device.platform;\r\n        this._$element.addClass(SCROLLABLE_NATIVE_CLASS).addClass(SCROLLABLE_NATIVE_CLASS + \"-\" + deviceType).toggleClass(SCROLLABLE_SCROLLBARS_HIDDEN, !this._isScrollbarVisible());\r\n        if (this._isScrollbarVisible() && this._useSimulatedScrollbar) {\r\n            this._renderScrollbars()\r\n        }\r\n    },\r\n    updateRtlPosition: function(isFirstRender) {\r\n        if (isFirstRender && this.option(\"rtlEnabled\")) {\r\n            if (this._isScrollbarVisible() && this._useSimulatedScrollbar) {\r\n                this._moveScrollbars()\r\n            }\r\n        }\r\n    },\r\n    _renderScrollbars: function() {\r\n        this._scrollbars = {};\r\n        this._hideScrollbarTimeout = 0;\r\n        this._$element.addClass(SCROLLABLE_SCROLLBAR_SIMULATED);\r\n        this._renderScrollbar(VERTICAL);\r\n        this._renderScrollbar(HORIZONTAL)\r\n    },\r\n    _renderScrollbar: function(direction) {\r\n        if (!this._isDirection(direction)) {\r\n            return\r\n        }\r\n        this._scrollbars[direction] = new Scrollbar($(\"<div>\").appendTo(this._$element), {\r\n            direction: direction,\r\n            expandable: this._component.option(\"scrollByThumb\")\r\n        })\r\n    },\r\n    handleInit: noop,\r\n    handleStart: noop,\r\n    handleMove: function(e) {\r\n        if (this._isLocked()) {\r\n            e.cancel = true;\r\n            return\r\n        }\r\n        if (this._allowedDirection()) {\r\n            e.originalEvent.isScrollingEvent = true\r\n        }\r\n    },\r\n    handleEnd: noop,\r\n    handleCancel: noop,\r\n    handleStop: noop,\r\n    _eachScrollbar: function(callback) {\r\n        callback = callback.bind(this);\r\n        each(this._scrollbars || {}, (function(direction, scrollbar) {\r\n            callback(scrollbar, direction)\r\n        }))\r\n    },\r\n    createActions: function() {\r\n        this._scrollAction = this._createActionByOption(\"onScroll\");\r\n        this._updateAction = this._createActionByOption(\"onUpdated\")\r\n    },\r\n    _createActionArgs: function() {\r\n        var {\r\n            left: left,\r\n            top: top\r\n        } = this.location();\r\n        return {\r\n            event: this._eventForUserAction,\r\n            scrollOffset: this._getScrollOffset(),\r\n            reachedLeft: this._isRtlNativeStrategy() ? this._isReachedRight(-left) : this._isReachedLeft(left),\r\n            reachedRight: this._isRtlNativeStrategy() ? this._isReachedLeft(-Math.abs(left)) : this._isReachedRight(left),\r\n            reachedTop: this._isDirection(VERTICAL) ? Math.round(top) >= 0 : void 0,\r\n            reachedBottom: this._isDirection(VERTICAL) ? Math.round(Math.abs(top) - this._getMaxOffset().top) >= 0 : void 0\r\n        }\r\n    },\r\n    _getScrollOffset: function() {\r\n        var {\r\n            top: top,\r\n            left: left\r\n        } = this.location();\r\n        return {\r\n            top: -top,\r\n            left: this._normalizeOffsetLeft(-left)\r\n        }\r\n    },\r\n    _normalizeOffsetLeft(scrollLeft) {\r\n        if (this._isRtlNativeStrategy()) {\r\n            return this._getMaxOffset().left + scrollLeft\r\n        }\r\n        return scrollLeft\r\n    },\r\n    _isReachedLeft: function(left) {\r\n        return this._isDirection(HORIZONTAL) ? Math.round(left) >= 0 : void 0\r\n    },\r\n    _isReachedRight: function(left) {\r\n        return this._isDirection(HORIZONTAL) ? Math.round(Math.abs(left) - this._getMaxOffset().left) >= 0 : void 0\r\n    },\r\n    _isScrollbarVisible: function() {\r\n        var {\r\n            showScrollbar: showScrollbar\r\n        } = this.option();\r\n        return \"never\" !== showScrollbar && false !== showScrollbar\r\n    },\r\n    handleScroll: function(e) {\r\n        this._eventForUserAction = e;\r\n        this._moveScrollbars();\r\n        this._scrollAction(this._createActionArgs())\r\n    },\r\n    _moveScrollbars: function() {\r\n        var {\r\n            top: top,\r\n            left: left\r\n        } = this._getScrollOffset();\r\n        this._eachScrollbar((function(scrollbar) {\r\n            scrollbar.moveTo({\r\n                top: -top,\r\n                left: -left\r\n            });\r\n            scrollbar.option(\"visible\", true)\r\n        }));\r\n        this._hideScrollbars()\r\n    },\r\n    _hideScrollbars: function() {\r\n        clearTimeout(this._hideScrollbarTimeout);\r\n        this._hideScrollbarTimeout = setTimeout(function() {\r\n            this._eachScrollbar((function(scrollbar) {\r\n                scrollbar.option(\"visible\", false)\r\n            }))\r\n        }.bind(this), HIDE_SCROLLBAR_TIMEOUT)\r\n    },\r\n    location: function() {\r\n        return {\r\n            left: -this._$container.scrollLeft(),\r\n            top: -this._$container.scrollTop()\r\n        }\r\n    },\r\n    disabledChanged: noop,\r\n    update: function() {\r\n        this._update();\r\n        this._updateAction(this._createActionArgs())\r\n    },\r\n    _update: function() {\r\n        this._updateDimensions();\r\n        this._updateScrollbars()\r\n    },\r\n    _updateDimensions: function() {\r\n        this._containerSize = {\r\n            height: getHeight(this._$container),\r\n            width: getWidth(this._$container)\r\n        };\r\n        this._componentContentSize = {\r\n            height: getHeight(this._component.$content()),\r\n            width: getWidth(this._component.$content())\r\n        };\r\n        this._contentSize = {\r\n            height: getHeight(this._$content),\r\n            width: getWidth(this._$content)\r\n        }\r\n    },\r\n    _updateScrollbars: function() {\r\n        this._eachScrollbar((function(scrollbar, direction) {\r\n            var dimension = direction === VERTICAL ? \"height\" : \"width\";\r\n            scrollbar.option({\r\n                containerSize: this._containerSize[dimension],\r\n                contentSize: this._componentContentSize[dimension]\r\n            });\r\n            scrollbar.update()\r\n        }))\r\n    },\r\n    _allowedDirections: function() {\r\n        return {\r\n            vertical: this._isDirection(VERTICAL) && this._contentSize.height > this._containerSize.height,\r\n            horizontal: this._isDirection(HORIZONTAL) && this._contentSize.width > this._containerSize.width\r\n        }\r\n    },\r\n    dispose: function() {\r\n        var className = this._$element.get(0).className;\r\n        var scrollableNativeRegexp = new RegExp(SCROLLABLE_NATIVE_CLASS + \"\\\\S*\", \"g\");\r\n        if (scrollableNativeRegexp.test(className)) {\r\n            this._$element.removeClass(className.match(scrollableNativeRegexp).join(\" \"))\r\n        }\r\n        eventsEngine.off(this._$element, \".\" + SCROLLABLE_NATIVE);\r\n        eventsEngine.off(this._$container, \".\" + SCROLLABLE_NATIVE);\r\n        this._removeScrollbars();\r\n        clearTimeout(this._hideScrollbarTimeout)\r\n    },\r\n    _removeScrollbars: function() {\r\n        this._eachScrollbar((function(scrollbar) {\r\n            scrollbar.$element().remove()\r\n        }))\r\n    },\r\n    scrollBy: function(distance) {\r\n        var location = this.location();\r\n        this._$container.scrollTop(Math.round(-location.top - distance.top));\r\n        this._$container.scrollLeft(Math.round(-location.left - distance.left))\r\n    },\r\n    validate: function(e) {\r\n        if (this.option(\"disabled\")) {\r\n            return false\r\n        }\r\n        if (isDxMouseWheelEvent(e) && this._isScrolledInMaxDirection(e)) {\r\n            return false\r\n        }\r\n        return !!this._allowedDirection()\r\n    },\r\n    _isScrolledInMaxDirection(e) {\r\n        var container = this._$container.get(0);\r\n        var result;\r\n        if (e.delta > 0) {\r\n            result = e.shiftKey ? !container.scrollLeft : !container.scrollTop\r\n        } else if (e.shiftKey) {\r\n            result = container.scrollLeft >= this._getMaxOffset().left\r\n        } else {\r\n            result = container.scrollTop >= this._getMaxOffset().top\r\n        }\r\n        return result\r\n    },\r\n    getDirection: function() {\r\n        return this._allowedDirection()\r\n    }\r\n});\r\nexport default NativeStrategy;\r\n"]},"metadata":{},"sourceType":"module"}