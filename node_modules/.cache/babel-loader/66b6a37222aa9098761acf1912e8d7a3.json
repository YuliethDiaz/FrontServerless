{"ast":null,"code":"import _get from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { Component, findDOMfromVNode } from 'inferno';\nimport { InfernoEffectHost } from './effect_host';\n\nvar areObjectsEqual = function areObjectsEqual(firstObject, secondObject) {\n  var bothAreObjects = firstObject instanceof Object && secondObject instanceof Object;\n\n  if (!bothAreObjects) {\n    return firstObject === secondObject;\n  }\n\n  var firstObjectKeys = Object.keys(firstObject);\n  var secondObjectKeys = Object.keys(secondObject);\n\n  if (firstObjectKeys.length !== secondObjectKeys.length) {\n    return false;\n  }\n\n  var hasDifferentElement = firstObjectKeys.some(function (key) {\n    return firstObject[key] !== secondObject[key];\n  });\n  return !hasDifferentElement;\n};\n\nexport var BaseInfernoComponent = /*#__PURE__*/function (_Component) {\n  _inherits(BaseInfernoComponent, _Component);\n\n  var _super = _createSuper(BaseInfernoComponent);\n\n  function BaseInfernoComponent() {\n    var _this;\n\n    _classCallCheck(this, BaseInfernoComponent);\n\n    _this = _super.apply(this, arguments);\n    _this._pendingContext = _this.context;\n    return _this;\n  }\n\n  _createClass(BaseInfernoComponent, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_, context) {\n      this._pendingContext = context !== null && context !== void 0 ? context : {};\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      return !areObjectsEqual(this.props, nextProps) || !areObjectsEqual(this.state, nextState) || !areObjectsEqual(this.context, this._pendingContext);\n    }\n  }]);\n\n  return BaseInfernoComponent;\n}(Component);\nexport var InfernoComponent = /*#__PURE__*/function (_BaseInfernoComponent) {\n  _inherits(InfernoComponent, _BaseInfernoComponent);\n\n  var _super2 = _createSuper(InfernoComponent);\n\n  function InfernoComponent() {\n    var _this2;\n\n    _classCallCheck(this, InfernoComponent);\n\n    _this2 = _super2.apply(this, arguments);\n    _this2._effects = [];\n    return _this2;\n  }\n\n  _createClass(InfernoComponent, [{\n    key: \"createEffects\",\n    value: function createEffects() {\n      return [];\n    }\n  }, {\n    key: \"updateEffects\",\n    value: function updateEffects() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      InfernoEffectHost.lock();\n    } // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(_nextProps, _nextState, _context) {\n      InfernoEffectHost.lock();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      InfernoEffectHost.callbacks.push(function () {\n        _this3._effects = _this3.createEffects();\n      });\n      InfernoEffectHost.callEffects();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this4 = this;\n\n      InfernoEffectHost.callbacks.push(function () {\n        return _this4.updateEffects();\n      });\n      InfernoEffectHost.callEffects();\n    }\n  }, {\n    key: \"destroyEffects\",\n    value: function destroyEffects() {\n      this._effects.forEach(function (e) {\n        return e.dispose();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyEffects();\n    }\n  }]);\n\n  return InfernoComponent;\n}(BaseInfernoComponent);\nexport var InfernoWrapperComponent = /*#__PURE__*/function (_InfernoComponent) {\n  _inherits(InfernoWrapperComponent, _InfernoComponent);\n\n  var _super3 = _createSuper(InfernoWrapperComponent);\n\n  function InfernoWrapperComponent() {\n    var _this5;\n\n    _classCallCheck(this, InfernoWrapperComponent);\n\n    _this5 = _super3.apply(this, arguments);\n    _this5.vDomElement = null;\n    return _this5;\n  }\n\n  _createClass(InfernoWrapperComponent, [{\n    key: \"vDomUpdateClasses\",\n    value: function vDomUpdateClasses() {\n      var el = this.vDomElement;\n      var currentClasses = el.className.length ? el.className.split(' ') : [];\n      var addedClasses = currentClasses.filter(function (className) {\n        return el.dxClasses.previous.indexOf(className) < 0;\n      });\n      var removedClasses = el.dxClasses.previous.filter(function (className) {\n        return currentClasses.indexOf(className) < 0;\n      });\n      addedClasses.forEach(function (value) {\n        var indexInRemoved = el.dxClasses.removed.indexOf(value);\n\n        if (indexInRemoved > -1) {\n          el.dxClasses.removed.splice(indexInRemoved, 1);\n        } else {\n          el.dxClasses.added.push(value);\n        }\n      });\n      removedClasses.forEach(function (value) {\n        var indexInAdded = el.dxClasses.added.indexOf(value);\n\n        if (indexInAdded > -1) {\n          el.dxClasses.added.splice(indexInAdded, 1);\n        } else {\n          el.dxClasses.removed.push(value);\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var el = findDOMfromVNode(this.$LI, true);\n      this.vDomElement = el;\n\n      _get(_getPrototypeOf(InfernoWrapperComponent.prototype), \"componentDidMount\", this).call(this);\n\n      el.dxClasses = el.dxClasses || {\n        removed: [],\n        added: [],\n        previous: []\n      };\n      el.dxClasses.previous = (el === null || el === void 0 ? void 0 : el.className.length) ? el.className.split(' ') : [];\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      _get(_getPrototypeOf(InfernoWrapperComponent.prototype), \"componentDidUpdate\", this).call(this);\n\n      var el = this.vDomElement;\n\n      if (el !== null) {\n        el.dxClasses.added.forEach(function (className) {\n          return el.classList.add(className);\n        });\n        el.dxClasses.removed.forEach(function (className) {\n          return el.classList.remove(className);\n        });\n        el.dxClasses.previous = el.className.length ? el.className.split(' ') : [];\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      var shouldUpdate = _get(_getPrototypeOf(InfernoWrapperComponent.prototype), \"shouldComponentUpdate\", this).call(this, nextProps, nextState);\n\n      if (shouldUpdate) {\n        this.vDomUpdateClasses();\n      }\n\n      return shouldUpdate;\n    }\n  }]);\n\n  return InfernoWrapperComponent;\n}(InfernoComponent);","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/@devextreme/runtime/esm/inferno/base_component.js"],"names":["Component","findDOMfromVNode","InfernoEffectHost","areObjectsEqual","firstObject","secondObject","bothAreObjects","Object","firstObjectKeys","keys","secondObjectKeys","length","hasDifferentElement","some","key","BaseInfernoComponent","arguments","_pendingContext","context","_","nextProps","nextState","props","state","InfernoComponent","_effects","lock","_nextProps","_nextState","_context","callbacks","push","createEffects","callEffects","updateEffects","forEach","e","dispose","destroyEffects","InfernoWrapperComponent","vDomElement","el","currentClasses","className","split","addedClasses","filter","dxClasses","previous","indexOf","removedClasses","value","indexInRemoved","removed","splice","added","indexInAdded","$LI","classList","add","remove","shouldUpdate","vDomUpdateClasses"],"mappings":"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","sourcesContent":["import { Component, findDOMfromVNode } from 'inferno';\nimport { InfernoEffectHost } from './effect_host';\nconst areObjectsEqual = (firstObject, secondObject) => {\n    const bothAreObjects = firstObject instanceof Object && secondObject instanceof Object;\n    if (!bothAreObjects) {\n        return firstObject === secondObject;\n    }\n    const firstObjectKeys = Object.keys(firstObject);\n    const secondObjectKeys = Object.keys(secondObject);\n    if (firstObjectKeys.length !== secondObjectKeys.length) {\n        return false;\n    }\n    const hasDifferentElement = firstObjectKeys.some((key) => firstObject[key] !== secondObject[key]);\n    return !hasDifferentElement;\n};\nexport class BaseInfernoComponent extends Component {\n    constructor() {\n        super(...arguments);\n        this._pendingContext = this.context;\n    }\n    componentWillReceiveProps(_, context) {\n        this._pendingContext = context !== null && context !== void 0 ? context : {};\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return (!areObjectsEqual(this.props, nextProps)\n            || !areObjectsEqual(this.state, nextState)\n            || !areObjectsEqual(this.context, this._pendingContext));\n    }\n}\nexport class InfernoComponent extends BaseInfernoComponent {\n    constructor() {\n        super(...arguments);\n        this._effects = [];\n    }\n    createEffects() {\n        return [];\n    }\n    updateEffects() { }\n    componentWillMount() {\n        InfernoEffectHost.lock();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    componentWillUpdate(_nextProps, _nextState, _context) {\n        InfernoEffectHost.lock();\n    }\n    componentDidMount() {\n        InfernoEffectHost.callbacks.push(() => { this._effects = this.createEffects(); });\n        InfernoEffectHost.callEffects();\n    }\n    componentDidUpdate() {\n        InfernoEffectHost.callbacks.push(() => this.updateEffects());\n        InfernoEffectHost.callEffects();\n    }\n    destroyEffects() {\n        this._effects.forEach((e) => e.dispose());\n    }\n    componentWillUnmount() {\n        this.destroyEffects();\n    }\n}\nexport class InfernoWrapperComponent extends InfernoComponent {\n    constructor() {\n        super(...arguments);\n        this.vDomElement = null;\n    }\n    vDomUpdateClasses() {\n        const el = this.vDomElement;\n        const currentClasses = el.className.length\n            ? el.className.split(' ')\n            : [];\n        const addedClasses = currentClasses.filter((className) => el.dxClasses.previous.indexOf(className) < 0);\n        const removedClasses = el.dxClasses.previous.filter((className) => currentClasses.indexOf(className) < 0);\n        addedClasses.forEach((value) => {\n            const indexInRemoved = el.dxClasses.removed.indexOf(value);\n            if (indexInRemoved > -1) {\n                el.dxClasses.removed.splice(indexInRemoved, 1);\n            }\n            else {\n                el.dxClasses.added.push(value);\n            }\n        });\n        removedClasses.forEach((value) => {\n            const indexInAdded = el.dxClasses.added.indexOf(value);\n            if (indexInAdded > -1) {\n                el.dxClasses.added.splice(indexInAdded, 1);\n            }\n            else {\n                el.dxClasses.removed.push(value);\n            }\n        });\n    }\n    componentDidMount() {\n        const el = findDOMfromVNode(this.$LI, true);\n        this.vDomElement = el;\n        super.componentDidMount();\n        el.dxClasses = el.dxClasses || {\n            removed: [], added: [], previous: [],\n        };\n        el.dxClasses.previous = (el === null || el === void 0 ? void 0 : el.className.length) ? el.className.split(' ')\n            : [];\n    }\n    componentDidUpdate() {\n        super.componentDidUpdate();\n        const el = this.vDomElement;\n        if (el !== null) {\n            el.dxClasses.added.forEach((className) => el.classList.add(className));\n            el.dxClasses.removed.forEach((className) => el.classList.remove(className));\n            el.dxClasses.previous = el.className.length\n                ? el.className.split(' ')\n                : [];\n        }\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = super.shouldComponentUpdate(nextProps, nextState);\n        if (shouldUpdate) {\n            this.vDomUpdateClasses();\n        }\n        return shouldUpdate;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}