{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal\\\\Tracker\\\\FrontServerless\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { Route, Routes, Link, Outlet } from 'react-router-dom';\nimport useToken from \"./components/Hooks/useToken\";\nimport Layout from './components/Home/Layout';\nimport ClientTable from './components/Client/ClientTable';\nimport CreateClient from './components/Client/CreateClient';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const urlSearchParams = new URLSearchParams(window.location.hash);\n  const params = Object.fromEntries(urlSearchParams.entries());\n  const API_URL = process.env.REACT_APP_SERVER_URL;\n  const LOGIN = process.env.REACT_APP_LOGIN_URL;\n  const {\n    Token,\n    setToken\n  } = useToken();\n  const [userData, setUserData] = useState([]);\n\n  if (Token == null || Token == \"\") {\n    if (params[\"#id_token\"] != undefined) {\n      setToken(params[\"#id_token\"]);\n    }\n  }\n\n  useEffect(() => {\n    var TokenValue = Token.value ? Token.value : Token;\n    axios.get(API_URL + '/token', {\n      params: {\n        \"encoded_str\": '\"' + TokenValue + '\"'\n      }\n    }).then(response => {\n      var dataResult = JSON.parse(JSON.stringify(response.data));\n\n      if (dataResult.errorMessage !== undefined) {\n        if (dataResult.errorMessage) {\n          swal({\n            title: \"Error\",\n            text: \"Not authorized\",\n            icon: \"error\"\n          }).then(() => {\n            window.localStorage.clear();\n            window.location.href = LOGIN;\n          });\n        }\n      } else {\n        setUserData(dataResult);\n      }\n    });\n  }, [Token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          user: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 32\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/clients\",\n          element: /*#__PURE__*/_jsxDEV(ClientTable, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/clients/create\",\n          element: /*#__PURE__*/_jsxDEV(CreateClient, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qOvu4FUbWcFNo25sN34LVQpiPFk=\", false, function () {\n  return [useToken];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Personal/Tracker/FrontServerless/src/App.jsx"],"names":["React","Fragment","useEffect","useState","Route","Routes","Link","Outlet","useToken","Layout","ClientTable","CreateClient","axios","swal","App","urlSearchParams","URLSearchParams","window","location","hash","params","Object","fromEntries","entries","API_URL","process","env","REACT_APP_SERVER_URL","LOGIN","REACT_APP_LOGIN_URL","Token","setToken","userData","setUserData","undefined","TokenValue","value","get","then","response","dataResult","JSON","parse","stringify","data","errorMessage","title","text","icon","localStorage","clear","href"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,EAAeC,MAAf,EAAsBC,IAAtB,EAA2BC,MAA3B,QAAyC,kBAAzC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AAGf,QAAMC,eAAe,GAAG,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,IAApC,CAAxB;AACA,QAAMC,MAAM,GAAGC,MAAM,CAACC,WAAP,CAAmBP,eAAe,CAACQ,OAAhB,EAAnB,CAAf;AACA,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA5B;AACA,QAAMC,KAAK,GAAEH,OAAO,CAACC,GAAR,CAAYG,mBAAzB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBvB,QAAQ,EAApC;AACA,QAAM,CAACwB,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,EAAD,CAAxC;;AAEA,MAAG2B,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAI,EAA7B,EAAiC;AAC/B,QAAGV,MAAM,CAAC,WAAD,CAAN,IAAuBc,SAA1B,EAAoC;AACjCH,MAAAA,QAAQ,CAACX,MAAM,CAAC,WAAD,CAAP,CAAR;AACF;AACH;;AAEElB,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIiC,UAAU,GAAGL,KAAK,CAACM,KAAN,GAAcN,KAAK,CAACM,KAApB,GAA4BN,KAA7C;AAEDlB,IAAAA,KAAK,CAACyB,GAAN,CAAUb,OAAO,GAAC,QAAlB,EAA4B;AAC3BJ,MAAAA,MAAM,EAAE;AACN,uBAAc,MAAIe,UAAJ,GAAe;AADvB;AADmB,KAA5B,EAIQG,IAJR,CAIaC,QAAQ,IAAI;AAElB,UAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,CAAX,CAAjB;;AACA,UAAGJ,UAAU,CAACK,YAAX,KAA4BX,SAA/B,EAA0C;AACtC,YAAGM,UAAU,CAACK,YAAd,EAA2B;AACzBhC,UAAAA,IAAI,CAAC;AACDiC,YAAAA,KAAK,EAAC,OADL;AAEDC,YAAAA,IAAI,EAAC,gBAFJ;AAGDC,YAAAA,IAAI,EAAE;AAHL,WAAD,CAAJ,CAIKV,IAJL,CAIU,MAAM;AACZrB,YAAAA,MAAM,CAACgC,YAAP,CAAoBC,KAApB;AACAjC,YAAAA,MAAM,CAACC,QAAP,CAAgBiC,IAAhB,GAAuBvB,KAAvB;AAED,WARH;AAWD;AACJ,OAdD,MAcK;AAEHK,QAAAA,WAAW,CAACO,UAAD,CAAX;AACD;AAGF,KA3BN;AA6BI,GAjCI,EAiCF,CAACV,KAAD,CAjCE,CAAT;AAoCF,sBACE;AAAA,2BAKE,QAAC,MAAD;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAGE;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAzB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,OAAO,eAAE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,iBAAZ;AAA8B,UAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArED;;GAAMlB,G;UAOwBN,Q;;;KAPxBM,G;AAuEN,eAAeA,GAAf","sourcesContent":["import React ,{Fragment,useEffect, useState } from 'react'\r\nimport { Route,Routes,Link,Outlet } from 'react-router-dom';\r\nimport useToken from \"./components/Hooks/useToken\";\r\nimport Layout from './components/Home/Layout';\r\nimport ClientTable from './components/Client/ClientTable';\r\nimport CreateClient from './components/Client/CreateClient';\r\nimport axios from 'axios'\r\nimport swal from 'sweetalert';\r\n\r\nconst App = () =>{\r\n\r\n\r\n  const urlSearchParams = new URLSearchParams(window.location.hash);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;    \r\n  const LOGIN =process.env.REACT_APP_LOGIN_URL;\r\n  const { Token, setToken } = useToken();\r\n  const [userData, setUserData] = useState([])\r\n\r\n  if(Token == null || Token == \"\") {\r\n    if(params[\"#id_token\"] != undefined){\r\n       setToken(params[\"#id_token\"])\r\n    }\r\n }\r\n \r\n    useEffect(() => {\r\n    \r\n      var TokenValue = Token.value ? Token.value : Token;\r\n\r\n     axios.get(API_URL+'/token', {\r\n      params: {\r\n        \"encoded_str\":'\"'+TokenValue+'\"'\r\n      }\r\n          }).then(response => { \r\n\r\n            var dataResult = JSON.parse(JSON.stringify(response.data));    \r\n            if(dataResult.errorMessage !== undefined ){\r\n                if(dataResult.errorMessage){\r\n                  swal({  \r\n                      title:\"Error\",\r\n                      text:\"Not authorized\",\r\n                      icon: \"error\"\r\n                    }).then(() => {\r\n                      window.localStorage.clear();\r\n                      window.location.href = LOGIN; \r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }else{\r\n\r\n              setUserData(dataResult)\r\n            }\r\n                  \r\n          \r\n          })  \r\n            \r\n        }, [Token]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n     \r\n\r\n\r\n      <Routes>\r\n      <Route path=\"/\" element={<Layout user ={userData}/>} >\r\n        <Route path=\"/clients\" element={<ClientTable />} ></Route>\r\n        <Route path=\"/clients/create\" element={<CreateClient />} ></Route>\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}