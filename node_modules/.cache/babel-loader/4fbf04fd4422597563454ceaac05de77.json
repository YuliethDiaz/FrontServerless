{"ast":null,"code":"import _classCallCheck from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/editors/check_box/check_box_icon.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"isChecked\", \"size\"];\nimport { createVNode } from \"inferno\";\nimport { InfernoEffect, InfernoComponent, normalizeStyles } from \"@devextreme/runtime/inferno\";\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\nimport { hasWindow } from \"../../../../core/utils/window\";\nimport { normalizeStyleProp } from \"../../../../core/utils/style\";\nimport { isNumeric as isNumber } from \"../../../../core/utils/type\";\nimport { getFontSizeByIconSize } from \"./utils\";\nexport var viewFunction = function viewFunction(viewModel) {\n  var cssStyles = viewModel.cssStyles,\n      elementRef = viewModel.elementRef;\n  return createVNode(1, \"span\", \"dx-checkbox-icon\", null, 1, {\n    style: normalizeStyles(cssStyles)\n  }, null, elementRef);\n};\nexport var CheckBoxIconProps = {\n  isChecked: false\n};\nimport { createRef as infernoCreateRef } from \"inferno\";\nexport var CheckBoxIcon = /*#__PURE__*/function (_InfernoComponent) {\n  _inherits(CheckBoxIcon, _InfernoComponent);\n\n  var _super = _createSuper(CheckBoxIcon);\n\n  function CheckBoxIcon(props) {\n    var _this;\n\n    _classCallCheck(this, CheckBoxIcon);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.elementRef = infernoCreateRef();\n    _this.__getterCache = {};\n    _this.updateFontSize = _this.updateFontSize.bind(_assertThisInitialized(_this));\n    _this.setIconFontSize = _this.setIconFontSize.bind(_assertThisInitialized(_this));\n    _this.getIconSize = _this.getIconSize.bind(_assertThisInitialized(_this));\n    _this.getComputedIconSize = _this.getComputedIconSize.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CheckBoxIcon, [{\n    key: \"createEffects\",\n    value: function createEffects() {\n      return [new InfernoEffect(this.updateFontSize, [this.props.isChecked, this.props.size])];\n    }\n  }, {\n    key: \"updateEffects\",\n    value: function updateEffects() {\n      var _this$_effects$;\n\n      null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.isChecked, this.props.size]);\n    }\n  }, {\n    key: \"updateFontSize\",\n    value: function updateFontSize() {\n      var _this$props2 = this.props,\n          isChecked = _this$props2.isChecked,\n          size = _this$props2.size;\n\n      if (hasWindow() && size) {\n        var newIconSize = this.getIconSize(size);\n        var newFontSize = getFontSizeByIconSize(newIconSize, isChecked);\n        this.setIconFontSize(newFontSize);\n      }\n    }\n  }, {\n    key: \"setIconFontSize\",\n    value: function setIconFontSize(fontSize) {\n      var element = this.elementRef.current;\n      element.style.fontSize = \"\".concat(fontSize, \"px\");\n    }\n  }, {\n    key: \"getIconSize\",\n    value: function getIconSize(size) {\n      if (isNumber(size)) {\n        return size;\n      }\n\n      if (size.endsWith(\"px\")) {\n        return parseInt(size, 10);\n      }\n\n      return this.getComputedIconSize();\n    }\n  }, {\n    key: \"getComputedIconSize\",\n    value: function getComputedIconSize() {\n      var element = this.elementRef.current;\n      var iconComputedStyle = getElementComputedStyle(element);\n      var computedIconSize = parseInt(null === iconComputedStyle || void 0 === iconComputedStyle ? void 0 : iconComputedStyle.width, 10);\n      return computedIconSize;\n    }\n  }, {\n    key: \"cssStyles\",\n    get: function get() {\n      var _this2 = this;\n\n      if (void 0 !== this.__getterCache.cssStyles) {\n        return this.__getterCache.cssStyles;\n      }\n\n      return this.__getterCache.cssStyles = function () {\n        var size = _this2.props.size;\n        var width = normalizeStyleProp(\"width\", size);\n        var height = normalizeStyleProp(\"height\", size);\n        return {\n          height: height,\n          width: width\n        };\n      }();\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState, context) {\n      _get(_getPrototypeOf(CheckBoxIcon.prototype), \"componentWillUpdate\", this).call(this);\n\n      if (this.props.size !== nextProps.size) {\n        this.__getterCache.cssStyles = void 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props),\n        elementRef: this.elementRef,\n        setIconFontSize: this.setIconFontSize,\n        getIconSize: this.getIconSize,\n        getComputedIconSize: this.getComputedIconSize,\n        cssStyles: this.cssStyles,\n        restAttributes: this.restAttributes\n      });\n    }\n  }]);\n\n  return CheckBoxIcon;\n}(InfernoComponent);\nCheckBoxIcon.defaultProps = CheckBoxIconProps;","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/devextreme/esm/renovation/ui/editors/check_box/check_box_icon.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","createVNode","InfernoEffect","InfernoComponent","normalizeStyles","getElementComputedStyle","hasWindow","normalizeStyleProp","isNumeric","isNumber","getFontSizeByIconSize","viewFunction","viewModel","cssStyles","elementRef","style","CheckBoxIconProps","isChecked","createRef","infernoCreateRef","CheckBoxIcon","props","state","__getterCache","updateFontSize","bind","setIconFontSize","getIconSize","getComputedIconSize","size","_this$_effects$","_effects","update","newIconSize","newFontSize","fontSize","element","current","concat","endsWith","parseInt","iconComputedStyle","computedIconSize","width","height","_this$props","restProps","nextProps","nextState","context","restAttributes","defaultProps"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/editors/check_box/check_box_icon.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nvar _excluded = [\"isChecked\", \"size\"];\r\nimport {\r\n    createVNode\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent,\r\n    normalizeStyles\r\n} from \"@devextreme/runtime/inferno\";\r\nimport getElementComputedStyle from \"../../../utils/get_computed_style\";\r\nimport {\r\n    hasWindow\r\n} from \"../../../../core/utils/window\";\r\nimport {\r\n    normalizeStyleProp\r\n} from \"../../../../core/utils/style\";\r\nimport {\r\n    isNumeric as isNumber\r\n} from \"../../../../core/utils/type\";\r\nimport {\r\n    getFontSizeByIconSize\r\n} from \"./utils\";\r\nexport var viewFunction = viewModel => {\r\n    var {\r\n        cssStyles: cssStyles,\r\n        elementRef: elementRef\r\n    } = viewModel;\r\n    return createVNode(1, \"span\", \"dx-checkbox-icon\", null, 1, {\r\n        style: normalizeStyles(cssStyles)\r\n    }, null, elementRef)\r\n};\r\nexport var CheckBoxIconProps = {\r\n    isChecked: false\r\n};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nexport class CheckBoxIcon extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.elementRef = infernoCreateRef();\r\n        this.__getterCache = {};\r\n        this.updateFontSize = this.updateFontSize.bind(this);\r\n        this.setIconFontSize = this.setIconFontSize.bind(this);\r\n        this.getIconSize = this.getIconSize.bind(this);\r\n        this.getComputedIconSize = this.getComputedIconSize.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.updateFontSize, [this.props.isChecked, this.props.size])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.props.isChecked, this.props.size])\r\n    }\r\n    updateFontSize() {\r\n        var {\r\n            isChecked: isChecked,\r\n            size: size\r\n        } = this.props;\r\n        if (hasWindow() && size) {\r\n            var newIconSize = this.getIconSize(size);\r\n            var newFontSize = getFontSizeByIconSize(newIconSize, isChecked);\r\n            this.setIconFontSize(newFontSize)\r\n        }\r\n    }\r\n    setIconFontSize(fontSize) {\r\n        var element = this.elementRef.current;\r\n        element.style.fontSize = \"\".concat(fontSize, \"px\")\r\n    }\r\n    getIconSize(size) {\r\n        if (isNumber(size)) {\r\n            return size\r\n        }\r\n        if (size.endsWith(\"px\")) {\r\n            return parseInt(size, 10)\r\n        }\r\n        return this.getComputedIconSize()\r\n    }\r\n    getComputedIconSize() {\r\n        var element = this.elementRef.current;\r\n        var iconComputedStyle = getElementComputedStyle(element);\r\n        var computedIconSize = parseInt(null === iconComputedStyle || void 0 === iconComputedStyle ? void 0 : iconComputedStyle.width, 10);\r\n        return computedIconSize\r\n    }\r\n    get cssStyles() {\r\n        if (void 0 !== this.__getterCache.cssStyles) {\r\n            return this.__getterCache.cssStyles\r\n        }\r\n        return this.__getterCache.cssStyles = (() => {\r\n            var {\r\n                size: size\r\n            } = this.props;\r\n            var width = normalizeStyleProp(\"width\", size);\r\n            var height = normalizeStyleProp(\"height\", size);\r\n            return {\r\n                height: height,\r\n                width: width\r\n            }\r\n        })()\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    componentWillUpdate(nextProps, nextState, context) {\r\n        super.componentWillUpdate();\r\n        if (this.props.size !== nextProps.size) {\r\n            this.__getterCache.cssStyles = void 0\r\n        }\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props),\r\n            elementRef: this.elementRef,\r\n            setIconFontSize: this.setIconFontSize,\r\n            getIconSize: this.getIconSize,\r\n            getComputedIconSize: this.getComputedIconSize,\r\n            cssStyles: this.cssStyles,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nCheckBoxIcon.defaultProps = CheckBoxIconProps;\r\n"]},"metadata":{},"sourceType":"module"}