{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport gridCore from \"../data_grid/ui.data_grid.core\";\nimport { executeAsync, getKeyHash } from \"../../core/utils/common\";\nimport { isDefined, isPlainObject, isFunction } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport ArrayStore from \"../../data/array_store\";\nimport { applyBatch } from \"../../data/array_utils\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nexport default gridCore.Controller.inherit(function () {\n  function cloneItems(items, groupCount) {\n    if (items) {\n      items = items.slice(0);\n\n      if (groupCount) {\n        for (var i = 0; i < items.length; i++) {\n          items[i] = extend({\n            key: items[i].key\n          }, items[i]);\n          items[i].items = cloneItems(items[i].items, groupCount - 1);\n        }\n      }\n    }\n\n    return items;\n  }\n\n  function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\n    var operationTypes = {\n      reload: true,\n      fullReload: true\n    };\n\n    if (lastLoadOptions) {\n      operationTypes = {\n        sorting: !gridCore.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\n        grouping: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\n        groupExpanding: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\n        filtering: !gridCore.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\n        pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\n        skip: loadOptions.skip !== lastLoadOptions.skip,\n        take: loadOptions.take !== lastLoadOptions.take,\n        pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\n        fullReload: isFullReload\n      };\n      operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\n      operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take;\n    }\n\n    return operationTypes;\n  }\n\n  function getPageDataFromCache(options, updatePaging) {\n    var groupCount = gridCore.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\n    var items = [];\n\n    if (fillItemsFromCache(items, options, groupCount)) {\n      return items;\n    } else if (updatePaging) {\n      !function (cacheItemsFromBegin, options, groupCount) {\n        var cacheItemBeginCount = cacheItemsFromBegin.length;\n        var {\n          storeLoadOptions: storeLoadOptions\n        } = options;\n\n        if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\n          var cacheItemsFromEnd = [];\n          fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\n          var cacheItemEndCount = cacheItemsFromEnd.length;\n\n          if (cacheItemBeginCount || cacheItemEndCount) {\n            var _options$skip2, _options$take2;\n\n            options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\n            options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take;\n          }\n\n          if (cacheItemBeginCount) {\n            storeLoadOptions.skip += cacheItemBeginCount;\n            storeLoadOptions.take -= cacheItemBeginCount;\n            options.cachedDataPartBegin = cacheItemsFromBegin;\n          }\n\n          if (cacheItemEndCount) {\n            storeLoadOptions.take -= cacheItemEndCount;\n            options.cachedDataPartEnd = cacheItemsFromEnd.reverse();\n          }\n        }\n      }(items, options, groupCount);\n    }\n  }\n\n  function fillItemsFromCache(items, options, groupCount, fromEnd) {\n    var _ref, _options$take, _options$cachedData;\n\n    var {\n      storeLoadOptions: storeLoadOptions\n    } = options;\n    var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\n    var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\n\n    if (take && cachedItems) {\n      var _ref2, _options$skip;\n\n      var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\n\n      for (var i = 0; i < take; i++) {\n        var localIndex = fromEnd ? take - 1 - i : i;\n        var cacheItemIndex = localIndex + skip;\n        var cacheItem = cachedItems[cacheItemIndex];\n\n        if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\n          return true;\n        }\n\n        var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\n\n        if (item) {\n          items.push(item);\n        } else {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function getItemFromCache(options, cacheItem, groupCount, index, take) {\n    if (groupCount && cacheItem) {\n      var skips = 0 === index && options.skips || [];\n      var takes = index === take - 1 && options.takes || [];\n      return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\n        if (groupCount && cacheItem) {\n          var result = _extends({}, cacheItem);\n\n          var skip = skips[0] || 0;\n          var take = takes[0];\n          var items = cacheItem.items;\n\n          if (items) {\n            if (void 0 === take && !items[skip]) {\n              return;\n            }\n\n            result.items = [];\n\n            if (skips.length) {\n              result.isContinuation = true;\n            }\n\n            if (takes.length) {\n              result.isContinuationOnNextPage = true;\n            }\n\n            for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\n              var childCacheItem = items[i + skip];\n              var item = getGroupItemFromCache(childCacheItem, groupCount - 1, skips.slice(1), takes.slice(1));\n\n              if (void 0 !== item) {\n                result.items.push(item);\n              } else {\n                return;\n              }\n            }\n          }\n\n          return result;\n        }\n\n        return cacheItem;\n      }(cacheItem, groupCount, skips, takes);\n    } else {\n      return cacheItem;\n    }\n  }\n\n  function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\n    if (groupCount && loadedItem) {\n      var result = _extends({}, loadedItem);\n\n      delete result.isContinuation;\n      delete result.isContinuationOnNextPage;\n      var skip = skips[0] || 0;\n\n      if (loadedItem.items) {\n        result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\n        loadedItem.items.forEach((item, index) => {\n          var globalIndex = index + skip;\n          var childSkips = 0 === index ? skips.slice(1) : [];\n          result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips);\n        });\n      }\n\n      return result;\n    }\n\n    return loadedItem;\n  }\n\n  return {\n    init: function (dataSource, remoteOperations) {\n      var that = this;\n      that._dataSource = dataSource;\n      that._remoteOperations = remoteOperations || {};\n      that._isLastPage = !dataSource.isLastPage();\n      that._hasLastPage = false;\n      that._currentTotalCount = 0;\n      that._cachedData = {\n        items: {}\n      };\n      that._lastOperationTypes = {};\n      that._eventsStrategy = dataSource._eventsStrategy;\n      that._totalCountCorrection = 0;\n      that._isLoadingAll = false;\n      that.changed = Callbacks();\n      that.loadingChanged = Callbacks();\n      that.loadError = Callbacks();\n      that.customizeStoreLoadOptions = Callbacks();\n      that.changing = Callbacks();\n      that.pushed = Callbacks();\n      that._dataChangedHandler = that._handleDataChanged.bind(that);\n      that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\n      that._dataLoadedHandler = that._handleDataLoaded.bind(that);\n      that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\n      that._loadErrorHandler = that._handleLoadError.bind(that);\n      that._pushHandler = that._handlePush.bind(that);\n      that._changingHandler = that._handleChanging.bind(that);\n      dataSource.on(\"changed\", that._dataChangedHandler);\n      dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\n      dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\n      dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\n      dataSource.on(\"loadError\", that._loadErrorHandler);\n      dataSource.on(\"changing\", that._changingHandler);\n      dataSource.store().on(\"beforePush\", that._pushHandler);\n      each(dataSource, function (memberName, member) {\n        if (!that[memberName] && isFunction(member)) {\n          that[memberName] = function () {\n            return this._dataSource[memberName].apply(this._dataSource, arguments);\n          };\n        }\n      });\n    },\n    remoteOperations: function () {\n      return this._remoteOperations;\n    },\n    dispose: function (isSharedDataSource) {\n      var dataSource = this._dataSource;\n      var store = dataSource.store();\n      dataSource.off(\"changed\", this._dataChangedHandler);\n      dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\n      dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\n      dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\n      dataSource.off(\"loadError\", this._loadErrorHandler);\n      dataSource.off(\"changing\", this._changingHandler);\n      store && store.off(\"beforePush\", this._pushHandler);\n\n      if (!isSharedDataSource) {\n        dataSource.dispose();\n      }\n    },\n    refresh: function (options, operationTypes) {\n      var dataSource = this._dataSource;\n\n      if (operationTypes.reload) {\n        this.resetCurrentTotalCount();\n        this._isLastPage = !dataSource.paginate();\n        this._hasLastPage = this._isLastPage;\n      }\n    },\n    resetCurrentTotalCount: function () {\n      this._currentTotalCount = 0;\n      this._totalCountCorrection = 0;\n    },\n    resetCache: function () {\n      this._cachedStoreData = void 0;\n      this._cachedPagingData = void 0;\n    },\n    resetPagesCache: function () {\n      this._cachedData = {\n        items: {}\n      };\n    },\n    _needClearStoreDataCache: function () {\n      var remoteOperations = this.remoteOperations();\n      var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\n      var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\n      return !isLocalOperations;\n    },\n    push: function (changes, fromStore) {\n      var store = this.store();\n\n      if (this._needClearStoreDataCache()) {\n        this._cachedStoreData = void 0;\n      }\n\n      this._cachedPagingData = void 0;\n      this.resetPagesCache(true);\n\n      if (this._cachedStoreData) {\n        applyBatch({\n          keyInfo: store,\n          data: this._cachedStoreData,\n          changes: changes\n        });\n      }\n\n      if (!fromStore) {\n        this._applyBatch(changes);\n      }\n\n      this.pushed.fire(changes);\n    },\n    getDataIndexGetter: function () {\n      if (!this._dataIndexGetter) {\n        var indexByKey;\n        var storeData;\n        var store = this.store();\n\n        this._dataIndexGetter = data => {\n          var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\n\n          if (!indexByKey || isCacheUpdated) {\n            storeData = this._cachedStoreData || [];\n            indexByKey = {};\n\n            for (var i = 0; i < storeData.length; i++) {\n              indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i;\n            }\n          }\n\n          return indexByKey[getKeyHash(store.keyOf(data))];\n        };\n      }\n\n      return this._dataIndexGetter;\n    },\n    _getKeyInfo: function () {\n      return this.store();\n    },\n    _applyBatch: function (changes) {\n      var keyInfo = this._getKeyInfo();\n\n      var dataSource = this._dataSource;\n      var groupCount = gridCore.normalizeSortingInfo(this.group()).length;\n      var totalCount = this.totalCount();\n      var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\n      changes = changes.filter(function (change) {\n        return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index;\n      });\n\n      var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\n\n      var oldItemCount = getItemCount();\n      applyBatch({\n        keyInfo: keyInfo,\n        data: this._items,\n        changes: changes,\n        groupCount: groupCount,\n        useInsertIndex: true\n      });\n      applyBatch({\n        keyInfo: keyInfo,\n        data: dataSource.items(),\n        changes: changes,\n        groupCount: groupCount,\n        useInsertIndex: true\n      });\n\n      if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\n        this._totalCountCorrection += getItemCount() - oldItemCount;\n      }\n\n      changes.splice(0, changes.length);\n    },\n    _handlePush: function (_ref5) {\n      var {\n        changes: changes\n      } = _ref5;\n      this.push(changes, true);\n    },\n    _handleChanging: function (e) {\n      this.changing.fire(e);\n\n      this._applyBatch(e.changes);\n    },\n    _needCleanCacheByOperation: function (operationType, remoteOperations) {\n      var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\n      var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\n      var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\n      return currentOperationTypes.some(operationType => remoteOperations[operationType]);\n    },\n    _customizeRemoteOperations: function (options, operationTypes) {\n      var cachedStoreData = this._cachedStoreData;\n      var cachedPagingData = this._cachedPagingData;\n      var cachedData = this._cachedData;\n\n      if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\n        options.remoteOperations = {\n          filtering: options.remoteOperations.filtering\n        };\n      }\n\n      if (operationTypes.fullReload) {\n        cachedStoreData = void 0;\n        cachedPagingData = void 0;\n        cachedData = {\n          items: {}\n        };\n      } else {\n        if (operationTypes.reload) {\n          cachedPagingData = void 0;\n          cachedData = {\n            items: {}\n          };\n        } else if (operationTypes.groupExpanding) {\n          cachedData = {\n            items: {}\n          };\n        }\n\n        each(operationTypes, (operationType, value) => {\n          if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\n            cachedStoreData = void 0;\n            cachedPagingData = void 0;\n          }\n        });\n      }\n\n      if (cachedPagingData) {\n        options.remoteOperations.paging = false;\n      }\n\n      options.cachedStoreData = cachedStoreData;\n      options.cachedPagingData = cachedPagingData;\n      options.cachedData = cachedData;\n\n      if (!options.isCustomLoading) {\n        this._cachedStoreData = cachedStoreData;\n        this._cachedPagingData = cachedPagingData;\n        this._cachedData = cachedData;\n      }\n    },\n\n    _handleCustomizeStoreLoadOptions(options) {\n      this._handleDataLoading(options);\n\n      options.data = getPageDataFromCache(options, true) || options.cachedStoreData;\n    },\n\n    _handleDataLoading: function (options) {\n      var dataSource = this._dataSource;\n      var lastLoadOptions = this._lastLoadOptions;\n      this.customizeStoreLoadOptions.fire(options);\n      options.delay = this.option(\"loadingTimeout\");\n      options.originalStoreLoadOptions = options.storeLoadOptions;\n      options.remoteOperations = extend({}, this.remoteOperations());\n      var isFullReload = !this.isLoaded() && !this._isRefreshing;\n\n      if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\n        options.delay = void 0;\n      }\n\n      var loadOptions = extend({\n        pageIndex: this.pageIndex(),\n        pageSize: this.pageSize()\n      }, options.storeLoadOptions);\n      var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\n\n      this._customizeRemoteOperations(options, operationTypes);\n\n      if (!options.isCustomLoading) {\n        var isRefreshing = this._isRefreshing;\n        options.pageIndex = dataSource.pageIndex();\n        options.lastLoadOptions = loadOptions;\n        options.operationTypes = operationTypes;\n        this._loadingOperationTypes = operationTypes;\n        this._isRefreshing = true;\n        when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\n          if (this._lastOperationId === options.operationId) {\n            this._isRefreshed = true;\n            this.load().always(() => {\n              this._isRefreshed = false;\n            });\n          }\n        }).fail(() => {\n          dataSource.cancel(options.operationId);\n        }).always(() => {\n          this._isRefreshing = false;\n        });\n        dataSource.cancel(this._lastOperationId);\n        this._lastOperationId = options.operationId;\n\n        if (this._isRefreshing) {\n          dataSource.cancel(this._lastOperationId);\n        }\n      }\n\n      this._handleDataLoadingCore(options);\n    },\n    _handleDataLoadingCore: function (options) {\n      var remoteOperations = options.remoteOperations;\n      options.loadOptions = {};\n      var cachedExtra = options.cachedData.extra;\n      var localLoadOptionNames = {\n        filter: !remoteOperations.filtering,\n        sort: !remoteOperations.sorting,\n        group: !remoteOperations.grouping,\n        summary: !remoteOperations.summary,\n        skip: !remoteOperations.paging,\n        take: !remoteOperations.paging,\n        requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\n      };\n      each(options.storeLoadOptions, function (optionName, optionValue) {\n        if (localLoadOptionNames[optionName]) {\n          options.loadOptions[optionName] = optionValue;\n          delete options.storeLoadOptions[optionName];\n        }\n      });\n\n      if (cachedExtra) {\n        options.extra = cachedExtra;\n      }\n    },\n    _handleDataLoaded: function (options) {\n      var loadOptions = options.loadOptions;\n      var localPaging = options.remoteOperations && !options.remoteOperations.paging;\n      var cachedData = options.cachedData;\n      var storeLoadOptions = options.storeLoadOptions;\n      var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\n      var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\n      var needPagingCache = needCache && localPaging;\n      var needStoreCache = needPagingCache && !options.isCustomLoading;\n\n      if (!loadOptions) {\n        this._dataSource.cancel(options.operationId);\n\n        return;\n      }\n\n      if (localPaging) {\n        options.skip = loadOptions.skip;\n        options.take = loadOptions.take;\n        delete loadOptions.skip;\n        delete loadOptions.take;\n      }\n\n      if (loadOptions.group) {\n        loadOptions.group = options.group || loadOptions.group;\n      }\n\n      var groupCount = gridCore.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\n\n      if (options.cachedDataPartBegin) {\n        options.data = options.cachedDataPartBegin.concat(options.data);\n      }\n\n      if (options.cachedDataPartEnd) {\n        options.data = options.data.concat(options.cachedDataPartEnd);\n      }\n\n      if (!needPageCache || !getPageDataFromCache(options)) {\n        if (needPagingCache && options.cachedPagingData) {\n          options.data = cloneItems(options.cachedPagingData, groupCount);\n        } else {\n          if (needStoreCache) {\n            if (!this._cachedStoreData) {\n              this._cachedStoreData = cloneItems(options.data, gridCore.normalizeSortingInfo(storeLoadOptions.group).length);\n            } else if (options.mergeStoreLoadData) {\n              options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data);\n            }\n          }\n\n          new ArrayStore(options.data).load(loadOptions).done(data => {\n            options.data = data;\n\n            if (needStoreCache) {\n              this._cachedPagingData = cloneItems(options.data, groupCount);\n            }\n          }).fail(error => {\n            options.data = new Deferred().reject(error);\n          });\n        }\n\n        if (loadOptions.requireTotalCount && localPaging) {\n          options.extra = isPlainObject(options.extra) ? options.extra : {};\n          options.extra.totalCount = options.data.length;\n        }\n\n        if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\n          options.extra.totalCount = -1;\n        }\n\n        this._handleDataLoadedCore(options);\n\n        if (needPageCache) {\n          cachedData.extra = cachedData.extra || extend({}, options.extra);\n          when(options.data).done(data => {\n            !function (options, data, groupCount) {\n              var _ref3, _options$skip3, _ref4, _options$take3;\n\n              var {\n                storeLoadOptions: storeLoadOptions\n              } = options;\n              var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\n              var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\n\n              for (var i = 0; i < take; i++) {\n                var globalIndex = i + skip;\n                var cacheItems = options.cachedData.items;\n                var skips = 0 === i && options.skips || [];\n                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips);\n              }\n            }(options, data, groupCount);\n          });\n        }\n      }\n\n      when(options.data).done(() => {\n        if (options.lastLoadOptions) {\n          this._lastLoadOptions = options.lastLoadOptions;\n          Object.keys(options.operationTypes).forEach(operationType => {\n            this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType];\n          });\n        }\n      });\n      options.storeLoadOptions = options.originalStoreLoadOptions;\n    },\n    _handleDataLoadedCore: function (options) {\n      if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\n        if (void 0 !== options.skip) {\n          options.data = options.data.slice(options.skip);\n        }\n\n        if (void 0 !== options.take) {\n          options.data = options.data.slice(0, options.take);\n        }\n      }\n    },\n    _handleLoadingChanged: function (isLoading) {\n      this.loadingChanged.fire(isLoading);\n    },\n    _handleLoadError: function (error) {\n      this.loadError.fire(error);\n      this.changed.fire({\n        changeType: \"loadError\",\n        error: error\n      });\n    },\n    _loadPageSize: function () {\n      return this.pageSize();\n    },\n    _handleDataChanged: function (args) {\n      var currentTotalCount;\n      var dataSource = this._dataSource;\n      var isLoading = false;\n      var isDataLoading = !args || isDefined(args.changeType);\n      var itemsCount = this.itemsCount();\n\n      if (isDataLoading) {\n        this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\n\n        if (this._isLastPage) {\n          this._hasLastPage = true;\n        }\n      }\n\n      if (dataSource.totalCount() >= 0) {\n        if (dataSource.pageIndex() >= this.pageCount()) {\n          dataSource.pageIndex(this.pageCount() - 1);\n          this.pageIndex(dataSource.pageIndex());\n          this.resetPagesCache();\n          dataSource.load();\n          isLoading = true;\n        }\n      } else if (isDataLoading) {\n        currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\n\n        if (currentTotalCount > this._currentTotalCount) {\n          this._currentTotalCount = currentTotalCount;\n\n          if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\n            this._totalCountCorrection = 0;\n          }\n        }\n\n        if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\n          dataSource.pageIndex(this.pageCount() - 1);\n\n          if (\"infinite\" !== this.option(\"scrolling.mode\")) {\n            dataSource.load();\n            isLoading = true;\n          }\n        }\n      }\n\n      if (!isLoading) {\n        this._operationTypes = this._lastOperationTypes;\n        this._lastOperationTypes = {};\n        this.component._optionCache = {};\n        this.changed.fire(args);\n        this.component._optionCache = void 0;\n      }\n    },\n    _scheduleCustomLoadCallbacks: function (deferred) {\n      var that = this;\n      that._isCustomLoading = true;\n      deferred.always(function () {\n        that._isCustomLoading = false;\n      });\n    },\n    loadingOperationTypes: function () {\n      return this._loadingOperationTypes;\n    },\n    operationTypes: function () {\n      return this._operationTypes;\n    },\n    lastLoadOptions: function () {\n      return this._lastLoadOptions || {};\n    },\n    isLastPage: function () {\n      return this._isLastPage;\n    },\n    totalCount: function () {\n      return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._totalCountCorrection);\n    },\n    totalCountCorrection: function () {\n      return this._totalCountCorrection;\n    },\n    itemsCount: function () {\n      return this._dataSource.items().length;\n    },\n    totalItemsCount: function () {\n      return this.totalCount();\n    },\n    pageSize: function () {\n      var dataSource = this._dataSource;\n\n      if (!arguments.length && !dataSource.paginate()) {\n        return 0;\n      }\n\n      return dataSource.pageSize.apply(dataSource, arguments);\n    },\n    pageCount: function () {\n      var count = this.totalItemsCount() - this._totalCountCorrection;\n\n      var pageSize = this.pageSize();\n\n      if (pageSize && count > 0) {\n        return Math.max(1, Math.ceil(count / pageSize));\n      }\n\n      return 1;\n    },\n    hasKnownLastPage: function () {\n      return this._hasLastPage || this._dataSource.totalCount() >= 0;\n    },\n    loadFromStore: function (loadOptions, store) {\n      var dataSource = this._dataSource;\n      var d = new Deferred();\n\n      if (!dataSource) {\n        return;\n      }\n\n      store = store || dataSource.store();\n      store.load(loadOptions).done(function (data, extra) {\n        if (data && !Array.isArray(data) && Array.isArray(data.data)) {\n          extra = data;\n          data = data.data;\n        }\n\n        d.resolve(data, extra);\n      }).fail(d.reject);\n      return d;\n    },\n    isCustomLoading: function () {\n      return !!this._isCustomLoading;\n    },\n    load: function (options) {\n      var that = this;\n      var dataSource = that._dataSource;\n      var d = new Deferred();\n\n      if (options) {\n        var store = dataSource.store();\n        var dataSourceLoadOptions = dataSource.loadOptions();\n        var loadResult = {\n          storeLoadOptions: options,\n          isCustomLoading: true\n        };\n        each(store._customLoadOptions() || [], function (_, optionName) {\n          if (!(optionName in loadResult.storeLoadOptions)) {\n            loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName];\n          }\n        });\n        this._isLoadingAll = options.isLoadingAll;\n\n        that._scheduleCustomLoadCallbacks(d);\n\n        dataSource._scheduleLoadCallbacks(d);\n\n        that._handleCustomizeStoreLoadOptions(loadResult);\n\n        !function (action, timeout) {\n          if (isDefined(timeout)) {\n            executeAsync(action, timeout);\n          } else {\n            action();\n          }\n        }(function () {\n          if (!dataSource.store()) {\n            return d.reject(\"canceled\");\n          }\n\n          when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done(function (data, extra) {\n            loadResult.data = data;\n            loadResult.extra = extra || {};\n\n            that._handleDataLoaded(loadResult);\n\n            if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\n              loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions);\n            }\n\n            when(loadResult.data, loadResult.extra.totalCount).done(function (data, totalCount) {\n              loadResult.extra.totalCount = totalCount;\n              d.resolve(data, loadResult.extra);\n            }).fail(d.reject);\n          }).fail(d.reject);\n        }, that.option(\"loadingTimeout\"));\n        return d.fail(function () {\n          that._eventsStrategy.fireEvent(\"loadError\", arguments);\n        }).always(() => {\n          this._isLoadingAll = false;\n        }).promise();\n      } else {\n        return dataSource.load();\n      }\n    },\n    reload: function (full) {\n      return full ? this._dataSource.reload() : this._dataSource.load();\n    },\n    getCachedStoreData: function () {\n      return this._cachedStoreData;\n    }\n  };\n}());","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.data_source_adapter.js"],"names":["_extends","Callbacks","gridCore","executeAsync","getKeyHash","isDefined","isPlainObject","isFunction","each","extend","ArrayStore","applyBatch","when","Deferred","Controller","inherit","cloneItems","items","groupCount","slice","i","length","key","calculateOperationTypes","loadOptions","lastLoadOptions","isFullReload","operationTypes","reload","fullReload","sorting","equalSortParameters","sort","grouping","group","groupExpanding","groupExpand","filtering","equalFilterParameters","filter","pageIndex","skip","take","pageSize","paging","getPageDataFromCache","options","updatePaging","normalizeSortingInfo","storeLoadOptions","fillItemsFromCache","cacheItemsFromBegin","cacheItemBeginCount","cacheItemsFromEnd","cacheItemEndCount","_options$skip2","_options$take2","cachedDataPartBegin","cachedDataPartEnd","reverse","fromEnd","_ref","_options$take","_options$cachedData","cachedItems","cachedData","_ref2","_options$skip","localIndex","cacheItemIndex","cacheItem","item","getItemFromCache","push","index","skips","takes","getGroupItemFromCache","result","isContinuation","isContinuationOnNextPage","childCacheItem","getCacheItem","loadedItem","forEach","globalIndex","childSkips","init","dataSource","remoteOperations","that","_dataSource","_remoteOperations","_isLastPage","isLastPage","_hasLastPage","_currentTotalCount","_cachedData","_lastOperationTypes","_eventsStrategy","_totalCountCorrection","_isLoadingAll","changed","loadingChanged","loadError","customizeStoreLoadOptions","changing","pushed","_dataChangedHandler","_handleDataChanged","bind","_customizeStoreLoadOptionsHandler","_handleCustomizeStoreLoadOptions","_dataLoadedHandler","_handleDataLoaded","_loadingChangedHandler","_handleLoadingChanged","_loadErrorHandler","_handleLoadError","_pushHandler","_handlePush","_changingHandler","_handleChanging","on","store","memberName","member","apply","arguments","dispose","isSharedDataSource","off","refresh","resetCurrentTotalCount","paginate","resetCache","_cachedStoreData","_cachedPagingData","resetPagesCache","_needClearStoreDataCache","_lastLoadOptions","isLocalOperations","Object","keys","every","operationName","changes","fromStore","keyInfo","data","_applyBatch","fire","getDataIndexGetter","_dataIndexGetter","indexByKey","storeData","isCacheUpdated","keyOf","_getKeyInfo","totalCount","isVirtualMode","option","change","type","getItemCount","itemsCount","oldItemCount","_items","useInsertIndex","splice","_ref5","e","_needCleanCacheByOperation","operationType","operationTypesByOrder","operationTypeIndex","indexOf","currentOperationTypes","some","_customizeRemoteOperations","cachedStoreData","cachedPagingData","value","isCustomLoading","_handleDataLoading","delay","originalStoreLoadOptions","isLoaded","_isRefreshing","isRefreshing","_loadingOperationTypes","_isRefreshed","done","_lastOperationId","operationId","load","always","fail","cancel","_handleDataLoadingCore","cachedExtra","extra","localLoadOptionNames","summary","requireTotalCount","optionName","optionValue","localPaging","needCache","needPageCache","needPagingCache","needStoreCache","concat","mergeStoreLoadData","error","reject","_handleDataLoadedCore","_ref3","_options$skip3","_ref4","_options$take3","cacheItems","Array","isArray","isLoading","changeType","_loadPageSize","args","currentTotalCount","isDataLoading","pageCount","_operationTypes","component","_optionCache","_scheduleCustomLoadCallbacks","deferred","_isCustomLoading","loadingOperationTypes","parseInt","totalCountCorrection","totalItemsCount","count","Math","max","ceil","hasKnownLastPage","loadFromStore","d","resolve","dataSourceLoadOptions","loadResult","_customLoadOptions","_","isLoadingAll","_scheduleLoadCallbacks","action","timeout","fireEvent","promise","full","getCachedStoreData"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.data_source_adapter.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport gridCore from \"../data_grid/ui.data_grid.core\";\r\nimport {\r\n    executeAsync,\r\n    getKeyHash\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport ArrayStore from \"../../data/array_store\";\r\nimport {\r\n    applyBatch\r\n} from \"../../data/array_utils\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nexport default gridCore.Controller.inherit(function() {\r\n    function cloneItems(items, groupCount) {\r\n        if (items) {\r\n            items = items.slice(0);\r\n            if (groupCount) {\r\n                for (var i = 0; i < items.length; i++) {\r\n                    items[i] = extend({\r\n                        key: items[i].key\r\n                    }, items[i]);\r\n                    items[i].items = cloneItems(items[i].items, groupCount - 1)\r\n                }\r\n            }\r\n        }\r\n        return items\r\n    }\r\n\r\n    function calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload) {\r\n        var operationTypes = {\r\n            reload: true,\r\n            fullReload: true\r\n        };\r\n        if (lastLoadOptions) {\r\n            operationTypes = {\r\n                sorting: !gridCore.equalSortParameters(loadOptions.sort, lastLoadOptions.sort),\r\n                grouping: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group, true),\r\n                groupExpanding: !gridCore.equalSortParameters(loadOptions.group, lastLoadOptions.group) || lastLoadOptions.groupExpand,\r\n                filtering: !gridCore.equalFilterParameters(loadOptions.filter, lastLoadOptions.filter),\r\n                pageIndex: loadOptions.pageIndex !== lastLoadOptions.pageIndex,\r\n                skip: loadOptions.skip !== lastLoadOptions.skip,\r\n                take: loadOptions.take !== lastLoadOptions.take,\r\n                pageSize: loadOptions.pageSize !== lastLoadOptions.pageSize,\r\n                fullReload: isFullReload\r\n            };\r\n            operationTypes.reload = isFullReload || operationTypes.sorting || operationTypes.grouping || operationTypes.filtering;\r\n            operationTypes.paging = operationTypes.pageIndex || operationTypes.pageSize || operationTypes.take\r\n        }\r\n        return operationTypes\r\n    }\r\n\r\n    function getPageDataFromCache(options, updatePaging) {\r\n        var groupCount = gridCore.normalizeSortingInfo(options.group || options.storeLoadOptions.group || options.loadOptions.group).length;\r\n        var items = [];\r\n        if (fillItemsFromCache(items, options, groupCount)) {\r\n            return items\r\n        } else if (updatePaging) {\r\n            ! function(cacheItemsFromBegin, options, groupCount) {\r\n                var cacheItemBeginCount = cacheItemsFromBegin.length;\r\n                var {\r\n                    storeLoadOptions: storeLoadOptions\r\n                } = options;\r\n                if (void 0 !== storeLoadOptions.skip && storeLoadOptions.take && !groupCount) {\r\n                    var cacheItemsFromEnd = [];\r\n                    fillItemsFromCache(cacheItemsFromEnd, options, groupCount, true);\r\n                    var cacheItemEndCount = cacheItemsFromEnd.length;\r\n                    if (cacheItemBeginCount || cacheItemEndCount) {\r\n                        var _options$skip2, _options$take2;\r\n                        options.skip = null !== (_options$skip2 = options.skip) && void 0 !== _options$skip2 ? _options$skip2 : storeLoadOptions.skip;\r\n                        options.take = null !== (_options$take2 = options.take) && void 0 !== _options$take2 ? _options$take2 : storeLoadOptions.take\r\n                    }\r\n                    if (cacheItemBeginCount) {\r\n                        storeLoadOptions.skip += cacheItemBeginCount;\r\n                        storeLoadOptions.take -= cacheItemBeginCount;\r\n                        options.cachedDataPartBegin = cacheItemsFromBegin\r\n                    }\r\n                    if (cacheItemEndCount) {\r\n                        storeLoadOptions.take -= cacheItemEndCount;\r\n                        options.cachedDataPartEnd = cacheItemsFromEnd.reverse()\r\n                    }\r\n                }\r\n            }(items, options, groupCount)\r\n        }\r\n    }\r\n\r\n    function fillItemsFromCache(items, options, groupCount, fromEnd) {\r\n        var _ref, _options$take, _options$cachedData;\r\n        var {\r\n            storeLoadOptions: storeLoadOptions\r\n        } = options;\r\n        var take = null !== (_ref = null !== (_options$take = options.take) && void 0 !== _options$take ? _options$take : storeLoadOptions.take) && void 0 !== _ref ? _ref : 0;\r\n        var cachedItems = null === (_options$cachedData = options.cachedData) || void 0 === _options$cachedData ? void 0 : _options$cachedData.items;\r\n        if (take && cachedItems) {\r\n            var _ref2, _options$skip;\r\n            var skip = null !== (_ref2 = null !== (_options$skip = options.skip) && void 0 !== _options$skip ? _options$skip : storeLoadOptions.skip) && void 0 !== _ref2 ? _ref2 : 0;\r\n            for (var i = 0; i < take; i++) {\r\n                var localIndex = fromEnd ? take - 1 - i : i;\r\n                var cacheItemIndex = localIndex + skip;\r\n                var cacheItem = cachedItems[cacheItemIndex];\r\n                if (void 0 === cacheItem && cacheItemIndex in cachedItems) {\r\n                    return true\r\n                }\r\n                var item = getItemFromCache(options, cacheItem, groupCount, localIndex, take);\r\n                if (item) {\r\n                    items.push(item)\r\n                } else {\r\n                    return false\r\n                }\r\n            }\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function getItemFromCache(options, cacheItem, groupCount, index, take) {\r\n        if (groupCount && cacheItem) {\r\n            var skips = 0 === index && options.skips || [];\r\n            var takes = index === take - 1 && options.takes || [];\r\n            return function getGroupItemFromCache(cacheItem, groupCount, skips, takes) {\r\n                if (groupCount && cacheItem) {\r\n                    var result = _extends({}, cacheItem);\r\n                    var skip = skips[0] || 0;\r\n                    var take = takes[0];\r\n                    var items = cacheItem.items;\r\n                    if (items) {\r\n                        if (void 0 === take && !items[skip]) {\r\n                            return\r\n                        }\r\n                        result.items = [];\r\n                        if (skips.length) {\r\n                            result.isContinuation = true\r\n                        }\r\n                        if (takes.length) {\r\n                            result.isContinuationOnNextPage = true\r\n                        }\r\n                        for (var i = 0; void 0 === take ? items[i + skip] : i < take; i++) {\r\n                            var childCacheItem = items[i + skip];\r\n                            var item = getGroupItemFromCache(childCacheItem, groupCount - 1, skips.slice(1), takes.slice(1));\r\n                            if (void 0 !== item) {\r\n                                result.items.push(item)\r\n                            } else {\r\n                                return\r\n                            }\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n                return cacheItem\r\n            }(cacheItem, groupCount, skips, takes)\r\n        } else {\r\n            return cacheItem\r\n        }\r\n    }\r\n\r\n    function getCacheItem(cacheItem, loadedItem, groupCount, skips) {\r\n        if (groupCount && loadedItem) {\r\n            var result = _extends({}, loadedItem);\r\n            delete result.isContinuation;\r\n            delete result.isContinuationOnNextPage;\r\n            var skip = skips[0] || 0;\r\n            if (loadedItem.items) {\r\n                result.items = (null === cacheItem || void 0 === cacheItem ? void 0 : cacheItem.items) || {};\r\n                loadedItem.items.forEach((item, index) => {\r\n                    var globalIndex = index + skip;\r\n                    var childSkips = 0 === index ? skips.slice(1) : [];\r\n                    result.items[globalIndex] = getCacheItem(result.items[globalIndex], item, groupCount - 1, childSkips)\r\n                })\r\n            }\r\n            return result\r\n        }\r\n        return loadedItem\r\n    }\r\n    return {\r\n        init: function(dataSource, remoteOperations) {\r\n            var that = this;\r\n            that._dataSource = dataSource;\r\n            that._remoteOperations = remoteOperations || {};\r\n            that._isLastPage = !dataSource.isLastPage();\r\n            that._hasLastPage = false;\r\n            that._currentTotalCount = 0;\r\n            that._cachedData = {\r\n                items: {}\r\n            };\r\n            that._lastOperationTypes = {};\r\n            that._eventsStrategy = dataSource._eventsStrategy;\r\n            that._totalCountCorrection = 0;\r\n            that._isLoadingAll = false;\r\n            that.changed = Callbacks();\r\n            that.loadingChanged = Callbacks();\r\n            that.loadError = Callbacks();\r\n            that.customizeStoreLoadOptions = Callbacks();\r\n            that.changing = Callbacks();\r\n            that.pushed = Callbacks();\r\n            that._dataChangedHandler = that._handleDataChanged.bind(that);\r\n            that._customizeStoreLoadOptionsHandler = that._handleCustomizeStoreLoadOptions.bind(that);\r\n            that._dataLoadedHandler = that._handleDataLoaded.bind(that);\r\n            that._loadingChangedHandler = that._handleLoadingChanged.bind(that);\r\n            that._loadErrorHandler = that._handleLoadError.bind(that);\r\n            that._pushHandler = that._handlePush.bind(that);\r\n            that._changingHandler = that._handleChanging.bind(that);\r\n            dataSource.on(\"changed\", that._dataChangedHandler);\r\n            dataSource.on(\"customizeStoreLoadOptions\", that._customizeStoreLoadOptionsHandler);\r\n            dataSource.on(\"customizeLoadResult\", that._dataLoadedHandler);\r\n            dataSource.on(\"loadingChanged\", that._loadingChangedHandler);\r\n            dataSource.on(\"loadError\", that._loadErrorHandler);\r\n            dataSource.on(\"changing\", that._changingHandler);\r\n            dataSource.store().on(\"beforePush\", that._pushHandler);\r\n            each(dataSource, (function(memberName, member) {\r\n                if (!that[memberName] && isFunction(member)) {\r\n                    that[memberName] = function() {\r\n                        return this._dataSource[memberName].apply(this._dataSource, arguments)\r\n                    }\r\n                }\r\n            }))\r\n        },\r\n        remoteOperations: function() {\r\n            return this._remoteOperations\r\n        },\r\n        dispose: function(isSharedDataSource) {\r\n            var dataSource = this._dataSource;\r\n            var store = dataSource.store();\r\n            dataSource.off(\"changed\", this._dataChangedHandler);\r\n            dataSource.off(\"customizeStoreLoadOptions\", this._customizeStoreLoadOptionsHandler);\r\n            dataSource.off(\"customizeLoadResult\", this._dataLoadedHandler);\r\n            dataSource.off(\"loadingChanged\", this._loadingChangedHandler);\r\n            dataSource.off(\"loadError\", this._loadErrorHandler);\r\n            dataSource.off(\"changing\", this._changingHandler);\r\n            store && store.off(\"beforePush\", this._pushHandler);\r\n            if (!isSharedDataSource) {\r\n                dataSource.dispose()\r\n            }\r\n        },\r\n        refresh: function(options, operationTypes) {\r\n            var dataSource = this._dataSource;\r\n            if (operationTypes.reload) {\r\n                this.resetCurrentTotalCount();\r\n                this._isLastPage = !dataSource.paginate();\r\n                this._hasLastPage = this._isLastPage\r\n            }\r\n        },\r\n        resetCurrentTotalCount: function() {\r\n            this._currentTotalCount = 0;\r\n            this._totalCountCorrection = 0\r\n        },\r\n        resetCache: function() {\r\n            this._cachedStoreData = void 0;\r\n            this._cachedPagingData = void 0\r\n        },\r\n        resetPagesCache: function() {\r\n            this._cachedData = {\r\n                items: {}\r\n            }\r\n        },\r\n        _needClearStoreDataCache: function() {\r\n            var remoteOperations = this.remoteOperations();\r\n            var operationTypes = calculateOperationTypes(this._lastLoadOptions || {}, {});\r\n            var isLocalOperations = Object.keys(remoteOperations).every(operationName => !operationTypes[operationName] || !remoteOperations[operationName]);\r\n            return !isLocalOperations\r\n        },\r\n        push: function(changes, fromStore) {\r\n            var store = this.store();\r\n            if (this._needClearStoreDataCache()) {\r\n                this._cachedStoreData = void 0\r\n            }\r\n            this._cachedPagingData = void 0;\r\n            this.resetPagesCache(true);\r\n            if (this._cachedStoreData) {\r\n                applyBatch({\r\n                    keyInfo: store,\r\n                    data: this._cachedStoreData,\r\n                    changes: changes\r\n                })\r\n            }\r\n            if (!fromStore) {\r\n                this._applyBatch(changes)\r\n            }\r\n            this.pushed.fire(changes)\r\n        },\r\n        getDataIndexGetter: function() {\r\n            if (!this._dataIndexGetter) {\r\n                var indexByKey;\r\n                var storeData;\r\n                var store = this.store();\r\n                this._dataIndexGetter = data => {\r\n                    var isCacheUpdated = storeData && storeData !== this._cachedStoreData;\r\n                    if (!indexByKey || isCacheUpdated) {\r\n                        storeData = this._cachedStoreData || [];\r\n                        indexByKey = {};\r\n                        for (var i = 0; i < storeData.length; i++) {\r\n                            indexByKey[getKeyHash(store.keyOf(storeData[i]))] = i\r\n                        }\r\n                    }\r\n                    return indexByKey[getKeyHash(store.keyOf(data))]\r\n                }\r\n            }\r\n            return this._dataIndexGetter\r\n        },\r\n        _getKeyInfo: function() {\r\n            return this.store()\r\n        },\r\n        _applyBatch: function(changes) {\r\n            var keyInfo = this._getKeyInfo();\r\n            var dataSource = this._dataSource;\r\n            var groupCount = gridCore.normalizeSortingInfo(this.group()).length;\r\n            var totalCount = this.totalCount();\r\n            var isVirtualMode = \"virtual\" === this.option(\"scrolling.mode\");\r\n            changes = changes.filter((function(change) {\r\n                return !dataSource.paginate() || \"insert\" !== change.type || void 0 !== change.index\r\n            }));\r\n            var getItemCount = () => groupCount ? this.itemsCount() : this.items().length;\r\n            var oldItemCount = getItemCount();\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: this._items,\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            applyBatch({\r\n                keyInfo: keyInfo,\r\n                data: dataSource.items(),\r\n                changes: changes,\r\n                groupCount: groupCount,\r\n                useInsertIndex: true\r\n            });\r\n            if (this._currentTotalCount > 0 || isVirtualMode && totalCount === oldItemCount) {\r\n                this._totalCountCorrection += getItemCount() - oldItemCount\r\n            }\r\n            changes.splice(0, changes.length)\r\n        },\r\n        _handlePush: function(_ref5) {\r\n            var {\r\n                changes: changes\r\n            } = _ref5;\r\n            this.push(changes, true)\r\n        },\r\n        _handleChanging: function(e) {\r\n            this.changing.fire(e);\r\n            this._applyBatch(e.changes)\r\n        },\r\n        _needCleanCacheByOperation: function(operationType, remoteOperations) {\r\n            var operationTypesByOrder = [\"filtering\", \"sorting\", \"paging\"];\r\n            var operationTypeIndex = operationTypesByOrder.indexOf(operationType);\r\n            var currentOperationTypes = operationTypeIndex >= 0 ? operationTypesByOrder.slice(operationTypeIndex) : [operationType];\r\n            return currentOperationTypes.some(operationType => remoteOperations[operationType])\r\n        },\r\n        _customizeRemoteOperations: function(options, operationTypes) {\r\n            var cachedStoreData = this._cachedStoreData;\r\n            var cachedPagingData = this._cachedPagingData;\r\n            var cachedData = this._cachedData;\r\n            if (options.storeLoadOptions.filter && !options.remoteOperations.filtering || options.storeLoadOptions.sort && !options.remoteOperations.sorting) {\r\n                options.remoteOperations = {\r\n                    filtering: options.remoteOperations.filtering\r\n                }\r\n            }\r\n            if (operationTypes.fullReload) {\r\n                cachedStoreData = void 0;\r\n                cachedPagingData = void 0;\r\n                cachedData = {\r\n                    items: {}\r\n                }\r\n            } else {\r\n                if (operationTypes.reload) {\r\n                    cachedPagingData = void 0;\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                } else if (operationTypes.groupExpanding) {\r\n                    cachedData = {\r\n                        items: {}\r\n                    }\r\n                }\r\n                each(operationTypes, (operationType, value) => {\r\n                    if (value && this._needCleanCacheByOperation(operationType, options.remoteOperations)) {\r\n                        cachedStoreData = void 0;\r\n                        cachedPagingData = void 0\r\n                    }\r\n                })\r\n            }\r\n            if (cachedPagingData) {\r\n                options.remoteOperations.paging = false\r\n            }\r\n            options.cachedStoreData = cachedStoreData;\r\n            options.cachedPagingData = cachedPagingData;\r\n            options.cachedData = cachedData;\r\n            if (!options.isCustomLoading) {\r\n                this._cachedStoreData = cachedStoreData;\r\n                this._cachedPagingData = cachedPagingData;\r\n                this._cachedData = cachedData\r\n            }\r\n        },\r\n        _handleCustomizeStoreLoadOptions(options) {\r\n            this._handleDataLoading(options);\r\n            options.data = getPageDataFromCache(options, true) || options.cachedStoreData\r\n        },\r\n        _handleDataLoading: function(options) {\r\n            var dataSource = this._dataSource;\r\n            var lastLoadOptions = this._lastLoadOptions;\r\n            this.customizeStoreLoadOptions.fire(options);\r\n            options.delay = this.option(\"loadingTimeout\");\r\n            options.originalStoreLoadOptions = options.storeLoadOptions;\r\n            options.remoteOperations = extend({}, this.remoteOperations());\r\n            var isFullReload = !this.isLoaded() && !this._isRefreshing;\r\n            if (this.option(\"integrationOptions.renderedOnServer\") && !this.isLoaded()) {\r\n                options.delay = void 0\r\n            }\r\n            var loadOptions = extend({\r\n                pageIndex: this.pageIndex(),\r\n                pageSize: this.pageSize()\r\n            }, options.storeLoadOptions);\r\n            var operationTypes = calculateOperationTypes(loadOptions, lastLoadOptions, isFullReload);\r\n            this._customizeRemoteOperations(options, operationTypes);\r\n            if (!options.isCustomLoading) {\r\n                var isRefreshing = this._isRefreshing;\r\n                options.pageIndex = dataSource.pageIndex();\r\n                options.lastLoadOptions = loadOptions;\r\n                options.operationTypes = operationTypes;\r\n                this._loadingOperationTypes = operationTypes;\r\n                this._isRefreshing = true;\r\n                when(isRefreshing || this._isRefreshed || this.refresh(options, operationTypes)).done(() => {\r\n                    if (this._lastOperationId === options.operationId) {\r\n                        this._isRefreshed = true;\r\n                        this.load().always(() => {\r\n                            this._isRefreshed = false\r\n                        })\r\n                    }\r\n                }).fail(() => {\r\n                    dataSource.cancel(options.operationId)\r\n                }).always(() => {\r\n                    this._isRefreshing = false\r\n                });\r\n                dataSource.cancel(this._lastOperationId);\r\n                this._lastOperationId = options.operationId;\r\n                if (this._isRefreshing) {\r\n                    dataSource.cancel(this._lastOperationId)\r\n                }\r\n            }\r\n            this._handleDataLoadingCore(options)\r\n        },\r\n        _handleDataLoadingCore: function(options) {\r\n            var remoteOperations = options.remoteOperations;\r\n            options.loadOptions = {};\r\n            var cachedExtra = options.cachedData.extra;\r\n            var localLoadOptionNames = {\r\n                filter: !remoteOperations.filtering,\r\n                sort: !remoteOperations.sorting,\r\n                group: !remoteOperations.grouping,\r\n                summary: !remoteOperations.summary,\r\n                skip: !remoteOperations.paging,\r\n                take: !remoteOperations.paging,\r\n                requireTotalCount: cachedExtra && \"totalCount\" in cachedExtra || !remoteOperations.paging\r\n            };\r\n            each(options.storeLoadOptions, (function(optionName, optionValue) {\r\n                if (localLoadOptionNames[optionName]) {\r\n                    options.loadOptions[optionName] = optionValue;\r\n                    delete options.storeLoadOptions[optionName]\r\n                }\r\n            }));\r\n            if (cachedExtra) {\r\n                options.extra = cachedExtra\r\n            }\r\n        },\r\n        _handleDataLoaded: function(options) {\r\n            var loadOptions = options.loadOptions;\r\n            var localPaging = options.remoteOperations && !options.remoteOperations.paging;\r\n            var cachedData = options.cachedData;\r\n            var storeLoadOptions = options.storeLoadOptions;\r\n            var needCache = false !== this.option(\"cacheEnabled\") && storeLoadOptions;\r\n            var needPageCache = needCache && !options.isCustomLoading && cachedData && (!localPaging || storeLoadOptions.group);\r\n            var needPagingCache = needCache && localPaging;\r\n            var needStoreCache = needPagingCache && !options.isCustomLoading;\r\n            if (!loadOptions) {\r\n                this._dataSource.cancel(options.operationId);\r\n                return\r\n            }\r\n            if (localPaging) {\r\n                options.skip = loadOptions.skip;\r\n                options.take = loadOptions.take;\r\n                delete loadOptions.skip;\r\n                delete loadOptions.take\r\n            }\r\n            if (loadOptions.group) {\r\n                loadOptions.group = options.group || loadOptions.group\r\n            }\r\n            var groupCount = gridCore.normalizeSortingInfo(options.group || storeLoadOptions.group || loadOptions.group).length;\r\n            if (options.cachedDataPartBegin) {\r\n                options.data = options.cachedDataPartBegin.concat(options.data)\r\n            }\r\n            if (options.cachedDataPartEnd) {\r\n                options.data = options.data.concat(options.cachedDataPartEnd)\r\n            }\r\n            if (!needPageCache || !getPageDataFromCache(options)) {\r\n                if (needPagingCache && options.cachedPagingData) {\r\n                    options.data = cloneItems(options.cachedPagingData, groupCount)\r\n                } else {\r\n                    if (needStoreCache) {\r\n                        if (!this._cachedStoreData) {\r\n                            this._cachedStoreData = cloneItems(options.data, gridCore.normalizeSortingInfo(storeLoadOptions.group).length)\r\n                        } else if (options.mergeStoreLoadData) {\r\n                            options.data = this._cachedStoreData = this._cachedStoreData.concat(options.data)\r\n                        }\r\n                    }\r\n                    new ArrayStore(options.data).load(loadOptions).done(data => {\r\n                        options.data = data;\r\n                        if (needStoreCache) {\r\n                            this._cachedPagingData = cloneItems(options.data, groupCount)\r\n                        }\r\n                    }).fail(error => {\r\n                        options.data = (new Deferred).reject(error)\r\n                    })\r\n                }\r\n                if (loadOptions.requireTotalCount && localPaging) {\r\n                    options.extra = isPlainObject(options.extra) ? options.extra : {};\r\n                    options.extra.totalCount = options.data.length\r\n                }\r\n                if (options.extra && options.extra.totalCount >= 0 && (false === storeLoadOptions.requireTotalCount || false === loadOptions.requireTotalCount)) {\r\n                    options.extra.totalCount = -1\r\n                }\r\n                this._handleDataLoadedCore(options);\r\n                if (needPageCache) {\r\n                    cachedData.extra = cachedData.extra || extend({}, options.extra);\r\n                    when(options.data).done(data => {\r\n                        ! function(options, data, groupCount) {\r\n                            var _ref3, _options$skip3, _ref4, _options$take3;\r\n                            var {\r\n                                storeLoadOptions: storeLoadOptions\r\n                            } = options;\r\n                            var skip = null !== (_ref3 = null !== (_options$skip3 = options.skip) && void 0 !== _options$skip3 ? _options$skip3 : storeLoadOptions.skip) && void 0 !== _ref3 ? _ref3 : 0;\r\n                            var take = null !== (_ref4 = null !== (_options$take3 = options.take) && void 0 !== _options$take3 ? _options$take3 : storeLoadOptions.take) && void 0 !== _ref4 ? _ref4 : 0;\r\n                            for (var i = 0; i < take; i++) {\r\n                                var globalIndex = i + skip;\r\n                                var cacheItems = options.cachedData.items;\r\n                                var skips = 0 === i && options.skips || [];\r\n                                cacheItems[globalIndex] = getCacheItem(cacheItems[globalIndex], data[i], groupCount, skips)\r\n                            }\r\n                        }(options, data, groupCount)\r\n                    })\r\n                }\r\n            }\r\n            when(options.data).done(() => {\r\n                if (options.lastLoadOptions) {\r\n                    this._lastLoadOptions = options.lastLoadOptions;\r\n                    Object.keys(options.operationTypes).forEach(operationType => {\r\n                        this._lastOperationTypes[operationType] = this._lastOperationTypes[operationType] || options.operationTypes[operationType]\r\n                    })\r\n                }\r\n            });\r\n            options.storeLoadOptions = options.originalStoreLoadOptions\r\n        },\r\n        _handleDataLoadedCore: function(options) {\r\n            if (options.remoteOperations && !options.remoteOperations.paging && Array.isArray(options.data)) {\r\n                if (void 0 !== options.skip) {\r\n                    options.data = options.data.slice(options.skip)\r\n                }\r\n                if (void 0 !== options.take) {\r\n                    options.data = options.data.slice(0, options.take)\r\n                }\r\n            }\r\n        },\r\n        _handleLoadingChanged: function(isLoading) {\r\n            this.loadingChanged.fire(isLoading)\r\n        },\r\n        _handleLoadError: function(error) {\r\n            this.loadError.fire(error);\r\n            this.changed.fire({\r\n                changeType: \"loadError\",\r\n                error: error\r\n            })\r\n        },\r\n        _loadPageSize: function() {\r\n            return this.pageSize()\r\n        },\r\n        _handleDataChanged: function(args) {\r\n            var currentTotalCount;\r\n            var dataSource = this._dataSource;\r\n            var isLoading = false;\r\n            var isDataLoading = !args || isDefined(args.changeType);\r\n            var itemsCount = this.itemsCount();\r\n            if (isDataLoading) {\r\n                this._isLastPage = !itemsCount || !this._loadPageSize() || itemsCount < this._loadPageSize();\r\n                if (this._isLastPage) {\r\n                    this._hasLastPage = true\r\n                }\r\n            }\r\n            if (dataSource.totalCount() >= 0) {\r\n                if (dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    this.pageIndex(dataSource.pageIndex());\r\n                    this.resetPagesCache();\r\n                    dataSource.load();\r\n                    isLoading = true\r\n                }\r\n            } else if (isDataLoading) {\r\n                currentTotalCount = dataSource.pageIndex() * this.pageSize() + itemsCount;\r\n                if (currentTotalCount > this._currentTotalCount) {\r\n                    this._currentTotalCount = currentTotalCount;\r\n                    if (0 === dataSource.pageIndex() || !this.option(\"scrolling.legacyMode\")) {\r\n                        this._totalCountCorrection = 0\r\n                    }\r\n                }\r\n                if (0 === itemsCount && dataSource.pageIndex() >= this.pageCount()) {\r\n                    dataSource.pageIndex(this.pageCount() - 1);\r\n                    if (\"infinite\" !== this.option(\"scrolling.mode\")) {\r\n                        dataSource.load();\r\n                        isLoading = true\r\n                    }\r\n                }\r\n            }\r\n            if (!isLoading) {\r\n                this._operationTypes = this._lastOperationTypes;\r\n                this._lastOperationTypes = {};\r\n                this.component._optionCache = {};\r\n                this.changed.fire(args);\r\n                this.component._optionCache = void 0\r\n            }\r\n        },\r\n        _scheduleCustomLoadCallbacks: function(deferred) {\r\n            var that = this;\r\n            that._isCustomLoading = true;\r\n            deferred.always((function() {\r\n                that._isCustomLoading = false\r\n            }))\r\n        },\r\n        loadingOperationTypes: function() {\r\n            return this._loadingOperationTypes\r\n        },\r\n        operationTypes: function() {\r\n            return this._operationTypes\r\n        },\r\n        lastLoadOptions: function() {\r\n            return this._lastLoadOptions || {}\r\n        },\r\n        isLastPage: function() {\r\n            return this._isLastPage\r\n        },\r\n        totalCount: function() {\r\n            return parseInt((this._currentTotalCount || this._dataSource.totalCount()) + this._totalCountCorrection)\r\n        },\r\n        totalCountCorrection: function() {\r\n            return this._totalCountCorrection\r\n        },\r\n        itemsCount: function() {\r\n            return this._dataSource.items().length\r\n        },\r\n        totalItemsCount: function() {\r\n            return this.totalCount()\r\n        },\r\n        pageSize: function() {\r\n            var dataSource = this._dataSource;\r\n            if (!arguments.length && !dataSource.paginate()) {\r\n                return 0\r\n            }\r\n            return dataSource.pageSize.apply(dataSource, arguments)\r\n        },\r\n        pageCount: function() {\r\n            var count = this.totalItemsCount() - this._totalCountCorrection;\r\n            var pageSize = this.pageSize();\r\n            if (pageSize && count > 0) {\r\n                return Math.max(1, Math.ceil(count / pageSize))\r\n            }\r\n            return 1\r\n        },\r\n        hasKnownLastPage: function() {\r\n            return this._hasLastPage || this._dataSource.totalCount() >= 0\r\n        },\r\n        loadFromStore: function(loadOptions, store) {\r\n            var dataSource = this._dataSource;\r\n            var d = new Deferred;\r\n            if (!dataSource) {\r\n                return\r\n            }\r\n            store = store || dataSource.store();\r\n            store.load(loadOptions).done((function(data, extra) {\r\n                if (data && !Array.isArray(data) && Array.isArray(data.data)) {\r\n                    extra = data;\r\n                    data = data.data\r\n                }\r\n                d.resolve(data, extra)\r\n            })).fail(d.reject);\r\n            return d\r\n        },\r\n        isCustomLoading: function() {\r\n            return !!this._isCustomLoading\r\n        },\r\n        load: function(options) {\r\n            var that = this;\r\n            var dataSource = that._dataSource;\r\n            var d = new Deferred;\r\n            if (options) {\r\n                var store = dataSource.store();\r\n                var dataSourceLoadOptions = dataSource.loadOptions();\r\n                var loadResult = {\r\n                    storeLoadOptions: options,\r\n                    isCustomLoading: true\r\n                };\r\n                each(store._customLoadOptions() || [], (function(_, optionName) {\r\n                    if (!(optionName in loadResult.storeLoadOptions)) {\r\n                        loadResult.storeLoadOptions[optionName] = dataSourceLoadOptions[optionName]\r\n                    }\r\n                }));\r\n                this._isLoadingAll = options.isLoadingAll;\r\n                that._scheduleCustomLoadCallbacks(d);\r\n                dataSource._scheduleLoadCallbacks(d);\r\n                that._handleCustomizeStoreLoadOptions(loadResult);\r\n                ! function(action, timeout) {\r\n                    if (isDefined(timeout)) {\r\n                        executeAsync(action, timeout)\r\n                    } else {\r\n                        action()\r\n                    }\r\n                }((function() {\r\n                    if (!dataSource.store()) {\r\n                        return d.reject(\"canceled\")\r\n                    }\r\n                    when(loadResult.data || that.loadFromStore(loadResult.storeLoadOptions)).done((function(data, extra) {\r\n                        loadResult.data = data;\r\n                        loadResult.extra = extra || {};\r\n                        that._handleDataLoaded(loadResult);\r\n                        if (options.requireTotalCount && void 0 === loadResult.extra.totalCount) {\r\n                            loadResult.extra.totalCount = store.totalCount(loadResult.storeLoadOptions)\r\n                        }\r\n                        when(loadResult.data, loadResult.extra.totalCount).done((function(data, totalCount) {\r\n                            loadResult.extra.totalCount = totalCount;\r\n                            d.resolve(data, loadResult.extra)\r\n                        })).fail(d.reject)\r\n                    })).fail(d.reject)\r\n                }), that.option(\"loadingTimeout\"));\r\n                return d.fail((function() {\r\n                    that._eventsStrategy.fireEvent(\"loadError\", arguments)\r\n                })).always(() => {\r\n                    this._isLoadingAll = false\r\n                }).promise()\r\n            } else {\r\n                return dataSource.load()\r\n            }\r\n        },\r\n        reload: function(full) {\r\n            return full ? this._dataSource.reload() : this._dataSource.load()\r\n        },\r\n        getCachedStoreData: function() {\r\n            return this._cachedStoreData\r\n        }\r\n    }\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}