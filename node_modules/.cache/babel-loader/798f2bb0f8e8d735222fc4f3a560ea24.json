{"ast":null,"code":"import _classCallCheck from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\r\n * DevExtreme (esm/ui/overlay/overlay_position_controller.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { isDefined, isString, isEvent, isWindow } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport positionUtils from \"../../animation/position\";\nimport { resetPosition, move, locate } from \"../../animation/translator\";\nimport { getWindow } from \"../../core/utils/window\";\nimport { originalViewPort, value as viewPort } from \"../../core/utils/view_port\";\nvar window = getWindow();\nvar OVERLAY_POSITION_ALIASES = {\n  top: {\n    my: \"top center\",\n    at: \"top center\"\n  },\n  bottom: {\n    my: \"bottom center\",\n    at: \"bottom center\"\n  },\n  right: {\n    my: \"right center\",\n    at: \"right center\"\n  },\n  left: {\n    my: \"left center\",\n    at: \"left center\"\n  },\n  center: {\n    my: \"center\",\n    at: \"center\"\n  },\n  \"right bottom\": {\n    my: \"right bottom\",\n    at: \"right bottom\"\n  },\n  \"right top\": {\n    my: \"right top\",\n    at: \"right top\"\n  },\n  \"left bottom\": {\n    my: \"left bottom\",\n    at: \"left bottom\"\n  },\n  \"left top\": {\n    my: \"left top\",\n    at: \"left top\"\n  }\n};\nvar OVERLAY_DEFAULT_BOUNDARY_OFFSET = {\n  h: 0,\n  v: 0\n};\n\nvar OverlayPositionController = /*#__PURE__*/function () {\n  function OverlayPositionController(_ref) {\n    _classCallCheck(this, OverlayPositionController);\n\n    var position = _ref.position,\n        target = _ref.target,\n        container = _ref.container,\n        $root = _ref.$root,\n        $content = _ref.$content,\n        $wrapper = _ref.$wrapper,\n        onPositioned = _ref.onPositioned,\n        onVisualPositionChanged = _ref.onVisualPositionChanged,\n        dragOutsideBoundary = _ref.dragOutsideBoundary,\n        dragAndResizeArea = _ref.dragAndResizeArea,\n        outsideDragFactor = _ref.outsideDragFactor,\n        restorePosition = _ref.restorePosition,\n        _fixWrapperPosition = _ref._fixWrapperPosition;\n    this._props = {\n      position: position,\n      target: target,\n      container: container,\n      dragOutsideBoundary: dragOutsideBoundary,\n      dragAndResizeArea: dragAndResizeArea,\n      outsideDragFactor: outsideDragFactor,\n      restorePosition: restorePosition,\n      onPositioned: onPositioned,\n      onVisualPositionChanged: onVisualPositionChanged,\n      _fixWrapperPosition: _fixWrapperPosition\n    };\n    this._$root = $root;\n    this._$content = $content;\n    this._$wrapper = $wrapper;\n    this._$markupContainer = void 0;\n    this._$wrapperCoveredElement = void 0;\n    this._shouldRenderContentInitialPosition = true;\n    this._visualPosition = void 0;\n    this._initialPosition = void 0;\n    this._previousVisualPosition = void 0;\n    this._$dragResizeContainer = void 0;\n    this._outsideDragFactor = void 0;\n    this.updateContainer(container);\n    this.updatePosition(position, target);\n\n    this._updateDragResizeContainer();\n\n    this._updateOutsideDragFactor();\n  }\n\n  _createClass(OverlayPositionController, [{\n    key: \"$container\",\n    get: function get() {\n      return this._$markupContainer;\n    }\n  }, {\n    key: \"$dragResizeContainer\",\n    get: function get() {\n      return this._$dragResizeContainer;\n    }\n  }, {\n    key: \"outsideDragFactor\",\n    get: function get() {\n      return this._outsideDragFactor;\n    },\n    set: function set(outsideDragFactor) {\n      this._props.outsideDragFactor = outsideDragFactor;\n\n      this._updateOutsideDragFactor();\n    }\n  }, {\n    key: \"fixWrapperPosition\",\n    set: function set(fixWrapperPosition) {\n      this._props._fixWrapperPosition = fixWrapperPosition;\n      this.styleWrapperPosition();\n    }\n  }, {\n    key: \"dragAndResizeArea\",\n    set: function set(dragAndResizeArea) {\n      this._props.dragAndResizeArea = dragAndResizeArea;\n\n      this._updateDragResizeContainer();\n    }\n  }, {\n    key: \"dragOutsideBoundary\",\n    set: function set(dragOutsideBoundary) {\n      this._props.dragOutsideBoundary = dragOutsideBoundary;\n\n      this._updateDragResizeContainer();\n\n      this._updateOutsideDragFactor();\n    }\n  }, {\n    key: \"restorePosition\",\n    set: function set(restorePosition) {\n      this._props.restorePosition = restorePosition;\n    }\n  }, {\n    key: \"restorePositionOnNextRender\",\n    value: function restorePositionOnNextRender(value) {\n      this._shouldRenderContentInitialPosition = value || !this._visualPosition;\n    }\n  }, {\n    key: \"openingHandled\",\n    value: function openingHandled() {\n      var shouldRestorePosition = this._props.restorePosition;\n      this.restorePositionOnNextRender(shouldRestorePosition);\n    }\n  }, {\n    key: \"dragHandled\",\n    value: function dragHandled() {\n      this.restorePositionOnNextRender(false);\n    }\n  }, {\n    key: \"resizeHandled\",\n    value: function resizeHandled() {\n      this.restorePositionOnNextRender(false);\n    }\n  }, {\n    key: \"updateTarget\",\n    value: function updateTarget(target) {\n      this._props.target = target;\n      this.updatePosition(this._props.position, target);\n    }\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(positionProp) {\n      var targetProp = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._props.target;\n      this._props.position = positionProp;\n      this._position = this._normalizePosition(positionProp, targetProp);\n\n      this._updateWrapperCoveredElement();\n    }\n  }, {\n    key: \"updateContainer\",\n    value: function updateContainer(containerProp) {\n      this._props.container = containerProp;\n      var container = null !== containerProp && void 0 !== containerProp ? containerProp : viewPort();\n\n      var $container = this._$root.closest(container);\n\n      if (!$container.length) {\n        $container = $(container).first();\n      }\n\n      this._$markupContainer = $container.length ? $container : this._$root.parent();\n\n      this._updateWrapperCoveredElement();\n\n      this._updateDragResizeContainer();\n    }\n  }, {\n    key: \"detectVisualPositionChange\",\n    value: function detectVisualPositionChange(event) {\n      this._updateVisualPositionValue();\n\n      this._raisePositionedEvents(event);\n    }\n  }, {\n    key: \"positionContent\",\n    value: function positionContent() {\n      if (this._shouldRenderContentInitialPosition) {\n        this._renderContentInitialPosition();\n      } else {\n        move(this._$content, this._visualPosition);\n        this.detectVisualPositionChange();\n      }\n    }\n  }, {\n    key: \"positionWrapper\",\n    value: function positionWrapper() {\n      if (this._$wrapperCoveredElement) {\n        positionUtils.setup(this._$wrapper, {\n          my: \"top left\",\n          at: \"top left\",\n          of: this._$wrapperCoveredElement\n        });\n      }\n    }\n  }, {\n    key: \"isAllWindowCoveredByWrapper\",\n    value: function isAllWindowCoveredByWrapper() {\n      return !this._$wrapperCoveredElement || isWindow(this._$wrapperCoveredElement.get(0));\n    }\n  }, {\n    key: \"styleWrapperPosition\",\n    value: function styleWrapperPosition() {\n      var useFixed = this.isAllWindowCoveredByWrapper() || this._props._fixWrapperPosition;\n\n      var positionStyle = useFixed ? \"fixed\" : \"absolute\";\n\n      this._$wrapper.css(\"position\", positionStyle);\n    }\n  }, {\n    key: \"_updateVisualPositionValue\",\n    value: function _updateVisualPositionValue() {\n      this._previousVisualPosition = this._visualPosition;\n      this._visualPosition = locate(this._$content);\n    }\n  }, {\n    key: \"_renderContentInitialPosition\",\n    value: function _renderContentInitialPosition() {\n      this._renderBoundaryOffset();\n\n      resetPosition(this._$content);\n\n      var wrapperOverflow = this._$wrapper.css(\"overflow\");\n\n      this._$wrapper.css(\"overflow\", \"hidden\");\n\n      var resultPosition = positionUtils.setup(this._$content, this._position);\n\n      this._$wrapper.css(\"overflow\", wrapperOverflow);\n\n      this._initialPosition = resultPosition;\n      this.detectVisualPositionChange();\n    }\n  }, {\n    key: \"_raisePositionedEvents\",\n    value: function _raisePositionedEvents(event) {\n      var previousPosition = this._previousVisualPosition;\n      var newPosition = this._visualPosition;\n      var isVisualPositionChanged = (null === previousPosition || void 0 === previousPosition ? void 0 : previousPosition.top) !== newPosition.top || (null === previousPosition || void 0 === previousPosition ? void 0 : previousPosition.left) !== newPosition.left;\n\n      if (isVisualPositionChanged) {\n        this._props.onVisualPositionChanged({\n          previousPosition: previousPosition,\n          position: newPosition,\n          event: event\n        });\n      }\n\n      this._props.onPositioned({\n        position: this._initialPosition\n      });\n    }\n  }, {\n    key: \"_updateOutsideDragFactor\",\n    value: function _updateOutsideDragFactor() {\n      this._outsideDragFactor = this._getOutsideDragFactor();\n    }\n  }, {\n    key: \"_getOutsideDragFactor\",\n    value: function _getOutsideDragFactor() {\n      if (this._props.dragOutsideBoundary) {\n        return 1;\n      }\n\n      return this._props.outsideDragFactor;\n    }\n  }, {\n    key: \"_updateDragResizeContainer\",\n    value: function _updateDragResizeContainer() {\n      this._$dragResizeContainer = this._getDragResizeContainer();\n    }\n  }, {\n    key: \"_getDragResizeContainer\",\n    value: function _getDragResizeContainer() {\n      if (this._props.dragOutsideBoundary) {\n        return $(window);\n      }\n\n      if (this._props.dragAndResizeArea) {\n        return $(this._props.dragAndResizeArea);\n      }\n\n      var isContainerDefined = originalViewPort().get(0) || this._props.container;\n\n      return isContainerDefined ? this._$markupContainer : $(window);\n    }\n  }, {\n    key: \"_updateWrapperCoveredElement\",\n    value: function _updateWrapperCoveredElement() {\n      this._$wrapperCoveredElement = this._getWrapperCoveredElement();\n    }\n  }, {\n    key: \"_renderBoundaryOffset\",\n    value: function _renderBoundaryOffset() {\n      var _this$_position;\n\n      var boundaryOffset = null !== (_this$_position = this._position) && void 0 !== _this$_position ? _this$_position : {\n        boundaryOffset: OVERLAY_DEFAULT_BOUNDARY_OFFSET\n      };\n\n      this._$content.css(\"margin\", \"\".concat(boundaryOffset.v, \"px \").concat(boundaryOffset.h, \"px\"));\n    }\n  }, {\n    key: \"_getWrapperCoveredElement\",\n    value: function _getWrapperCoveredElement() {\n      var containerProp = this._props.container;\n\n      if (containerProp) {\n        return $(containerProp);\n      }\n\n      if (this._position) {\n        return $(isEvent(this._position.of) ? window : this._position.of || window);\n      }\n    }\n  }, {\n    key: \"_normalizePosition\",\n    value: function _normalizePosition(positionProp, targetProp) {\n      var defaultPositionConfig = {\n        of: targetProp,\n        boundaryOffset: OVERLAY_DEFAULT_BOUNDARY_OFFSET\n      };\n\n      if (isDefined(positionProp)) {\n        return extend(true, {}, defaultPositionConfig, this._positionToObject(positionProp));\n      } else {\n        return defaultPositionConfig;\n      }\n    }\n  }, {\n    key: \"_positionToObject\",\n    value: function _positionToObject(position) {\n      if (isString(position)) {\n        return extend({}, OVERLAY_POSITION_ALIASES[position]);\n      }\n\n      return position;\n    }\n  }]);\n\n  return OverlayPositionController;\n}();\n\nexport { OVERLAY_POSITION_ALIASES, OverlayPositionController };","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/devextreme/esm/ui/overlay/overlay_position_controller.js"],"names":["$","isDefined","isString","isEvent","isWindow","extend","positionUtils","resetPosition","move","locate","getWindow","originalViewPort","value","viewPort","window","OVERLAY_POSITION_ALIASES","top","my","at","bottom","right","left","center","OVERLAY_DEFAULT_BOUNDARY_OFFSET","h","v","OverlayPositionController","_ref","position","target","container","$root","$content","$wrapper","onPositioned","onVisualPositionChanged","dragOutsideBoundary","dragAndResizeArea","outsideDragFactor","restorePosition","_fixWrapperPosition","_props","_$root","_$content","_$wrapper","_$markupContainer","_$wrapperCoveredElement","_shouldRenderContentInitialPosition","_visualPosition","_initialPosition","_previousVisualPosition","_$dragResizeContainer","_outsideDragFactor","updateContainer","updatePosition","_updateDragResizeContainer","_updateOutsideDragFactor","fixWrapperPosition","styleWrapperPosition","shouldRestorePosition","restorePositionOnNextRender","positionProp","targetProp","arguments","length","_position","_normalizePosition","_updateWrapperCoveredElement","containerProp","$container","closest","first","parent","event","_updateVisualPositionValue","_raisePositionedEvents","_renderContentInitialPosition","detectVisualPositionChange","setup","of","get","useFixed","isAllWindowCoveredByWrapper","positionStyle","css","_renderBoundaryOffset","wrapperOverflow","resultPosition","previousPosition","newPosition","isVisualPositionChanged","_getOutsideDragFactor","_getDragResizeContainer","isContainerDefined","_getWrapperCoveredElement","_this$_position","boundaryOffset","concat","defaultPositionConfig","_positionToObject"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/overlay/overlay_position_controller.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isEvent,\r\n    isWindow\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    resetPosition,\r\n    move,\r\n    locate\r\n} from \"../../animation/translator\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    originalViewPort,\r\n    value as viewPort\r\n} from \"../../core/utils/view_port\";\r\nvar window = getWindow();\r\nvar OVERLAY_POSITION_ALIASES = {\r\n    top: {\r\n        my: \"top center\",\r\n        at: \"top center\"\r\n    },\r\n    bottom: {\r\n        my: \"bottom center\",\r\n        at: \"bottom center\"\r\n    },\r\n    right: {\r\n        my: \"right center\",\r\n        at: \"right center\"\r\n    },\r\n    left: {\r\n        my: \"left center\",\r\n        at: \"left center\"\r\n    },\r\n    center: {\r\n        my: \"center\",\r\n        at: \"center\"\r\n    },\r\n    \"right bottom\": {\r\n        my: \"right bottom\",\r\n        at: \"right bottom\"\r\n    },\r\n    \"right top\": {\r\n        my: \"right top\",\r\n        at: \"right top\"\r\n    },\r\n    \"left bottom\": {\r\n        my: \"left bottom\",\r\n        at: \"left bottom\"\r\n    },\r\n    \"left top\": {\r\n        my: \"left top\",\r\n        at: \"left top\"\r\n    }\r\n};\r\nvar OVERLAY_DEFAULT_BOUNDARY_OFFSET = {\r\n    h: 0,\r\n    v: 0\r\n};\r\nclass OverlayPositionController {\r\n    constructor(_ref) {\r\n        var {\r\n            position: position,\r\n            target: target,\r\n            container: container,\r\n            $root: $root,\r\n            $content: $content,\r\n            $wrapper: $wrapper,\r\n            onPositioned: onPositioned,\r\n            onVisualPositionChanged: onVisualPositionChanged,\r\n            dragOutsideBoundary: dragOutsideBoundary,\r\n            dragAndResizeArea: dragAndResizeArea,\r\n            outsideDragFactor: outsideDragFactor,\r\n            restorePosition: restorePosition,\r\n            _fixWrapperPosition: _fixWrapperPosition\r\n        } = _ref;\r\n        this._props = {\r\n            position: position,\r\n            target: target,\r\n            container: container,\r\n            dragOutsideBoundary: dragOutsideBoundary,\r\n            dragAndResizeArea: dragAndResizeArea,\r\n            outsideDragFactor: outsideDragFactor,\r\n            restorePosition: restorePosition,\r\n            onPositioned: onPositioned,\r\n            onVisualPositionChanged: onVisualPositionChanged,\r\n            _fixWrapperPosition: _fixWrapperPosition\r\n        };\r\n        this._$root = $root;\r\n        this._$content = $content;\r\n        this._$wrapper = $wrapper;\r\n        this._$markupContainer = void 0;\r\n        this._$wrapperCoveredElement = void 0;\r\n        this._shouldRenderContentInitialPosition = true;\r\n        this._visualPosition = void 0;\r\n        this._initialPosition = void 0;\r\n        this._previousVisualPosition = void 0;\r\n        this._$dragResizeContainer = void 0;\r\n        this._outsideDragFactor = void 0;\r\n        this.updateContainer(container);\r\n        this.updatePosition(position, target);\r\n        this._updateDragResizeContainer();\r\n        this._updateOutsideDragFactor()\r\n    }\r\n    get $container() {\r\n        return this._$markupContainer\r\n    }\r\n    get $dragResizeContainer() {\r\n        return this._$dragResizeContainer\r\n    }\r\n    get outsideDragFactor() {\r\n        return this._outsideDragFactor\r\n    }\r\n    set fixWrapperPosition(fixWrapperPosition) {\r\n        this._props._fixWrapperPosition = fixWrapperPosition;\r\n        this.styleWrapperPosition()\r\n    }\r\n    set dragAndResizeArea(dragAndResizeArea) {\r\n        this._props.dragAndResizeArea = dragAndResizeArea;\r\n        this._updateDragResizeContainer()\r\n    }\r\n    set dragOutsideBoundary(dragOutsideBoundary) {\r\n        this._props.dragOutsideBoundary = dragOutsideBoundary;\r\n        this._updateDragResizeContainer();\r\n        this._updateOutsideDragFactor()\r\n    }\r\n    set outsideDragFactor(outsideDragFactor) {\r\n        this._props.outsideDragFactor = outsideDragFactor;\r\n        this._updateOutsideDragFactor()\r\n    }\r\n    set restorePosition(restorePosition) {\r\n        this._props.restorePosition = restorePosition\r\n    }\r\n    restorePositionOnNextRender(value) {\r\n        this._shouldRenderContentInitialPosition = value || !this._visualPosition\r\n    }\r\n    openingHandled() {\r\n        var shouldRestorePosition = this._props.restorePosition;\r\n        this.restorePositionOnNextRender(shouldRestorePosition)\r\n    }\r\n    dragHandled() {\r\n        this.restorePositionOnNextRender(false)\r\n    }\r\n    resizeHandled() {\r\n        this.restorePositionOnNextRender(false)\r\n    }\r\n    updateTarget(target) {\r\n        this._props.target = target;\r\n        this.updatePosition(this._props.position, target)\r\n    }\r\n    updatePosition(positionProp) {\r\n        var targetProp = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this._props.target;\r\n        this._props.position = positionProp;\r\n        this._position = this._normalizePosition(positionProp, targetProp);\r\n        this._updateWrapperCoveredElement()\r\n    }\r\n    updateContainer(containerProp) {\r\n        this._props.container = containerProp;\r\n        var container = null !== containerProp && void 0 !== containerProp ? containerProp : viewPort();\r\n        var $container = this._$root.closest(container);\r\n        if (!$container.length) {\r\n            $container = $(container).first()\r\n        }\r\n        this._$markupContainer = $container.length ? $container : this._$root.parent();\r\n        this._updateWrapperCoveredElement();\r\n        this._updateDragResizeContainer()\r\n    }\r\n    detectVisualPositionChange(event) {\r\n        this._updateVisualPositionValue();\r\n        this._raisePositionedEvents(event)\r\n    }\r\n    positionContent() {\r\n        if (this._shouldRenderContentInitialPosition) {\r\n            this._renderContentInitialPosition()\r\n        } else {\r\n            move(this._$content, this._visualPosition);\r\n            this.detectVisualPositionChange()\r\n        }\r\n    }\r\n    positionWrapper() {\r\n        if (this._$wrapperCoveredElement) {\r\n            positionUtils.setup(this._$wrapper, {\r\n                my: \"top left\",\r\n                at: \"top left\",\r\n                of: this._$wrapperCoveredElement\r\n            })\r\n        }\r\n    }\r\n    isAllWindowCoveredByWrapper() {\r\n        return !this._$wrapperCoveredElement || isWindow(this._$wrapperCoveredElement.get(0))\r\n    }\r\n    styleWrapperPosition() {\r\n        var useFixed = this.isAllWindowCoveredByWrapper() || this._props._fixWrapperPosition;\r\n        var positionStyle = useFixed ? \"fixed\" : \"absolute\";\r\n        this._$wrapper.css(\"position\", positionStyle)\r\n    }\r\n    _updateVisualPositionValue() {\r\n        this._previousVisualPosition = this._visualPosition;\r\n        this._visualPosition = locate(this._$content)\r\n    }\r\n    _renderContentInitialPosition() {\r\n        this._renderBoundaryOffset();\r\n        resetPosition(this._$content);\r\n        var wrapperOverflow = this._$wrapper.css(\"overflow\");\r\n        this._$wrapper.css(\"overflow\", \"hidden\");\r\n        var resultPosition = positionUtils.setup(this._$content, this._position);\r\n        this._$wrapper.css(\"overflow\", wrapperOverflow);\r\n        this._initialPosition = resultPosition;\r\n        this.detectVisualPositionChange()\r\n    }\r\n    _raisePositionedEvents(event) {\r\n        var previousPosition = this._previousVisualPosition;\r\n        var newPosition = this._visualPosition;\r\n        var isVisualPositionChanged = (null === previousPosition || void 0 === previousPosition ? void 0 : previousPosition.top) !== newPosition.top || (null === previousPosition || void 0 === previousPosition ? void 0 : previousPosition.left) !== newPosition.left;\r\n        if (isVisualPositionChanged) {\r\n            this._props.onVisualPositionChanged({\r\n                previousPosition: previousPosition,\r\n                position: newPosition,\r\n                event: event\r\n            })\r\n        }\r\n        this._props.onPositioned({\r\n            position: this._initialPosition\r\n        })\r\n    }\r\n    _updateOutsideDragFactor() {\r\n        this._outsideDragFactor = this._getOutsideDragFactor()\r\n    }\r\n    _getOutsideDragFactor() {\r\n        if (this._props.dragOutsideBoundary) {\r\n            return 1\r\n        }\r\n        return this._props.outsideDragFactor\r\n    }\r\n    _updateDragResizeContainer() {\r\n        this._$dragResizeContainer = this._getDragResizeContainer()\r\n    }\r\n    _getDragResizeContainer() {\r\n        if (this._props.dragOutsideBoundary) {\r\n            return $(window)\r\n        }\r\n        if (this._props.dragAndResizeArea) {\r\n            return $(this._props.dragAndResizeArea)\r\n        }\r\n        var isContainerDefined = originalViewPort().get(0) || this._props.container;\r\n        return isContainerDefined ? this._$markupContainer : $(window)\r\n    }\r\n    _updateWrapperCoveredElement() {\r\n        this._$wrapperCoveredElement = this._getWrapperCoveredElement()\r\n    }\r\n    _renderBoundaryOffset() {\r\n        var _this$_position;\r\n        var boundaryOffset = null !== (_this$_position = this._position) && void 0 !== _this$_position ? _this$_position : {\r\n            boundaryOffset: OVERLAY_DEFAULT_BOUNDARY_OFFSET\r\n        };\r\n        this._$content.css(\"margin\", \"\".concat(boundaryOffset.v, \"px \").concat(boundaryOffset.h, \"px\"))\r\n    }\r\n    _getWrapperCoveredElement() {\r\n        var containerProp = this._props.container;\r\n        if (containerProp) {\r\n            return $(containerProp)\r\n        }\r\n        if (this._position) {\r\n            return $(isEvent(this._position.of) ? window : this._position.of || window)\r\n        }\r\n    }\r\n    _normalizePosition(positionProp, targetProp) {\r\n        var defaultPositionConfig = {\r\n            of: targetProp,\r\n            boundaryOffset: OVERLAY_DEFAULT_BOUNDARY_OFFSET\r\n        };\r\n        if (isDefined(positionProp)) {\r\n            return extend(true, {}, defaultPositionConfig, this._positionToObject(positionProp))\r\n        } else {\r\n            return defaultPositionConfig\r\n        }\r\n    }\r\n    _positionToObject(position) {\r\n        if (isString(position)) {\r\n            return extend({}, OVERLAY_POSITION_ALIASES[position])\r\n        }\r\n        return position\r\n    }\r\n}\r\nexport {\r\n    OVERLAY_POSITION_ALIASES,\r\n    OverlayPositionController\r\n};\r\n"]},"metadata":{},"sourceType":"module"}