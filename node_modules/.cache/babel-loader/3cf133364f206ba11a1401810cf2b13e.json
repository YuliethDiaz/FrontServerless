{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow } from \"../../core/utils/window\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport browser from \"../../core/utils/browser\";\nimport positionUtils from \"../../animation/position\";\nimport { each } from \"../../core/utils/iterator\";\nimport Class from \"../../core/class\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { VirtualDataLoader } from \"./ui.grid.core.virtual_data_loader\";\nimport { isDefined } from \"../../core/utils/type\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nvar SCROLLING_MODE_INFINITE = \"infinite\";\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\n\nvar _isVirtualMode = function _isVirtualMode(that) {\n  return that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\n};\n\nvar _isAppendMode = function _isAppendMode(that) {\n  return that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\n};\n\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\n  var $scrollElement;\n  var scrollableArray = [];\n  var scrollToArray = [];\n  var disposeArray = [];\n  $targetElement = $targetElement || $element;\n\n  function getElementOffset(scrollable) {\n    var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\n    var scrollableOffset = positionUtils.offset($scrollableElement);\n\n    if (!scrollableOffset) {\n      return $element.offset().top;\n    }\n\n    return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top);\n  }\n\n  var widgetScrollStrategy = {\n    on: function on(scrollable, eventName, handler) {\n      scrollable.on(\"scroll\", handler);\n    },\n    off: function off(scrollable, eventName, handler) {\n      scrollable.off(\"scroll\", handler);\n    }\n  };\n\n  function subscribeToScrollEvents($scrollElement) {\n    var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\n    var scrollable = $scrollElement.data(\"dxScrollable\");\n    var eventsStrategy = widgetScrollStrategy;\n\n    if (!scrollable) {\n      scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\n      eventsStrategy = eventsEngine;\n\n      if (!scrollable) {\n        return;\n      }\n    }\n\n    var handler = function (scrollable) {\n      return function () {\n        var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\n        scrollTop = scrollTop > 0 ? scrollTop : 0;\n        scrollChangedHandler(scrollTop);\n      };\n    }(scrollable);\n\n    eventsStrategy.on(scrollable, \"scroll\", handler);\n    scrollToArray.push(function (pos) {\n      var topOffset = getElementOffset(scrollable);\n      var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\n\n      if (pos - topOffset >= 0) {\n        scrollable[scrollMethod](pos + topOffset);\n      }\n    });\n    scrollableArray.push(scrollable);\n    disposeArray.push(function () {\n      eventsStrategy.off(scrollable, \"scroll\", handler);\n    });\n  }\n\n  for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\n    subscribeToScrollEvents($scrollElement);\n  }\n\n  return {\n    scrollTo: function scrollTo(pos) {\n      each(scrollToArray, function (_, scrollTo) {\n        scrollTo(pos);\n      });\n    },\n    dispose: function dispose() {\n      each(disposeArray, function (_, dispose) {\n        dispose();\n      });\n    }\n  };\n}\nexport var VirtualScrollController = Class.inherit(function () {\n  var members = {\n    ctor: function ctor(component, dataOptions, isVirtual) {\n      this._dataOptions = dataOptions;\n      this.component = component;\n      this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\n      this._viewportItemSize = 20;\n      this._viewportItemIndex = 0;\n      this._position = 0;\n      this._contentSize = 0;\n      this._itemSizes = {};\n      this._sizeRatio = 1;\n      this._isVirtual = isVirtual;\n      this.positionChanged = Callbacks();\n      this._dataLoader = new VirtualDataLoader(this, this._dataOptions);\n    },\n    getItemSizes: function getItemSizes() {\n      return this._itemSizes;\n    },\n    option: function option() {\n      return this.component.option.apply(this.component, arguments);\n    },\n    isVirtual: function isVirtual() {\n      return this._isVirtual;\n    },\n    virtualItemsCount: function virtualItemsCount() {\n      if (_isVirtualMode(this)) {\n        var dataOptions = this._dataOptions;\n        var totalItemsCount = dataOptions.totalItemsCount();\n\n        if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\n          var viewportParams = this.getViewportParams();\n          var loadedOffset = dataOptions.loadedOffset();\n          var loadedItemCount = dataOptions.loadedItemCount();\n          var skip = Math.max(viewportParams.skip, loadedOffset);\n          var take = Math.min(viewportParams.take, loadedItemCount);\n          var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\n          return {\n            begin: skip,\n            end: endItemsCount\n          };\n        }\n\n        return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments);\n      }\n    },\n    getScrollingTimeout: function getScrollingTimeout() {\n      var renderAsync = this.option(\"scrolling.renderAsync\");\n      var scrollingTimeout = 0;\n\n      if (!isDefined(renderAsync)) {\n        scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\n\n        if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\n          scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0;\n        }\n      } else if (renderAsync) {\n        var _this$option;\n\n        scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0;\n      }\n\n      return scrollingTimeout;\n    },\n    setViewportPosition: function setViewportPosition(position) {\n      var _this = this;\n\n      var result = new Deferred();\n      var scrollingTimeout = this.getScrollingTimeout();\n      clearTimeout(this._scrollTimeoutID);\n\n      if (scrollingTimeout > 0) {\n        this._scrollTimeoutID = setTimeout(function () {\n          _this._setViewportPositionCore(position);\n\n          result.resolve();\n        }, scrollingTimeout);\n      } else {\n        this._setViewportPositionCore(position);\n\n        result.resolve();\n      }\n\n      return result.promise();\n    },\n    getViewportPosition: function getViewportPosition() {\n      return this._position;\n    },\n    getItemIndexByPosition: function getItemIndexByPosition(position) {\n      var _position;\n\n      position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\n      var defaultItemSize = this.getItemSize();\n      var offset = 0;\n      var itemOffset = 0;\n      var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\n\n      for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\n        var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\n        var itemOffsetDiff = (position - offset) / defaultItemSize;\n\n        if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\n          itemOffset += itemOffsetDiff;\n          break;\n        } else {\n          itemOffsetDiff = itemOffsetWithSize - itemOffset;\n          offset += itemOffsetDiff * defaultItemSize;\n          itemOffset += itemOffsetDiff;\n        }\n\n        var itemSize = this._itemSizes[itemOffsetWithSize];\n        offset += itemSize;\n        itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize;\n      }\n\n      return Math.round(50 * itemOffset) / 50;\n    },\n    isScrollingBack: function isScrollingBack() {\n      return this._position < this._prevPosition;\n    },\n    _setViewportPositionCore: function _setViewportPositionCore(position) {\n      this._prevPosition = this._position || 0;\n      this._position = position;\n      var itemIndex = this.getItemIndexByPosition();\n      var result = this.setViewportItemIndex(itemIndex);\n      this.positionChanged.fire();\n      return result;\n    },\n    setContentItemSizes: function setContentItemSizes(sizes) {\n      var _this2 = this;\n\n      var virtualItemsCount = this.virtualItemsCount();\n      this._contentSize = sizes.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n\n      if (virtualItemsCount) {\n        sizes.forEach(function (size, index) {\n          _this2._itemSizes[virtualItemsCount.begin + index] = size;\n        });\n\n        var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\n\n        var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\n\n        if (virtualContentSize > contentHeightLimit) {\n          this._sizeRatio = contentHeightLimit / virtualContentSize;\n        } else {\n          this._sizeRatio = 1;\n        }\n      }\n    },\n    getItemSize: function getItemSize() {\n      return this._viewportItemSize * this._sizeRatio;\n    },\n    getItemOffset: function getItemOffset(itemIndex, isEnd) {\n      var _this3 = this;\n\n      var virtualItemsCount = this.virtualItemsCount();\n      var itemCount = itemIndex;\n\n      if (!virtualItemsCount) {\n        return 0;\n      }\n\n      var offset = 0;\n\n      var totalItemsCount = this._dataOptions.totalItemsCount();\n\n      Object.keys(this._itemSizes).forEach(function (currentItemIndex) {\n        if (!itemCount) {\n          return;\n        }\n\n        if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\n          offset += _this3._itemSizes[currentItemIndex];\n          itemCount--;\n        }\n      });\n      return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio);\n    },\n    getContentOffset: function getContentOffset(type) {\n      var isEnd = \"end\" === type;\n      var virtualItemsCount = this.virtualItemsCount();\n\n      if (!virtualItemsCount) {\n        return 0;\n      }\n\n      return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd);\n    },\n    getVirtualContentSize: function getVirtualContentSize() {\n      var virtualItemsCount = this.virtualItemsCount();\n      return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0;\n    },\n    getViewportItemIndex: function getViewportItemIndex() {\n      return this._viewportItemIndex;\n    },\n    setViewportItemIndex: function setViewportItemIndex(itemIndex) {\n      this._viewportItemIndex = itemIndex;\n\n      if (false === this.option(LEGACY_SCROLLING_MODE)) {\n        return;\n      }\n\n      return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments);\n    },\n    viewportItemSize: function viewportItemSize(size) {\n      if (void 0 !== size) {\n        this._viewportItemSize = size;\n      }\n\n      return this._viewportItemSize;\n    },\n    viewportSize: function viewportSize(size) {\n      if (void 0 !== size) {\n        this._viewportSize = size;\n      }\n\n      return this._viewportSize;\n    },\n    viewportHeight: function viewportHeight(height) {\n      var begin = this.getItemIndexByPosition();\n      var end = this.getItemIndexByPosition(this._position + height);\n      this.viewportSize(Math.ceil(end - begin));\n\n      if (this._viewportItemIndex !== begin) {\n        this._setViewportPositionCore(this._position);\n      }\n    },\n    reset: function reset(isRefresh) {\n      this._dataLoader.reset();\n\n      if (!isRefresh) {\n        this._itemSizes = {};\n      }\n    },\n    subscribeToWindowScrollEvents: function subscribeToWindowScrollEvents($element) {\n      var _this4 = this;\n\n      this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, function (scrollTop) {\n        if (_this4.viewportItemSize()) {\n          _this4.setViewportPosition(scrollTop);\n        }\n      });\n    },\n    dispose: function dispose() {\n      clearTimeout(this._scrollTimeoutID);\n      this._windowScroll && this._windowScroll.dispose();\n      this._windowScroll = null;\n    },\n    scrollTo: function scrollTo(pos) {\n      this._windowScroll && this._windowScroll.scrollTo(pos);\n    },\n    isVirtualMode: function isVirtualMode() {\n      return _isVirtualMode(this);\n    },\n    isAppendMode: function isAppendMode() {\n      return _isAppendMode(this);\n    },\n    getViewportParams: function getViewportParams() {\n      var _this$option2;\n\n      var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\n\n      var totalItemsCount = this._dataOptions.totalItemsCount();\n\n      var topIndex = this._viewportItemIndex;\n      var bottomIndex = this._viewportSize + topIndex;\n      var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\n      var isScrollingBack = this.isScrollingBack();\n      var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\n      var topMinGap = isScrollingBack ? minGap : 0;\n      var bottomMinGap = isScrollingBack ? 0 : minGap;\n      var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\n      var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\n\n      if (virtualMode) {\n        var remainedItems = Math.max(0, totalItemsCount - skip);\n        take = Math.min(take, remainedItems);\n      }\n\n      return {\n        skip: skip,\n        take: take\n      };\n    },\n    itemsCount: function itemsCount() {\n      var result = 0;\n\n      if (this.option(LEGACY_SCROLLING_MODE)) {\n        result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments);\n      } else {\n        result = this._dataOptions.itemsCount();\n      }\n\n      return result;\n    }\n  };\n  [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach(function (name) {\n    members[name] = function () {\n      return this._dataLoader[name].apply(this._dataLoader, arguments);\n    };\n  });\n  return members;\n}());","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js"],"names":["$","getWindow","eventsEngine","browser","positionUtils","each","Class","Deferred","Callbacks","VirtualDataLoader","isDefined","gridCoreUtils","SCROLLING_MODE_INFINITE","SCROLLING_MODE_VIRTUAL","LEGACY_SCROLLING_MODE","_isVirtualMode","that","option","_isVirtual","_isAppendMode","subscribeToExternalScrollers","$element","scrollChangedHandler","$targetElement","$scrollElement","scrollableArray","scrollToArray","disposeArray","getElementOffset","scrollable","$scrollableElement","element","scrollableOffset","offset","top","scrollTop","widgetScrollStrategy","on","eventName","handler","off","subscribeToScrollEvents","isDocument","get","nodeName","data","eventsStrategy","css","push","pos","topOffset","scrollMethod","scrollTo","parent","length","_","dispose","VirtualScrollController","inherit","members","ctor","component","dataOptions","isVirtual","_dataOptions","_viewportSize","_viewportItemSize","_viewportItemIndex","_position","_contentSize","_itemSizes","_sizeRatio","positionChanged","_dataLoader","getItemSizes","apply","arguments","virtualItemsCount","totalItemsCount","viewportParams","getViewportParams","loadedOffset","loadedItemCount","skip","Math","max","take","min","endItemsCount","begin","end","getScrollingTimeout","renderAsync","scrollingTimeout","changingDuration","_this$option","setViewportPosition","position","result","clearTimeout","_scrollTimeoutID","setTimeout","_setViewportPositionCore","resolve","promise","getViewportPosition","getItemIndexByPosition","defaultItemSize","getItemSize","itemOffset","itemOffsetsWithSize","Object","keys","concat","i","itemOffsetWithSize","parseInt","itemOffsetDiff","itemSize","round","isScrollingBack","_prevPosition","itemIndex","setViewportItemIndex","fire","setContentItemSizes","sizes","reduce","a","b","forEach","size","index","virtualContentSize","itemsCount","contentHeightLimit","getContentHeightLimit","getItemOffset","isEnd","itemCount","currentItemIndex","floor","getContentOffset","type","getVirtualContentSize","getViewportItemIndex","viewportItemIndexChanged","viewportItemSize","viewportSize","viewportHeight","height","ceil","reset","isRefresh","subscribeToWindowScrollEvents","_windowScroll","isVirtualMode","isAppendMode","_this$option2","virtualMode","topIndex","bottomIndex","maxGap","minGap","topMinGap","bottomMinGap","remainedItems","name"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.virtual_scrolling_core.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport positionUtils from \"../../animation/position\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport Class from \"../../core/class\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    VirtualDataLoader\r\n} from \"./ui.grid.core.virtual_data_loader\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nvar SCROLLING_MODE_INFINITE = \"infinite\";\r\nvar SCROLLING_MODE_VIRTUAL = \"virtual\";\r\nvar LEGACY_SCROLLING_MODE = \"scrolling.legacyMode\";\r\nvar _isVirtualMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL || that._isVirtual;\r\nvar _isAppendMode = that => that.option(\"scrolling.mode\") === SCROLLING_MODE_INFINITE && !that._isVirtual;\r\nexport function subscribeToExternalScrollers($element, scrollChangedHandler, $targetElement) {\r\n    var $scrollElement;\r\n    var scrollableArray = [];\r\n    var scrollToArray = [];\r\n    var disposeArray = [];\r\n    $targetElement = $targetElement || $element;\r\n\r\n    function getElementOffset(scrollable) {\r\n        var $scrollableElement = scrollable.element ? scrollable.$element() : scrollable;\r\n        var scrollableOffset = positionUtils.offset($scrollableElement);\r\n        if (!scrollableOffset) {\r\n            return $element.offset().top\r\n        }\r\n        return scrollable.scrollTop() - (scrollableOffset.top - $element.offset().top)\r\n    }\r\n    var widgetScrollStrategy = {\r\n        on: function(scrollable, eventName, handler) {\r\n            scrollable.on(\"scroll\", handler)\r\n        },\r\n        off: function(scrollable, eventName, handler) {\r\n            scrollable.off(\"scroll\", handler)\r\n        }\r\n    };\r\n\r\n    function subscribeToScrollEvents($scrollElement) {\r\n        var isDocument = \"#document\" === $scrollElement.get(0).nodeName;\r\n        var scrollable = $scrollElement.data(\"dxScrollable\");\r\n        var eventsStrategy = widgetScrollStrategy;\r\n        if (!scrollable) {\r\n            scrollable = isDocument && $(getWindow()) || \"auto\" === $scrollElement.css(\"overflowY\") && $scrollElement;\r\n            eventsStrategy = eventsEngine;\r\n            if (!scrollable) {\r\n                return\r\n            }\r\n        }\r\n        var handler = function(scrollable) {\r\n            return function() {\r\n                var scrollTop = scrollable.scrollTop() - getElementOffset(scrollable);\r\n                scrollTop = scrollTop > 0 ? scrollTop : 0;\r\n                scrollChangedHandler(scrollTop)\r\n            }\r\n        }(scrollable);\r\n        eventsStrategy.on(scrollable, \"scroll\", handler);\r\n        scrollToArray.push((function(pos) {\r\n            var topOffset = getElementOffset(scrollable);\r\n            var scrollMethod = scrollable.scrollTo ? \"scrollTo\" : \"scrollTop\";\r\n            if (pos - topOffset >= 0) {\r\n                scrollable[scrollMethod](pos + topOffset)\r\n            }\r\n        }));\r\n        scrollableArray.push(scrollable);\r\n        disposeArray.push((function() {\r\n            eventsStrategy.off(scrollable, \"scroll\", handler)\r\n        }))\r\n    }\r\n    for ($scrollElement = $targetElement.parent(); $scrollElement.length; $scrollElement = $scrollElement.parent()) {\r\n        subscribeToScrollEvents($scrollElement)\r\n    }\r\n    return {\r\n        scrollTo: function(pos) {\r\n            each(scrollToArray, (function(_, scrollTo) {\r\n                scrollTo(pos)\r\n            }))\r\n        },\r\n        dispose: function() {\r\n            each(disposeArray, (function(_, dispose) {\r\n                dispose()\r\n            }))\r\n        }\r\n    }\r\n}\r\nexport var VirtualScrollController = Class.inherit(function() {\r\n    var members = {\r\n        ctor: function(component, dataOptions, isVirtual) {\r\n            this._dataOptions = dataOptions;\r\n            this.component = component;\r\n            this._viewportSize = false === component.option(LEGACY_SCROLLING_MODE) ? 15 : 0;\r\n            this._viewportItemSize = 20;\r\n            this._viewportItemIndex = 0;\r\n            this._position = 0;\r\n            this._contentSize = 0;\r\n            this._itemSizes = {};\r\n            this._sizeRatio = 1;\r\n            this._isVirtual = isVirtual;\r\n            this.positionChanged = Callbacks();\r\n            this._dataLoader = new VirtualDataLoader(this, this._dataOptions)\r\n        },\r\n        getItemSizes: function() {\r\n            return this._itemSizes\r\n        },\r\n        option: function() {\r\n            return this.component.option.apply(this.component, arguments)\r\n        },\r\n        isVirtual: function() {\r\n            return this._isVirtual\r\n        },\r\n        virtualItemsCount: function() {\r\n            if (_isVirtualMode(this)) {\r\n                var dataOptions = this._dataOptions;\r\n                var totalItemsCount = dataOptions.totalItemsCount();\r\n                if (false === this.option(LEGACY_SCROLLING_MODE) && -1 !== totalItemsCount) {\r\n                    var viewportParams = this.getViewportParams();\r\n                    var loadedOffset = dataOptions.loadedOffset();\r\n                    var loadedItemCount = dataOptions.loadedItemCount();\r\n                    var skip = Math.max(viewportParams.skip, loadedOffset);\r\n                    var take = Math.min(viewportParams.take, loadedItemCount);\r\n                    var endItemsCount = Math.max(totalItemsCount - (skip + take), 0);\r\n                    return {\r\n                        begin: skip,\r\n                        end: endItemsCount\r\n                    }\r\n                }\r\n                return this._dataLoader.virtualItemsCount.apply(this._dataLoader, arguments)\r\n            }\r\n        },\r\n        getScrollingTimeout: function() {\r\n            var renderAsync = this.option(\"scrolling.renderAsync\");\r\n            var scrollingTimeout = 0;\r\n            if (!isDefined(renderAsync)) {\r\n                scrollingTimeout = Math.min(this.option(\"scrolling.timeout\") || 0, this._dataOptions.changingDuration());\r\n                if (scrollingTimeout < this.option(\"scrolling.renderingThreshold\")) {\r\n                    scrollingTimeout = this.option(\"scrolling.minTimeout\") || 0\r\n                }\r\n            } else if (renderAsync) {\r\n                var _this$option;\r\n                scrollingTimeout = null !== (_this$option = this.option(\"scrolling.timeout\")) && void 0 !== _this$option ? _this$option : 0\r\n            }\r\n            return scrollingTimeout\r\n        },\r\n        setViewportPosition: function(position) {\r\n            var result = new Deferred;\r\n            var scrollingTimeout = this.getScrollingTimeout();\r\n            clearTimeout(this._scrollTimeoutID);\r\n            if (scrollingTimeout > 0) {\r\n                this._scrollTimeoutID = setTimeout(() => {\r\n                    this._setViewportPositionCore(position);\r\n                    result.resolve()\r\n                }, scrollingTimeout)\r\n            } else {\r\n                this._setViewportPositionCore(position);\r\n                result.resolve()\r\n            }\r\n            return result.promise()\r\n        },\r\n        getViewportPosition: function() {\r\n            return this._position\r\n        },\r\n        getItemIndexByPosition: function(position) {\r\n            var _position;\r\n            position = null !== (_position = position) && void 0 !== _position ? _position : this._position;\r\n            var defaultItemSize = this.getItemSize();\r\n            var offset = 0;\r\n            var itemOffset = 0;\r\n            var itemOffsetsWithSize = Object.keys(this._itemSizes).concat(-1);\r\n            for (var i = 0; i < itemOffsetsWithSize.length && offset < position; i++) {\r\n                var itemOffsetWithSize = parseInt(itemOffsetsWithSize[i]);\r\n                var itemOffsetDiff = (position - offset) / defaultItemSize;\r\n                if (itemOffsetWithSize < 0 || itemOffset + itemOffsetDiff < itemOffsetWithSize) {\r\n                    itemOffset += itemOffsetDiff;\r\n                    break\r\n                } else {\r\n                    itemOffsetDiff = itemOffsetWithSize - itemOffset;\r\n                    offset += itemOffsetDiff * defaultItemSize;\r\n                    itemOffset += itemOffsetDiff\r\n                }\r\n                var itemSize = this._itemSizes[itemOffsetWithSize];\r\n                offset += itemSize;\r\n                itemOffset += offset < position ? 1 : (position - offset + itemSize) / itemSize\r\n            }\r\n            return Math.round(50 * itemOffset) / 50\r\n        },\r\n        isScrollingBack: function() {\r\n            return this._position < this._prevPosition\r\n        },\r\n        _setViewportPositionCore: function(position) {\r\n            this._prevPosition = this._position || 0;\r\n            this._position = position;\r\n            var itemIndex = this.getItemIndexByPosition();\r\n            var result = this.setViewportItemIndex(itemIndex);\r\n            this.positionChanged.fire();\r\n            return result\r\n        },\r\n        setContentItemSizes: function(sizes) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            this._contentSize = sizes.reduce((a, b) => a + b, 0);\r\n            if (virtualItemsCount) {\r\n                sizes.forEach((size, index) => {\r\n                    this._itemSizes[virtualItemsCount.begin + index] = size\r\n                });\r\n                var virtualContentSize = (virtualItemsCount.begin + virtualItemsCount.end + this.itemsCount()) * this._viewportItemSize;\r\n                var contentHeightLimit = gridCoreUtils.getContentHeightLimit(browser);\r\n                if (virtualContentSize > contentHeightLimit) {\r\n                    this._sizeRatio = contentHeightLimit / virtualContentSize\r\n                } else {\r\n                    this._sizeRatio = 1\r\n                }\r\n            }\r\n        },\r\n        getItemSize: function() {\r\n            return this._viewportItemSize * this._sizeRatio\r\n        },\r\n        getItemOffset: function(itemIndex, isEnd) {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            var itemCount = itemIndex;\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            var offset = 0;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            Object.keys(this._itemSizes).forEach(currentItemIndex => {\r\n                if (!itemCount) {\r\n                    return\r\n                }\r\n                if (isEnd ? currentItemIndex >= totalItemsCount - itemIndex : currentItemIndex < itemIndex) {\r\n                    offset += this._itemSizes[currentItemIndex];\r\n                    itemCount--\r\n                }\r\n            });\r\n            return Math.floor(offset + itemCount * this._viewportItemSize * this._sizeRatio)\r\n        },\r\n        getContentOffset: function(type) {\r\n            var isEnd = \"end\" === type;\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            if (!virtualItemsCount) {\r\n                return 0\r\n            }\r\n            return this.getItemOffset(isEnd ? virtualItemsCount.end : virtualItemsCount.begin, isEnd)\r\n        },\r\n        getVirtualContentSize: function() {\r\n            var virtualItemsCount = this.virtualItemsCount();\r\n            return virtualItemsCount ? this.getContentOffset(\"begin\") + this.getContentOffset(\"end\") + this._contentSize : 0\r\n        },\r\n        getViewportItemIndex: function() {\r\n            return this._viewportItemIndex\r\n        },\r\n        setViewportItemIndex: function(itemIndex) {\r\n            this._viewportItemIndex = itemIndex;\r\n            if (false === this.option(LEGACY_SCROLLING_MODE)) {\r\n                return\r\n            }\r\n            return this._dataLoader.viewportItemIndexChanged.apply(this._dataLoader, arguments)\r\n        },\r\n        viewportItemSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportItemSize = size\r\n            }\r\n            return this._viewportItemSize\r\n        },\r\n        viewportSize: function(size) {\r\n            if (void 0 !== size) {\r\n                this._viewportSize = size\r\n            }\r\n            return this._viewportSize\r\n        },\r\n        viewportHeight: function(height) {\r\n            var begin = this.getItemIndexByPosition();\r\n            var end = this.getItemIndexByPosition(this._position + height);\r\n            this.viewportSize(Math.ceil(end - begin));\r\n            if (this._viewportItemIndex !== begin) {\r\n                this._setViewportPositionCore(this._position)\r\n            }\r\n        },\r\n        reset: function(isRefresh) {\r\n            this._dataLoader.reset();\r\n            if (!isRefresh) {\r\n                this._itemSizes = {}\r\n            }\r\n        },\r\n        subscribeToWindowScrollEvents: function($element) {\r\n            this._windowScroll = this._windowScroll || subscribeToExternalScrollers($element, scrollTop => {\r\n                if (this.viewportItemSize()) {\r\n                    this.setViewportPosition(scrollTop)\r\n                }\r\n            })\r\n        },\r\n        dispose: function() {\r\n            clearTimeout(this._scrollTimeoutID);\r\n            this._windowScroll && this._windowScroll.dispose();\r\n            this._windowScroll = null\r\n        },\r\n        scrollTo: function(pos) {\r\n            this._windowScroll && this._windowScroll.scrollTo(pos)\r\n        },\r\n        isVirtualMode: function() {\r\n            return _isVirtualMode(this)\r\n        },\r\n        isAppendMode: function() {\r\n            return _isAppendMode(this)\r\n        },\r\n        getViewportParams: function() {\r\n            var _this$option2;\r\n            var virtualMode = this.option(\"scrolling.mode\") === SCROLLING_MODE_VIRTUAL;\r\n            var totalItemsCount = this._dataOptions.totalItemsCount();\r\n            var topIndex = this._viewportItemIndex;\r\n            var bottomIndex = this._viewportSize + topIndex;\r\n            var maxGap = this.option(\"scrolling.prerenderedRowChunkSize\") || 1;\r\n            var isScrollingBack = this.isScrollingBack();\r\n            var minGap = null !== (_this$option2 = this.option(\"scrolling.prerenderedRowCount\")) && void 0 !== _this$option2 ? _this$option2 : 1;\r\n            var topMinGap = isScrollingBack ? minGap : 0;\r\n            var bottomMinGap = isScrollingBack ? 0 : minGap;\r\n            var skip = Math.floor(Math.max(0, topIndex - topMinGap) / maxGap) * maxGap;\r\n            var take = Math.ceil((bottomIndex + bottomMinGap - skip) / maxGap) * maxGap;\r\n            if (virtualMode) {\r\n                var remainedItems = Math.max(0, totalItemsCount - skip);\r\n                take = Math.min(take, remainedItems)\r\n            }\r\n            return {\r\n                skip: skip,\r\n                take: take\r\n            }\r\n        },\r\n        itemsCount: function() {\r\n            var result = 0;\r\n            if (this.option(LEGACY_SCROLLING_MODE)) {\r\n                result = this._dataLoader.itemsCount.apply(this._dataLoader, arguments)\r\n            } else {\r\n                result = this._dataOptions.itemsCount()\r\n            }\r\n            return result\r\n        }\r\n    };\r\n    [\"pageIndex\", \"beginPageIndex\", \"endPageIndex\", \"pageSize\", \"load\", \"loadIfNeed\", \"handleDataChanged\", \"getDelayDeferred\"].forEach((function(name) {\r\n        members[name] = function() {\r\n            return this._dataLoader[name].apply(this._dataLoader, arguments)\r\n        }\r\n    }));\r\n    return members\r\n}());\r\n"]},"metadata":{},"sourceType":"module"}