{"ast":null,"code":"import _classCallCheck from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\nimport { createComponentVNode, normalizeProps } from \"inferno\";\nimport { InfernoEffect, InfernoComponent } from \"@devextreme/runtime/inferno\";\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\nimport { getElementWidth, getElementStyle } from \"./utils/get_element_width\";\nimport { isDefined } from \"../../../core/utils/type\";\nexport var viewFunction = function viewFunction(_ref) {\n  var contentAttributes = _ref.contentAttributes,\n      infoTextRef = _ref.infoTextRef,\n      infoTextVisible = _ref.infoTextVisible,\n      isLargeDisplayMode = _ref.isLargeDisplayMode,\n      pageSizesRef = _ref.pageSizesRef,\n      pagesRef = _ref.pagesRef,\n      parentRef = _ref.parentRef,\n      Content = _ref.props.contentTemplate;\n  return Content(_extends({\n    rootElementRef: parentRef,\n    pageSizesRef: pageSizesRef,\n    infoTextRef: infoTextRef,\n    pagesRef: pagesRef,\n    infoTextVisible: infoTextVisible,\n    isLargeDisplayMode: isLargeDisplayMode\n  }, contentAttributes));\n};\nexport function calculateAdaptivityProps(_ref2) {\n  var infoWidth = _ref2.info,\n      pageSizesWidth = _ref2.pageSizes,\n      pagesWidth = _ref2.pages,\n      parentWidth = _ref2.parent;\n  var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\n  var infoTextVisible = parentWidth - minimalWidth > 0;\n  var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\n  return {\n    infoTextVisible: infoTextVisible,\n    isLargeDisplayMode: isLargeDisplayMode\n  };\n}\n\nfunction getElementsWidth(_ref3) {\n  var info = _ref3.info,\n      pageSizes = _ref3.pageSizes,\n      pages = _ref3.pages,\n      parent = _ref3.parent;\n  var parentWidth = getElementWidth(parent);\n  var pageSizesWidth = getElementWidth(pageSizes);\n  var infoWidth = getElementWidth(info);\n  var pagesHtmlWidth = getElementWidth(pages);\n  return {\n    parent: parentWidth,\n    pageSizes: pageSizesWidth,\n    info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\n    pages: pagesHtmlWidth\n  };\n}\n\nexport var ResizableContainerProps = {};\nimport { createRef as infernoCreateRef } from \"inferno\";\n\nvar getTemplate = function getTemplate(TemplateProp) {\n  return TemplateProp && (TemplateProp.defaultProps ? function (props) {\n    return normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props)));\n  } : TemplateProp);\n};\n\nexport var ResizableContainer = /*#__PURE__*/function (_InfernoComponent) {\n  _inherits(ResizableContainer, _InfernoComponent);\n\n  var _super = _createSuper(ResizableContainer);\n\n  function ResizableContainer(props) {\n    var _this;\n\n    _classCallCheck(this, ResizableContainer);\n\n    _this = _super.call(this, props);\n    _this.parentRef = infernoCreateRef();\n    _this.pageSizesRef = infernoCreateRef();\n    _this.infoTextRef = infernoCreateRef();\n    _this.pagesRef = infernoCreateRef();\n    _this.state = {\n      infoTextVisible: true,\n      isLargeDisplayMode: true\n    };\n    _this.subscribeToResize = _this.subscribeToResize.bind(_assertThisInitialized(_this));\n    _this.effectUpdateChildProps = _this.effectUpdateChildProps.bind(_assertThisInitialized(_this));\n    _this.updateAdaptivityProps = _this.updateAdaptivityProps.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ResizableContainer, [{\n    key: \"createEffects\",\n    value: function createEffects() {\n      return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])];\n    }\n  }, {\n    key: \"updateEffects\",\n    value: function updateEffects() {\n      var _this$_effects$, _this$_effects$2;\n\n      null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\n      null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate]);\n    }\n  }, {\n    key: \"subscribeToResize\",\n    value: function subscribeToResize() {\n      var _this2 = this;\n\n      var callback = function callback() {\n        _this2.updateAdaptivityProps();\n      };\n\n      resizeCallbacks.add(callback);\n      return function () {\n        resizeCallbacks.remove(callback);\n      };\n    }\n  }, {\n    key: \"effectUpdateChildProps\",\n    value: function effectUpdateChildProps() {\n      var parentWidth = this.parentRef.current ? getElementWidth(this.parentRef.current) : 0;\n\n      if (parentWidth > 0) {\n        this.updateAdaptivityProps();\n      }\n    }\n  }, {\n    key: \"contentAttributes\",\n    get: function get() {\n      var _this$props$pagerProp = this.props.pagerProps,\n          className = _this$props$pagerProp.className,\n          displayMode = _this$props$pagerProp.displayMode,\n          gridCompatibility = _this$props$pagerProp.gridCompatibility,\n          hasKnownLastPage = _this$props$pagerProp.hasKnownLastPage,\n          infoText = _this$props$pagerProp.infoText,\n          lightModeEnabled = _this$props$pagerProp.lightModeEnabled,\n          maxPagesCount = _this$props$pagerProp.maxPagesCount,\n          onKeyDown = _this$props$pagerProp.onKeyDown,\n          pageCount = _this$props$pagerProp.pageCount,\n          pageIndex = _this$props$pagerProp.pageIndex,\n          pageIndexChange = _this$props$pagerProp.pageIndexChange,\n          pageSize = _this$props$pagerProp.pageSize,\n          pageSizeChange = _this$props$pagerProp.pageSizeChange,\n          pageSizes = _this$props$pagerProp.pageSizes,\n          pagesCountText = _this$props$pagerProp.pagesCountText,\n          pagesNavigatorVisible = _this$props$pagerProp.pagesNavigatorVisible,\n          rtlEnabled = _this$props$pagerProp.rtlEnabled,\n          showInfo = _this$props$pagerProp.showInfo,\n          showNavigationButtons = _this$props$pagerProp.showNavigationButtons,\n          showPageSizes = _this$props$pagerProp.showPageSizes,\n          totalCount = _this$props$pagerProp.totalCount,\n          visible = _this$props$pagerProp.visible;\n      return _extends({}, this.restAttributes, {\n        pageSize: pageSize,\n        pageIndex: pageIndex,\n        pageIndexChange: pageIndexChange,\n        pageSizeChange: pageSizeChange,\n        gridCompatibility: gridCompatibility,\n        className: className,\n        showInfo: showInfo,\n        infoText: infoText,\n        lightModeEnabled: lightModeEnabled,\n        displayMode: displayMode,\n        maxPagesCount: maxPagesCount,\n        pageCount: pageCount,\n        pagesCountText: pagesCountText,\n        visible: visible,\n        hasKnownLastPage: hasKnownLastPage,\n        pagesNavigatorVisible: pagesNavigatorVisible,\n        showPageSizes: showPageSizes,\n        pageSizes: pageSizes,\n        rtlEnabled: rtlEnabled,\n        showNavigationButtons: showNavigationButtons,\n        totalCount: totalCount,\n        onKeyDown: onKeyDown\n      });\n    }\n  }, {\n    key: \"updateAdaptivityProps\",\n    value: function updateAdaptivityProps() {\n      var _this3 = this;\n\n      var currentElementsWidth = getElementsWidth({\n        parent: this.parentRef.current,\n        pageSizes: this.pageSizesRef.current,\n        info: this.infoTextRef.current,\n        pages: this.pagesRef.current\n      });\n\n      if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\n        return;\n      }\n\n      var isEmpty = !isDefined(this.elementsWidth);\n\n      if (isEmpty) {\n        this.elementsWidth = {};\n      }\n\n      if (isEmpty || this.state.isLargeDisplayMode) {\n        this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\n        this.elementsWidth.pages = currentElementsWidth.pages;\n      }\n\n      if (isEmpty || this.state.infoTextVisible) {\n        this.elementsWidth.info = currentElementsWidth.info;\n      }\n\n      this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\n        parent: currentElementsWidth.parent\n      }, this.elementsWidth));\n      this.setState(function (__state_argument) {\n        return {\n          infoTextVisible: _this3.actualAdaptivityProps.infoTextVisible\n        };\n      });\n      this.setState(function (__state_argument) {\n        return {\n          isLargeDisplayMode: _this3.actualAdaptivityProps.isLargeDisplayMode\n        };\n      });\n    }\n  }, {\n    key: \"restAttributes\",\n    get: function get() {\n      var _this$props = this.props,\n          restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n      return restProps;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return viewFunction({\n        props: _extends({}, props, {\n          contentTemplate: getTemplate(props.contentTemplate)\n        }),\n        infoTextVisible: this.state.infoTextVisible,\n        isLargeDisplayMode: this.state.isLargeDisplayMode,\n        parentRef: this.parentRef,\n        pageSizesRef: this.pageSizesRef,\n        infoTextRef: this.infoTextRef,\n        pagesRef: this.pagesRef,\n        contentAttributes: this.contentAttributes,\n        updateAdaptivityProps: this.updateAdaptivityProps,\n        restAttributes: this.restAttributes\n      });\n    }\n  }]);\n\n  return ResizableContainer;\n}(InfernoComponent);\nResizableContainer.defaultProps = ResizableContainerProps;","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/devextreme/esm/renovation/ui/pager/resizable_container.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","createComponentVNode","normalizeProps","InfernoEffect","InfernoComponent","resizeCallbacks","getElementWidth","getElementStyle","isDefined","viewFunction","_ref","contentAttributes","infoTextRef","infoTextVisible","isLargeDisplayMode","pageSizesRef","pagesRef","parentRef","Content","props","contentTemplate","rootElementRef","calculateAdaptivityProps","_ref2","infoWidth","info","pageSizesWidth","pageSizes","pagesWidth","pages","parentWidth","parent","minimalWidth","getElementsWidth","_ref3","pagesHtmlWidth","ResizableContainerProps","createRef","infernoCreateRef","getTemplate","TemplateProp","defaultProps","ResizableContainer","state","subscribeToResize","bind","effectUpdateChildProps","updateAdaptivityProps","pagerProps","_this$_effects$","_this$_effects$2","_effects","update","callback","add","remove","current","className","displayMode","gridCompatibility","hasKnownLastPage","infoText","lightModeEnabled","maxPagesCount","onKeyDown","pageCount","pageIndex","pageIndexChange","pageSize","pageSizeChange","pagesCountText","pagesNavigatorVisible","rtlEnabled","showInfo","showNavigationButtons","showPageSizes","totalCount","visible","restAttributes","currentElementsWidth","actualAdaptivityProps","isEmpty","elementsWidth","setState","__state_argument","_this$props","restProps"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,IAAIC,SAAS,GAAG,CAAC,iBAAD,EAAoB,YAApB,CAAhB;AACA,SACIC,oBADJ,EAEIC,cAFJ,QAGO,SAHP;AAIA,SACIC,aADJ,EAEIC,gBAFJ,QAGO,6BAHP;AAIA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,SACIC,eADJ,EAEIC,eAFJ,QAGO,2BAHP;AAIA,SACIC,SADJ,QAEO,0BAFP;AAGA,OAAO,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAC9B,MACuBC,iBADvB,GAWID,IAXJ,CACIC,iBADJ;AAAA,MAEiBC,WAFjB,GAWIF,IAXJ,CAEIE,WAFJ;AAAA,MAGqBC,eAHrB,GAWIH,IAXJ,CAGIG,eAHJ;AAAA,MAIwBC,kBAJxB,GAWIJ,IAXJ,CAIII,kBAJJ;AAAA,MAKkBC,YALlB,GAWIL,IAXJ,CAKIK,YALJ;AAAA,MAMcC,QANd,GAWIN,IAXJ,CAMIM,QANJ;AAAA,MAOeC,SAPf,GAWIP,IAXJ,CAOIO,SAPJ;AAAA,MASyBC,OATzB,GAWIR,IAXJ,CAQIS,KARJ,CASQC,eATR;AAYA,SAAOF,OAAO,CAACnB,QAAQ,CAAC;AACpBsB,IAAAA,cAAc,EAAEJ,SADI;AAEpBF,IAAAA,YAAY,EAAEA,YAFM;AAGpBH,IAAAA,WAAW,EAAEA,WAHO;AAIpBI,IAAAA,QAAQ,EAAEA,QAJU;AAKpBH,IAAAA,eAAe,EAAEA,eALG;AAMpBC,IAAAA,kBAAkB,EAAEA;AANA,GAAD,EAOpBH,iBAPoB,CAAT,CAAd;AAQH,CArBM;AAsBP,OAAO,SAASW,wBAAT,CAAkCC,KAAlC,EAAyC;AAC5C,MACUC,SADV,GAKID,KALJ,CACIE,IADJ;AAAA,MAEeC,cAFf,GAKIH,KALJ,CAEII,SAFJ;AAAA,MAGWC,UAHX,GAKIL,KALJ,CAGIM,KAHJ;AAAA,MAIYC,WAJZ,GAKIP,KALJ,CAIIQ,MAJJ;AAMA,MAAIC,YAAY,GAAGN,cAAc,GAAGE,UAAjB,GAA8BJ,SAAjD;AACA,MAAIX,eAAe,GAAGiB,WAAW,GAAGE,YAAd,GAA6B,CAAnD;AACA,MAAIlB,kBAAkB,GAAGgB,WAAW,IAAIJ,cAAc,GAAGE,UAArB,CAAX,GAA8C,CAAvE;AACA,SAAO;AACHf,IAAAA,eAAe,EAAEA,eADd;AAEHC,IAAAA,kBAAkB,EAAEA;AAFjB,GAAP;AAIH;;AAED,SAASmB,gBAAT,CAA0BC,KAA1B,EAAiC;AAC7B,MACUT,IADV,GAKIS,KALJ,CACIT,IADJ;AAAA,MAEeE,SAFf,GAKIO,KALJ,CAEIP,SAFJ;AAAA,MAGWE,KAHX,GAKIK,KALJ,CAGIL,KAHJ;AAAA,MAIYE,MAJZ,GAKIG,KALJ,CAIIH,MAJJ;AAMA,MAAID,WAAW,GAAGxB,eAAe,CAACyB,MAAD,CAAjC;AACA,MAAIL,cAAc,GAAGpB,eAAe,CAACqB,SAAD,CAApC;AACA,MAAIH,SAAS,GAAGlB,eAAe,CAACmB,IAAD,CAA/B;AACA,MAAIU,cAAc,GAAG7B,eAAe,CAACuB,KAAD,CAApC;AACA,SAAO;AACHE,IAAAA,MAAM,EAAED,WADL;AAEHH,IAAAA,SAAS,EAAED,cAFR;AAGHD,IAAAA,IAAI,EAAED,SAAS,GAAGjB,eAAe,CAAC,YAAD,EAAekB,IAAf,CAA3B,GAAkDlB,eAAe,CAAC,aAAD,EAAgBkB,IAAhB,CAHpE;AAIHI,IAAAA,KAAK,EAAEM;AAJJ,GAAP;AAMH;;AACD,OAAO,IAAIC,uBAAuB,GAAG,EAA9B;AACP,SACIC,SAAS,IAAIC,gBADjB,QAEO,SAFP;;AAGA,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAAC,YAAY;AAAA,SAAIA,YAAY,KAAKA,YAAY,CAACC,YAAb,GAA4B,UAAAtB,KAAK;AAAA,WAAIjB,cAAc,CAACD,oBAAoB,CAAC,CAAD,EAAIuC,YAAJ,EAAkBzC,QAAQ,CAAC,EAAD,EAAKoB,KAAL,CAA1B,CAArB,CAAlB;AAAA,GAAjC,GAAkHqB,YAAvH,CAAhB;AAAA,CAA9B;;AACA,WAAaE,kBAAb;AAAA;;AAAA;;AACI,8BAAYvB,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKF,SAAL,GAAiBqB,gBAAgB,EAAjC;AACA,UAAKvB,YAAL,GAAoBuB,gBAAgB,EAApC;AACA,UAAK1B,WAAL,GAAmB0B,gBAAgB,EAAnC;AACA,UAAKtB,QAAL,GAAgBsB,gBAAgB,EAAhC;AACA,UAAKK,KAAL,GAAa;AACT9B,MAAAA,eAAe,EAAE,IADR;AAETC,MAAAA,kBAAkB,EAAE;AAFX,KAAb;AAIA,UAAK8B,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,+BAAzB;AACA,UAAKC,sBAAL,GAA8B,MAAKA,sBAAL,CAA4BD,IAA5B,+BAA9B;AACA,UAAKE,qBAAL,GAA6B,MAAKA,qBAAL,CAA2BF,IAA3B,+BAA7B;AAZe;AAalB;;AAdL;AAAA;AAAA,WAeI,yBAAgB;AACZ,aAAO,CAAC,IAAI1C,aAAJ,CAAkB,KAAKyC,iBAAvB,EAA0C,CAAC,KAAKD,KAAL,CAAW9B,eAAZ,EAA6B,KAAK8B,KAAL,CAAW7B,kBAAxC,CAA1C,CAAD,EAAyG,IAAIX,aAAJ,CAAkB,KAAK2C,sBAAvB,EAA+C,CAAC,KAAK3B,KAAN,EAAa,KAAKwB,KAAL,CAAW9B,eAAxB,EAAyC,KAAK8B,KAAL,CAAW7B,kBAApD,EAAwE,KAAKK,KAAL,CAAW6B,UAAnF,EAA+F,KAAK7B,KAAL,CAAWC,eAA1G,CAA/C,CAAzG,CAAP;AACH;AAjBL;AAAA;AAAA,WAkBI,yBAAgB;AACZ,UAAI6B,eAAJ,EAAqBC,gBAArB;;AACA,gBAAUD,eAAe,GAAG,KAAKE,QAAL,CAAc,CAAd,CAA5B,KAAiD,KAAK,CAAL,KAAWF,eAA5D,GAA8E,KAAK,CAAnF,GAAuFA,eAAe,CAACG,MAAhB,CAAuB,CAAC,KAAKT,KAAL,CAAW9B,eAAZ,EAA6B,KAAK8B,KAAL,CAAW7B,kBAAxC,CAAvB,CAAvF;AACA,gBAAUoC,gBAAgB,GAAG,KAAKC,QAAL,CAAc,CAAd,CAA7B,KAAkD,KAAK,CAAL,KAAWD,gBAA7D,GAAgF,KAAK,CAArF,GAAyFA,gBAAgB,CAACE,MAAjB,CAAwB,CAAC,KAAKjC,KAAN,EAAa,KAAKwB,KAAL,CAAW9B,eAAxB,EAAyC,KAAK8B,KAAL,CAAW7B,kBAApD,EAAwE,KAAKK,KAAL,CAAW6B,UAAnF,EAA+F,KAAK7B,KAAL,CAAWC,eAA1G,CAAxB,CAAzF;AACH;AAtBL;AAAA;AAAA,WAuBI,6BAAoB;AAAA;;AAChB,UAAIiC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACjB,QAAA,MAAI,CAACN,qBAAL;AACH,OAFD;;AAGA1C,MAAAA,eAAe,CAACiD,GAAhB,CAAoBD,QAApB;AACA,aAAO,YAAM;AACThD,QAAAA,eAAe,CAACkD,MAAhB,CAAuBF,QAAvB;AACH,OAFD;AAGH;AA/BL;AAAA;AAAA,WAgCI,kCAAyB;AACrB,UAAIvB,WAAW,GAAG,KAAKb,SAAL,CAAeuC,OAAf,GAAyBlD,eAAe,CAAC,KAAKW,SAAL,CAAeuC,OAAhB,CAAxC,GAAmE,CAArF;;AACA,UAAI1B,WAAW,GAAG,CAAlB,EAAqB;AACjB,aAAKiB,qBAAL;AACH;AACJ;AArCL;AAAA;AAAA,SAsCI,eAAwB;AACpB,kCAuBI,KAAK5B,KAAL,CAAW6B,UAvBf;AAAA,UACeS,SADf,yBACIA,SADJ;AAAA,UAEiBC,WAFjB,yBAEIA,WAFJ;AAAA,UAGuBC,iBAHvB,yBAGIA,iBAHJ;AAAA,UAIsBC,gBAJtB,yBAIIA,gBAJJ;AAAA,UAKcC,QALd,yBAKIA,QALJ;AAAA,UAMsBC,gBANtB,yBAMIA,gBANJ;AAAA,UAOmBC,aAPnB,yBAOIA,aAPJ;AAAA,UAQeC,SARf,yBAQIA,SARJ;AAAA,UASeC,SATf,yBASIA,SATJ;AAAA,UAUeC,SAVf,yBAUIA,SAVJ;AAAA,UAWqBC,eAXrB,yBAWIA,eAXJ;AAAA,UAYcC,QAZd,yBAYIA,QAZJ;AAAA,UAaoBC,cAbpB,yBAaIA,cAbJ;AAAA,UAce1C,SAdf,yBAcIA,SAdJ;AAAA,UAeoB2C,cAfpB,yBAeIA,cAfJ;AAAA,UAgB2BC,qBAhB3B,yBAgBIA,qBAhBJ;AAAA,UAiBgBC,UAjBhB,yBAiBIA,UAjBJ;AAAA,UAkBcC,QAlBd,yBAkBIA,QAlBJ;AAAA,UAmB2BC,qBAnB3B,yBAmBIA,qBAnBJ;AAAA,UAoBmBC,aApBnB,yBAoBIA,aApBJ;AAAA,UAqBgBC,UArBhB,yBAqBIA,UArBJ;AAAA,UAsBaC,OAtBb,yBAsBIA,OAtBJ;AAwBA,aAAO9E,QAAQ,CAAC,EAAD,EAAK,KAAK+E,cAAV,EAA0B;AACrCV,QAAAA,QAAQ,EAAEA,QAD2B;AAErCF,QAAAA,SAAS,EAAEA,SAF0B;AAGrCC,QAAAA,eAAe,EAAEA,eAHoB;AAIrCE,QAAAA,cAAc,EAAEA,cAJqB;AAKrCV,QAAAA,iBAAiB,EAAEA,iBALkB;AAMrCF,QAAAA,SAAS,EAAEA,SAN0B;AAOrCgB,QAAAA,QAAQ,EAAEA,QAP2B;AAQrCZ,QAAAA,QAAQ,EAAEA,QAR2B;AASrCC,QAAAA,gBAAgB,EAAEA,gBATmB;AAUrCJ,QAAAA,WAAW,EAAEA,WAVwB;AAWrCK,QAAAA,aAAa,EAAEA,aAXsB;AAYrCE,QAAAA,SAAS,EAAEA,SAZ0B;AAarCK,QAAAA,cAAc,EAAEA,cAbqB;AAcrCO,QAAAA,OAAO,EAAEA,OAd4B;AAerCjB,QAAAA,gBAAgB,EAAEA,gBAfmB;AAgBrCW,QAAAA,qBAAqB,EAAEA,qBAhBc;AAiBrCI,QAAAA,aAAa,EAAEA,aAjBsB;AAkBrChD,QAAAA,SAAS,EAAEA,SAlB0B;AAmBrC6C,QAAAA,UAAU,EAAEA,UAnByB;AAoBrCE,QAAAA,qBAAqB,EAAEA,qBApBc;AAqBrCE,QAAAA,UAAU,EAAEA,UArByB;AAsBrCZ,QAAAA,SAAS,EAAEA;AAtB0B,OAA1B,CAAf;AAwBH;AAvFL;AAAA;AAAA,WAwFI,iCAAwB;AAAA;;AACpB,UAAIe,oBAAoB,GAAG9C,gBAAgB,CAAC;AACxCF,QAAAA,MAAM,EAAE,KAAKd,SAAL,CAAeuC,OADiB;AAExC7B,QAAAA,SAAS,EAAE,KAAKZ,YAAL,CAAkByC,OAFW;AAGxC/B,QAAAA,IAAI,EAAE,KAAKb,WAAL,CAAiB4C,OAHiB;AAIxC3B,QAAAA,KAAK,EAAE,KAAKb,QAAL,CAAcwC;AAJmB,OAAD,CAA3C;;AAMA,UAAIhD,SAAS,CAAC,KAAKwE,qBAAN,CAAT,KAA0C,KAAKA,qBAAL,CAA2BnE,eAA3B,KAA+C,KAAK8B,KAAL,CAAW9B,eAA1D,IAA6E,KAAKmE,qBAAL,CAA2BlE,kBAA3B,KAAkD,KAAK6B,KAAL,CAAW7B,kBAApL,CAAJ,EAA6M;AACzM;AACH;;AACD,UAAImE,OAAO,GAAG,CAACzE,SAAS,CAAC,KAAK0E,aAAN,CAAxB;;AACA,UAAID,OAAJ,EAAa;AACT,aAAKC,aAAL,GAAqB,EAArB;AACH;;AACD,UAAID,OAAO,IAAI,KAAKtC,KAAL,CAAW7B,kBAA1B,EAA8C;AAC1C,aAAKoE,aAAL,CAAmBvD,SAAnB,GAA+BoD,oBAAoB,CAACpD,SAApD;AACA,aAAKuD,aAAL,CAAmBrD,KAAnB,GAA2BkD,oBAAoB,CAAClD,KAAhD;AACH;;AACD,UAAIoD,OAAO,IAAI,KAAKtC,KAAL,CAAW9B,eAA1B,EAA2C;AACvC,aAAKqE,aAAL,CAAmBzD,IAAnB,GAA0BsD,oBAAoB,CAACtD,IAA/C;AACH;;AACD,WAAKuD,qBAAL,GAA6B1D,wBAAwB,CAACvB,QAAQ,CAAC;AAC3DgC,QAAAA,MAAM,EAAEgD,oBAAoB,CAAChD;AAD8B,OAAD,EAE3D,KAAKmD,aAFsD,CAAT,CAArD;AAGA,WAAKC,QAAL,CAAc,UAAAC,gBAAgB;AAAA,eAAK;AAC/BvE,UAAAA,eAAe,EAAE,MAAI,CAACmE,qBAAL,CAA2BnE;AADb,SAAL;AAAA,OAA9B;AAGA,WAAKsE,QAAL,CAAc,UAAAC,gBAAgB;AAAA,eAAK;AAC/BtE,UAAAA,kBAAkB,EAAE,MAAI,CAACkE,qBAAL,CAA2BlE;AADhB,SAAL;AAAA,OAA9B;AAGH;AAtHL;AAAA;AAAA,SAuHI,eAAqB;AACjB,UAAIuE,WAAW,GAAG,KAAKlE,KAAvB;AAAA,UACImE,SAAS,GAAGxF,6BAA6B,CAACuF,WAAD,EAAcrF,SAAd,CAD7C;;AAEA,aAAOsF,SAAP;AACH;AA3HL;AAAA;AAAA,WA4HI,kBAAS;AACL,UAAInE,KAAK,GAAG,KAAKA,KAAjB;AACA,aAAOV,YAAY,CAAC;AAChBU,QAAAA,KAAK,EAAEpB,QAAQ,CAAC,EAAD,EAAKoB,KAAL,EAAY;AACvBC,UAAAA,eAAe,EAAEmB,WAAW,CAACpB,KAAK,CAACC,eAAP;AADL,SAAZ,CADC;AAIhBP,QAAAA,eAAe,EAAE,KAAK8B,KAAL,CAAW9B,eAJZ;AAKhBC,QAAAA,kBAAkB,EAAE,KAAK6B,KAAL,CAAW7B,kBALf;AAMhBG,QAAAA,SAAS,EAAE,KAAKA,SANA;AAOhBF,QAAAA,YAAY,EAAE,KAAKA,YAPH;AAQhBH,QAAAA,WAAW,EAAE,KAAKA,WARF;AAShBI,QAAAA,QAAQ,EAAE,KAAKA,QATC;AAUhBL,QAAAA,iBAAiB,EAAE,KAAKA,iBAVR;AAWhBoC,QAAAA,qBAAqB,EAAE,KAAKA,qBAXZ;AAYhB+B,QAAAA,cAAc,EAAE,KAAKA;AAZL,OAAD,CAAnB;AAcH;AA5IL;;AAAA;AAAA,EAAwC1E,gBAAxC;AA8IAsC,kBAAkB,CAACD,YAAnB,GAAkCL,uBAAlC","sourcesContent":["/**\r\n * DevExtreme (esm/renovation/ui/pager/resizable_container.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nvar _excluded = [\"contentTemplate\", \"pagerProps\"];\r\nimport {\r\n    createComponentVNode,\r\n    normalizeProps\r\n} from \"inferno\";\r\nimport {\r\n    InfernoEffect,\r\n    InfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport resizeCallbacks from \"../../../core/utils/resize_callbacks\";\r\nimport {\r\n    getElementWidth,\r\n    getElementStyle\r\n} from \"./utils/get_element_width\";\r\nimport {\r\n    isDefined\r\n} from \"../../../core/utils/type\";\r\nexport var viewFunction = _ref => {\r\n    var {\r\n        contentAttributes: contentAttributes,\r\n        infoTextRef: infoTextRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode,\r\n        pageSizesRef: pageSizesRef,\r\n        pagesRef: pagesRef,\r\n        parentRef: parentRef,\r\n        props: {\r\n            contentTemplate: Content\r\n        }\r\n    } = _ref;\r\n    return Content(_extends({\r\n        rootElementRef: parentRef,\r\n        pageSizesRef: pageSizesRef,\r\n        infoTextRef: infoTextRef,\r\n        pagesRef: pagesRef,\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }, contentAttributes))\r\n};\r\nexport function calculateAdaptivityProps(_ref2) {\r\n    var {\r\n        info: infoWidth,\r\n        pageSizes: pageSizesWidth,\r\n        pages: pagesWidth,\r\n        parent: parentWidth\r\n    } = _ref2;\r\n    var minimalWidth = pageSizesWidth + pagesWidth + infoWidth;\r\n    var infoTextVisible = parentWidth - minimalWidth > 0;\r\n    var isLargeDisplayMode = parentWidth - (pageSizesWidth + pagesWidth) > 0;\r\n    return {\r\n        infoTextVisible: infoTextVisible,\r\n        isLargeDisplayMode: isLargeDisplayMode\r\n    }\r\n}\r\n\r\nfunction getElementsWidth(_ref3) {\r\n    var {\r\n        info: info,\r\n        pageSizes: pageSizes,\r\n        pages: pages,\r\n        parent: parent\r\n    } = _ref3;\r\n    var parentWidth = getElementWidth(parent);\r\n    var pageSizesWidth = getElementWidth(pageSizes);\r\n    var infoWidth = getElementWidth(info);\r\n    var pagesHtmlWidth = getElementWidth(pages);\r\n    return {\r\n        parent: parentWidth,\r\n        pageSizes: pageSizesWidth,\r\n        info: infoWidth + getElementStyle(\"marginLeft\", info) + getElementStyle(\"marginRight\", info),\r\n        pages: pagesHtmlWidth\r\n    }\r\n}\r\nexport var ResizableContainerProps = {};\r\nimport {\r\n    createRef as infernoCreateRef\r\n} from \"inferno\";\r\nvar getTemplate = TemplateProp => TemplateProp && (TemplateProp.defaultProps ? props => normalizeProps(createComponentVNode(2, TemplateProp, _extends({}, props))) : TemplateProp);\r\nexport class ResizableContainer extends InfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.parentRef = infernoCreateRef();\r\n        this.pageSizesRef = infernoCreateRef();\r\n        this.infoTextRef = infernoCreateRef();\r\n        this.pagesRef = infernoCreateRef();\r\n        this.state = {\r\n            infoTextVisible: true,\r\n            isLargeDisplayMode: true\r\n        };\r\n        this.subscribeToResize = this.subscribeToResize.bind(this);\r\n        this.effectUpdateChildProps = this.effectUpdateChildProps.bind(this);\r\n        this.updateAdaptivityProps = this.updateAdaptivityProps.bind(this)\r\n    }\r\n    createEffects() {\r\n        return [new InfernoEffect(this.subscribeToResize, [this.state.infoTextVisible, this.state.isLargeDisplayMode]), new InfernoEffect(this.effectUpdateChildProps, [this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])]\r\n    }\r\n    updateEffects() {\r\n        var _this$_effects$, _this$_effects$2;\r\n        null === (_this$_effects$ = this._effects[0]) || void 0 === _this$_effects$ ? void 0 : _this$_effects$.update([this.state.infoTextVisible, this.state.isLargeDisplayMode]);\r\n        null === (_this$_effects$2 = this._effects[1]) || void 0 === _this$_effects$2 ? void 0 : _this$_effects$2.update([this.props, this.state.infoTextVisible, this.state.isLargeDisplayMode, this.props.pagerProps, this.props.contentTemplate])\r\n    }\r\n    subscribeToResize() {\r\n        var callback = () => {\r\n            this.updateAdaptivityProps()\r\n        };\r\n        resizeCallbacks.add(callback);\r\n        return () => {\r\n            resizeCallbacks.remove(callback)\r\n        }\r\n    }\r\n    effectUpdateChildProps() {\r\n        var parentWidth = this.parentRef.current ? getElementWidth(this.parentRef.current) : 0;\r\n        if (parentWidth > 0) {\r\n            this.updateAdaptivityProps()\r\n        }\r\n    }\r\n    get contentAttributes() {\r\n        var {\r\n            className: className,\r\n            displayMode: displayMode,\r\n            gridCompatibility: gridCompatibility,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            maxPagesCount: maxPagesCount,\r\n            onKeyDown: onKeyDown,\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSize: pageSize,\r\n            pageSizeChange: pageSizeChange,\r\n            pageSizes: pageSizes,\r\n            pagesCountText: pagesCountText,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            rtlEnabled: rtlEnabled,\r\n            showInfo: showInfo,\r\n            showNavigationButtons: showNavigationButtons,\r\n            showPageSizes: showPageSizes,\r\n            totalCount: totalCount,\r\n            visible: visible\r\n        } = this.props.pagerProps;\r\n        return _extends({}, this.restAttributes, {\r\n            pageSize: pageSize,\r\n            pageIndex: pageIndex,\r\n            pageIndexChange: pageIndexChange,\r\n            pageSizeChange: pageSizeChange,\r\n            gridCompatibility: gridCompatibility,\r\n            className: className,\r\n            showInfo: showInfo,\r\n            infoText: infoText,\r\n            lightModeEnabled: lightModeEnabled,\r\n            displayMode: displayMode,\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount,\r\n            pagesCountText: pagesCountText,\r\n            visible: visible,\r\n            hasKnownLastPage: hasKnownLastPage,\r\n            pagesNavigatorVisible: pagesNavigatorVisible,\r\n            showPageSizes: showPageSizes,\r\n            pageSizes: pageSizes,\r\n            rtlEnabled: rtlEnabled,\r\n            showNavigationButtons: showNavigationButtons,\r\n            totalCount: totalCount,\r\n            onKeyDown: onKeyDown\r\n        })\r\n    }\r\n    updateAdaptivityProps() {\r\n        var currentElementsWidth = getElementsWidth({\r\n            parent: this.parentRef.current,\r\n            pageSizes: this.pageSizesRef.current,\r\n            info: this.infoTextRef.current,\r\n            pages: this.pagesRef.current\r\n        });\r\n        if (isDefined(this.actualAdaptivityProps) && (this.actualAdaptivityProps.infoTextVisible !== this.state.infoTextVisible || this.actualAdaptivityProps.isLargeDisplayMode !== this.state.isLargeDisplayMode)) {\r\n            return\r\n        }\r\n        var isEmpty = !isDefined(this.elementsWidth);\r\n        if (isEmpty) {\r\n            this.elementsWidth = {}\r\n        }\r\n        if (isEmpty || this.state.isLargeDisplayMode) {\r\n            this.elementsWidth.pageSizes = currentElementsWidth.pageSizes;\r\n            this.elementsWidth.pages = currentElementsWidth.pages\r\n        }\r\n        if (isEmpty || this.state.infoTextVisible) {\r\n            this.elementsWidth.info = currentElementsWidth.info\r\n        }\r\n        this.actualAdaptivityProps = calculateAdaptivityProps(_extends({\r\n            parent: currentElementsWidth.parent\r\n        }, this.elementsWidth));\r\n        this.setState(__state_argument => ({\r\n            infoTextVisible: this.actualAdaptivityProps.infoTextVisible\r\n        }));\r\n        this.setState(__state_argument => ({\r\n            isLargeDisplayMode: this.actualAdaptivityProps.isLargeDisplayMode\r\n        }))\r\n    }\r\n    get restAttributes() {\r\n        var _this$props = this.props,\r\n            restProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\r\n        return restProps\r\n    }\r\n    render() {\r\n        var props = this.props;\r\n        return viewFunction({\r\n            props: _extends({}, props, {\r\n                contentTemplate: getTemplate(props.contentTemplate)\r\n            }),\r\n            infoTextVisible: this.state.infoTextVisible,\r\n            isLargeDisplayMode: this.state.isLargeDisplayMode,\r\n            parentRef: this.parentRef,\r\n            pageSizesRef: this.pageSizesRef,\r\n            infoTextRef: this.infoTextRef,\r\n            pagesRef: this.pagesRef,\r\n            contentAttributes: this.contentAttributes,\r\n            updateAdaptivityProps: this.updateAdaptivityProps,\r\n            restAttributes: this.restAttributes\r\n        })\r\n    }\r\n}\r\nResizableContainer.defaultProps = ResizableContainerProps;\r\n"]},"metadata":{},"sourceType":"module"}