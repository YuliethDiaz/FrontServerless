{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport modules from \"./ui.grid_core.modules\";\nimport filterUtils from \"../shared/filtering\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport { headerFilterMixin, HeaderFilterView, updateHeaderFilterItemSelectionState, allowHeaderFiltering } from \"./ui.grid_core.header_filter_core\";\nimport messageLocalization from \"../../localization/message\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { each } from \"../../core/utils/iterator\";\nimport { isDefined, isObject, isFunction } from \"../../core/utils/type\";\nimport { getDefaultAlignment } from \"../../core/utils/position\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeDataSourceOptions } from \"../../data/data_source/utils\";\nimport dateLocalization from \"../../localization/date\";\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport { restoreFocus } from \"../shared/accessibility\";\nimport dataQuery from \"../../data/query\";\nimport storeHelper from \"../../data/store_helper\";\nvar DATE_INTERVAL_FORMATS = {\n  month: function (value) {\n    return dateLocalization.getMonthNames()[value - 1];\n  },\n  quarter: function (value) {\n    return dateLocalization.format(new Date(2e3, 3 * value - 1), \"quarter\");\n  }\n};\n\nfunction ungroupUTCDates(items, dateParts, dates) {\n  dateParts = dateParts || [];\n  dates = dates || [];\n  items.forEach(item => {\n    if (isDefined(item.key)) {\n      var isMonthPart = 1 === dateParts.length;\n      dateParts.push(isMonthPart ? item.key - 1 : item.key);\n\n      if (item.items) {\n        ungroupUTCDates(item.items, dateParts, dates);\n      } else {\n        var date = new Date(Date.UTC.apply(Date, dateParts));\n        dates.push(date);\n      }\n\n      dateParts.pop();\n    } else {\n      dates.push(null);\n    }\n  });\n  return dates;\n}\n\nfunction convertDataFromUTCToLocal(data, column) {\n  var dates = ungroupUTCDates(data);\n  var query = dataQuery(dates);\n  var group = gridCoreUtils.getHeaderFilterGroupParameters(_extends({}, column, {\n    calculateCellValue: date => date\n  }));\n  return storeHelper.queryByOptions(query, {\n    group: group\n  }).toArray();\n}\n\nfunction isUTCFormat(format) {\n  return \"Z\" === (null === format || void 0 === format ? void 0 : format.slice(-1)) || \"'Z'\" === (null === format || void 0 === format ? void 0 : format.slice(-3));\n}\n\nvar HeaderFilterController = modules.ViewController.inherit({\n  init: function () {\n    this._columnsController = this.getController(\"columns\");\n    this._dataController = this.getController(\"data\");\n    this._headerFilterView = this.getView(\"headerFilterView\");\n  },\n  _updateSelectedState: function (items, column) {\n    var i = items.length;\n    var isExclude = \"exclude\" === column.filterType;\n\n    while (i--) {\n      var item = items[i];\n\n      if (\"items\" in items[i]) {\n        this._updateSelectedState(items[i].items, column);\n      }\n\n      updateHeaderFilterItemSelectionState(item, gridCoreUtils.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude);\n    }\n  },\n  _normalizeGroupItem: function (item, currentLevel, options) {\n    var value;\n    var displayValue;\n    var path = options.path;\n    var valueSelector = options.valueSelector;\n    var displaySelector = options.displaySelector;\n    var column = options.column;\n\n    if (valueSelector && displaySelector) {\n      value = valueSelector(item);\n      displayValue = displaySelector(item);\n    } else {\n      value = item.key;\n      displayValue = value;\n    }\n\n    if (!isObject(item)) {\n      item = {};\n    } else {\n      item = extend({}, item);\n    }\n\n    path.push(value);\n\n    if (1 === path.length) {\n      item.value = path[0];\n    } else {\n      item.value = path.join(\"/\");\n    }\n\n    item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\n    return item;\n  },\n  getHeaderItemText: function (displayValue, column, currentLevel, headerFilterOptions) {\n    var text = gridCoreUtils.formatValue(displayValue, function (value, column, currentLevel) {\n      var groupInterval = filterUtils.getGroupInterval(column);\n      var result = gridCoreUtils.getFormatOptionsByColumn(column, \"headerFilter\");\n\n      if (groupInterval) {\n        result.groupInterval = groupInterval[currentLevel];\n\n        if (gridCoreUtils.isDateType(column.dataType)) {\n          result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]];\n        } else if (\"number\" === column.dataType) {\n          result.getDisplayFormat = function () {\n            var formatOptions = {\n              format: column.format,\n              target: \"headerFilter\"\n            };\n            var firstValueText = gridCoreUtils.formatValue(value, formatOptions);\n            var secondValue = value + groupInterval[currentLevel];\n            var secondValueText = gridCoreUtils.formatValue(secondValue, formatOptions);\n            return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\";\n          };\n        }\n      }\n\n      return result;\n    }(displayValue, column, currentLevel));\n\n    if (!text) {\n      text = headerFilterOptions.texts.emptyValue;\n    }\n\n    return text;\n  },\n  _processGroupItems: function (groupItems, currentLevel, path, options) {\n    var displaySelector;\n    var valueSelector;\n    var column = options.column;\n    var lookup = column.lookup;\n    var level = options.level;\n    path = path || [];\n    currentLevel = currentLevel || 0;\n\n    if (lookup) {\n      displaySelector = compileGetter(lookup.displayExpr);\n      valueSelector = compileGetter(lookup.valueExpr);\n    }\n\n    for (var i = 0; i < groupItems.length; i++) {\n      groupItems[i] = this._normalizeGroupItem(groupItems[i], currentLevel, {\n        column: options.column,\n        headerFilterOptions: options.headerFilterOptions,\n        displaySelector: displaySelector,\n        valueSelector: valueSelector,\n        path: path\n      });\n\n      if (\"items\" in groupItems[i]) {\n        if (currentLevel === level || !isDefined(groupItems[i].value)) {\n          delete groupItems[i].items;\n        } else {\n          this._processGroupItems(groupItems[i].items, currentLevel + 1, path, options);\n        }\n      }\n\n      path.pop();\n    }\n  },\n  getDataSource: function (column) {\n    var _column$headerFilter;\n\n    var that = this;\n\n    var dataSource = that._dataController.dataSource();\n\n    var remoteGrouping = null === dataSource || void 0 === dataSource ? void 0 : dataSource.remoteOperations().grouping;\n    var group = gridCoreUtils.getHeaderFilterGroupParameters(column, remoteGrouping);\n    var headerFilterDataSource = null === (_column$headerFilter = column.headerFilter) || void 0 === _column$headerFilter ? void 0 : _column$headerFilter.dataSource;\n    var headerFilterOptions = that.option(\"headerFilter\");\n    var isLookup = false;\n    var options = {\n      component: that.component\n    };\n\n    if (!dataSource) {\n      return;\n    }\n\n    if (isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\n      options.dataSource = normalizeDataSourceOptions(headerFilterDataSource);\n    } else if (column.lookup) {\n      isLookup = true;\n      var lookupDataSourceOptions;\n\n      if (column.lookup.items) {\n        lookupDataSourceOptions = column.lookup.items;\n      } else {\n        lookupDataSourceOptions = column.lookup.dataSource;\n\n        if (isFunction(lookupDataSourceOptions) && !variableWrapper.isWrapped(lookupDataSourceOptions)) {\n          lookupDataSourceOptions = lookupDataSourceOptions({});\n        }\n      }\n\n      options.dataSource = normalizeDataSourceOptions(lookupDataSourceOptions);\n    } else {\n      var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\n      that._currentColumn = column;\n\n      var filter = that._dataController.getCombinedFilter();\n\n      that._currentColumn = null;\n      options.dataSource = {\n        filter: filter,\n        group: group,\n        useDefaultSearch: true,\n        load: function (options) {\n          var d = new Deferred();\n          options.dataField = column.dataField || column.name;\n          dataSource.load(options).done(function (data) {\n            var convertUTCDates = remoteGrouping && isUTCFormat(column.serializationFormat) && cutoffLevel > 3;\n\n            if (convertUTCDates) {\n              data = convertDataFromUTCToLocal(data, column);\n            }\n\n            that._processGroupItems(data, null, null, {\n              level: cutoffLevel,\n              column: column,\n              headerFilterOptions: headerFilterOptions\n            });\n\n            d.resolve(data);\n          }).fail(d.reject);\n          return d;\n        }\n      };\n    }\n\n    if (isFunction(headerFilterDataSource)) {\n      headerFilterDataSource.call(column, options);\n    }\n\n    var origPostProcess = options.dataSource.postProcess;\n\n    options.dataSource.postProcess = function (data) {\n      var items = data;\n\n      if (isLookup) {\n        if (0 === this.pageIndex() && !this.searchValue()) {\n          items = items.slice(0);\n          items.unshift(null);\n        }\n\n        that._processGroupItems(items, null, null, {\n          level: 0,\n          column: column,\n          headerFilterOptions: headerFilterOptions\n        });\n      }\n\n      items = origPostProcess && origPostProcess.call(this, items) || items;\n\n      that._updateSelectedState(items, column);\n\n      return items;\n    };\n\n    return options.dataSource;\n  },\n  getCurrentColumn: function () {\n    return this._currentColumn;\n  },\n  showHeaderFilterMenu: function (columnIndex, isGroupPanel) {\n    var columnsController = this._columnsController;\n    var column = extend(true, {}, this._columnsController.getColumns()[columnIndex]);\n\n    if (column) {\n      var visibleIndex = columnsController.getVisibleIndex(columnIndex);\n      var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\n      var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\n      this.showHeaderFilterMenuBase({\n        columnElement: $columnElement,\n        column: column,\n        applyFilter: true,\n        apply: function () {\n          columnsController.columnOption(columnIndex, {\n            filterValues: this.filterValues,\n            filterType: this.filterType\n          });\n        }\n      });\n    }\n  },\n  showHeaderFilterMenuBase: function (options) {\n    var that = this;\n    var column = options.column;\n\n    if (column) {\n      var groupInterval = filterUtils.getGroupInterval(column);\n\n      var dataSource = that._dataController.dataSource();\n\n      var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\n      extend(options, column, {\n        type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\n        remoteFiltering: remoteFiltering,\n        onShowing: function (e) {\n          var dxResizableInstance = e.component.$overlayContent().dxResizable(\"instance\");\n          dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", function (e) {\n            var columnsController = that.getController(\"columns\");\n            var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\n            headerFilterByColumn = headerFilterByColumn || {};\n            headerFilterByColumn.width = e.width;\n            headerFilterByColumn.height = e.height;\n            columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true);\n          });\n        },\n        onHidden: () => restoreFocus(this)\n      });\n      options.dataSource = that.getDataSource(options);\n\n      if (options.isFilterBuilder) {\n        options.dataSource.filter = null;\n        options.alignment = \"right\";\n      }\n\n      that._headerFilterView.showHeaderFilterMenu(options.columnElement, options);\n    }\n  },\n  hideHeaderFilterMenu: function () {\n    this._headerFilterView.hideHeaderFilterMenu();\n  }\n});\nvar ColumnHeadersViewHeaderFilterExtender = extend({}, headerFilterMixin, {\n  _renderCellContent: function ($cell, options) {\n    var $headerFilterIndicator;\n    var column = options.column;\n\n    if (!column.command && allowHeaderFiltering(column) && this.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\n      $headerFilterIndicator = this._applyColumnState({\n        name: \"headerFilter\",\n        rootElement: $cell,\n        column: column,\n        showColumnLines: this.option(\"showColumnLines\")\n      });\n      $headerFilterIndicator && this._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\");\n    }\n\n    this.callBase($cell, options);\n  },\n  _subscribeToIndicatorEvent: function ($indicator, column, indicatorName) {\n    var that = this;\n\n    if (\"headerFilter\" === indicatorName) {\n      eventsEngine.on($indicator, clickEventName, that.createAction(function (e) {\n        e.event.stopPropagation();\n        that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false);\n      }));\n    }\n  },\n  _updateIndicator: function ($cell, column, indicatorName) {\n    var $indicator = this.callBase($cell, column, indicatorName);\n    $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName);\n  },\n  _updateHeaderFilterIndicators: function () {\n    if (this.option(\"headerFilter.visible\")) {\n      this._updateIndicators(\"headerFilter\");\n    }\n  },\n  _needUpdateFilterIndicators: function () {\n    return true;\n  },\n  _columnOptionChanged: function (e) {\n    var optionNames = e.optionNames;\n\n    if (gridCoreUtils.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\n      if (this._needUpdateFilterIndicators()) {\n        this._updateHeaderFilterIndicators();\n      }\n\n      return;\n    }\n\n    this.callBase(e);\n  }\n});\nvar HeaderPanelHeaderFilterExtender = extend({}, headerFilterMixin, {\n  _createGroupPanelItem: function ($rootElement, groupColumn) {\n    var that = this;\n    var $item = that.callBase.apply(that, arguments);\n    var $headerFilterIndicator;\n\n    if (!groupColumn.command && allowHeaderFiltering(groupColumn) && that.option(\"headerFilter.visible\")) {\n      $headerFilterIndicator = that._applyColumnState({\n        name: \"headerFilter\",\n        rootElement: $item,\n        column: {\n          alignment: getDefaultAlignment(that.option(\"rtlEnabled\")),\n          filterValues: groupColumn.filterValues,\n          allowHeaderFiltering: true\n        },\n        showColumnLines: true\n      });\n      $headerFilterIndicator && eventsEngine.on($headerFilterIndicator, clickEventName, that.createAction(function (e) {\n        var event = e.event;\n        event.stopPropagation();\n        that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true);\n      }));\n    }\n\n    return $item;\n  }\n});\nexport function invertFilterExpression(filter) {\n  return [\"!\", filter];\n}\nvar DataControllerFilterRowExtender = {\n  skipCalculateColumnFilters: function () {\n    return false;\n  },\n  _calculateAdditionalFilter: function () {\n    if (this.skipCalculateColumnFilters()) {\n      return this.callBase();\n    }\n\n    var filters = [this.callBase()];\n\n    var columns = this._columnsController.getVisibleColumns(null, true);\n\n    var headerFilterController = this.getController(\"headerFilter\");\n    var currentColumn = headerFilterController.getCurrentColumn();\n    each(columns, function (_, column) {\n      var filter;\n\n      if (currentColumn && currentColumn.index === column.index) {\n        return;\n      }\n\n      if (allowHeaderFiltering(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\n        var filterValues = [];\n        each(column.filterValues, function (_, filterValue) {\n          if (Array.isArray(filterValue)) {\n            filter = filterValue;\n          } else {\n            if (column.deserializeValue && !gridCoreUtils.isDateType(column.dataType) && \"number\" !== column.dataType) {\n              filterValue = column.deserializeValue(filterValue);\n            }\n\n            filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\");\n          }\n\n          if (filter) {\n            filter.columnIndex = column.index;\n          }\n\n          filterValues.push(filter);\n        });\n        filterValues = gridCoreUtils.combineFilters(filterValues, \"or\");\n        filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues);\n      }\n    });\n    return gridCoreUtils.combineFilters(filters);\n  }\n};\nexport var headerFilterModule = {\n  defaultOptions: function () {\n    return {\n      headerFilter: {\n        visible: false,\n        width: 252,\n        height: 325,\n        allowSearch: false,\n        searchTimeout: 500,\n        texts: {\n          emptyValue: messageLocalization.format(\"dxDataGrid-headerFilterEmptyValue\"),\n          ok: messageLocalization.format(\"dxDataGrid-headerFilterOK\"),\n          cancel: messageLocalization.format(\"dxDataGrid-headerFilterCancel\")\n        }\n      }\n    };\n  },\n  controllers: {\n    headerFilter: HeaderFilterController\n  },\n  views: {\n    headerFilterView: HeaderFilterView\n  },\n  extenders: {\n    controllers: {\n      data: DataControllerFilterRowExtender\n    },\n    views: {\n      columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\n      headerPanel: HeaderPanelHeaderFilterExtender\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Valen/OneDrive/Documentos/Proyecto AWS/FrontServerless/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.header_filter.js"],"names":["_extends","eventsEngine","modules","filterUtils","gridCoreUtils","headerFilterMixin","HeaderFilterView","updateHeaderFilterItemSelectionState","allowHeaderFiltering","messageLocalization","name","clickEventName","compileGetter","each","isDefined","isObject","isFunction","getDefaultAlignment","extend","normalizeDataSourceOptions","dateLocalization","variableWrapper","Deferred","restoreFocus","dataQuery","storeHelper","DATE_INTERVAL_FORMATS","month","value","getMonthNames","quarter","format","Date","ungroupUTCDates","items","dateParts","dates","forEach","item","key","isMonthPart","length","push","date","UTC","apply","pop","convertDataFromUTCToLocal","data","column","query","group","getHeaderFilterGroupParameters","calculateCellValue","queryByOptions","toArray","isUTCFormat","slice","HeaderFilterController","ViewController","inherit","init","_columnsController","getController","_dataController","_headerFilterView","getView","_updateSelectedState","i","isExclude","filterType","getIndexByKey","filterValues","_normalizeGroupItem","currentLevel","options","displayValue","path","valueSelector","displaySelector","join","text","getHeaderItemText","headerFilterOptions","formatValue","groupInterval","getGroupInterval","result","getFormatOptionsByColumn","isDateType","dataType","getDisplayFormat","formatOptions","target","firstValueText","secondValue","secondValueText","texts","emptyValue","_processGroupItems","groupItems","lookup","level","displayExpr","valueExpr","getDataSource","_column$headerFilter","that","dataSource","remoteGrouping","remoteOperations","grouping","headerFilterDataSource","headerFilter","option","isLookup","component","lookupDataSourceOptions","isWrapped","cutoffLevel","Array","isArray","_currentColumn","filter","getCombinedFilter","useDefaultSearch","load","d","dataField","done","convertUTCDates","serializationFormat","resolve","fail","reject","call","origPostProcess","postProcess","pageIndex","searchValue","unshift","getCurrentColumn","showHeaderFilterMenu","columnIndex","isGroupPanel","columnsController","getColumns","visibleIndex","getVisibleIndex","view","$columnElement","getColumnElements","eq","groupIndex","showHeaderFilterMenuBase","columnElement","applyFilter","columnOption","remoteFiltering","filtering","type","onShowing","e","dxResizableInstance","$overlayContent","dxResizable","headerFilterByColumn","width","height","onHidden","isFilterBuilder","alignment","hideHeaderFilterMenu","ColumnHeadersViewHeaderFilterExtender","_renderCellContent","$cell","$headerFilterIndicator","command","rowType","_applyColumnState","rootElement","showColumnLines","_subscribeToIndicatorEvent","callBase","$indicator","indicatorName","on","createAction","event","stopPropagation","index","_updateIndicator","_updateHeaderFilterIndicators","_updateIndicators","_needUpdateFilterIndicators","_columnOptionChanged","optionNames","checkChanges","HeaderPanelHeaderFilterExtender","_createGroupPanelItem","$rootElement","groupColumn","$item","arguments","invertFilterExpression","DataControllerFilterRowExtender","skipCalculateColumnFilters","_calculateAdditionalFilter","filters","columns","getVisibleColumns","headerFilterController","currentColumn","_","calculateFilterExpression","filterValue","deserializeValue","createFilterExpression","combineFilters","headerFilterModule","defaultOptions","visible","allowSearch","searchTimeout","ok","cancel","controllers","views","headerFilterView","extenders","columnHeadersView","headerPanel"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.header_filter.js)\r\n * Version: 21.2.5\r\n * Build date: Mon Jan 17 2022\r\n *\r\n * Copyright (c) 2012 - 2022 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport filterUtils from \"../shared/filtering\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport {\r\n    headerFilterMixin,\r\n    HeaderFilterView,\r\n    updateHeaderFilterItemSelectionState,\r\n    allowHeaderFiltering\r\n} from \"./ui.grid_core.header_filter_core\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isFunction\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeDataSourceOptions\r\n} from \"../../data/data_source/utils\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    restoreFocus\r\n} from \"../shared/accessibility\";\r\nimport dataQuery from \"../../data/query\";\r\nimport storeHelper from \"../../data/store_helper\";\r\nvar DATE_INTERVAL_FORMATS = {\r\n    month: function(value) {\r\n        return dateLocalization.getMonthNames()[value - 1]\r\n    },\r\n    quarter: function(value) {\r\n        return dateLocalization.format(new Date(2e3, 3 * value - 1), \"quarter\")\r\n    }\r\n};\r\n\r\nfunction ungroupUTCDates(items, dateParts, dates) {\r\n    dateParts = dateParts || [];\r\n    dates = dates || [];\r\n    items.forEach(item => {\r\n        if (isDefined(item.key)) {\r\n            var isMonthPart = 1 === dateParts.length;\r\n            dateParts.push(isMonthPart ? item.key - 1 : item.key);\r\n            if (item.items) {\r\n                ungroupUTCDates(item.items, dateParts, dates)\r\n            } else {\r\n                var date = new Date(Date.UTC.apply(Date, dateParts));\r\n                dates.push(date)\r\n            }\r\n            dateParts.pop()\r\n        } else {\r\n            dates.push(null)\r\n        }\r\n    });\r\n    return dates\r\n}\r\n\r\nfunction convertDataFromUTCToLocal(data, column) {\r\n    var dates = ungroupUTCDates(data);\r\n    var query = dataQuery(dates);\r\n    var group = gridCoreUtils.getHeaderFilterGroupParameters(_extends({}, column, {\r\n        calculateCellValue: date => date\r\n    }));\r\n    return storeHelper.queryByOptions(query, {\r\n        group: group\r\n    }).toArray()\r\n}\r\n\r\nfunction isUTCFormat(format) {\r\n    return \"Z\" === (null === format || void 0 === format ? void 0 : format.slice(-1)) || \"'Z'\" === (null === format || void 0 === format ? void 0 : format.slice(-3))\r\n}\r\nvar HeaderFilterController = modules.ViewController.inherit({\r\n    init: function() {\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._dataController = this.getController(\"data\");\r\n        this._headerFilterView = this.getView(\"headerFilterView\")\r\n    },\r\n    _updateSelectedState: function(items, column) {\r\n        var i = items.length;\r\n        var isExclude = \"exclude\" === column.filterType;\r\n        while (i--) {\r\n            var item = items[i];\r\n            if (\"items\" in items[i]) {\r\n                this._updateSelectedState(items[i].items, column)\r\n            }\r\n            updateHeaderFilterItemSelectionState(item, gridCoreUtils.getIndexByKey(items[i].value, column.filterValues, null) > -1, isExclude)\r\n        }\r\n    },\r\n    _normalizeGroupItem: function(item, currentLevel, options) {\r\n        var value;\r\n        var displayValue;\r\n        var path = options.path;\r\n        var valueSelector = options.valueSelector;\r\n        var displaySelector = options.displaySelector;\r\n        var column = options.column;\r\n        if (valueSelector && displaySelector) {\r\n            value = valueSelector(item);\r\n            displayValue = displaySelector(item)\r\n        } else {\r\n            value = item.key;\r\n            displayValue = value\r\n        }\r\n        if (!isObject(item)) {\r\n            item = {}\r\n        } else {\r\n            item = extend({}, item)\r\n        }\r\n        path.push(value);\r\n        if (1 === path.length) {\r\n            item.value = path[0]\r\n        } else {\r\n            item.value = path.join(\"/\")\r\n        }\r\n        item.text = this.getHeaderItemText(displayValue, column, currentLevel, options.headerFilterOptions);\r\n        return item\r\n    },\r\n    getHeaderItemText: function(displayValue, column, currentLevel, headerFilterOptions) {\r\n        var text = gridCoreUtils.formatValue(displayValue, function(value, column, currentLevel) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var result = gridCoreUtils.getFormatOptionsByColumn(column, \"headerFilter\");\r\n            if (groupInterval) {\r\n                result.groupInterval = groupInterval[currentLevel];\r\n                if (gridCoreUtils.isDateType(column.dataType)) {\r\n                    result.format = DATE_INTERVAL_FORMATS[groupInterval[currentLevel]]\r\n                } else if (\"number\" === column.dataType) {\r\n                    result.getDisplayFormat = function() {\r\n                        var formatOptions = {\r\n                            format: column.format,\r\n                            target: \"headerFilter\"\r\n                        };\r\n                        var firstValueText = gridCoreUtils.formatValue(value, formatOptions);\r\n                        var secondValue = value + groupInterval[currentLevel];\r\n                        var secondValueText = gridCoreUtils.formatValue(secondValue, formatOptions);\r\n                        return firstValueText && secondValueText ? firstValueText + \" - \" + secondValueText : \"\"\r\n                    }\r\n                }\r\n            }\r\n            return result\r\n        }(displayValue, column, currentLevel));\r\n        if (!text) {\r\n            text = headerFilterOptions.texts.emptyValue\r\n        }\r\n        return text\r\n    },\r\n    _processGroupItems: function(groupItems, currentLevel, path, options) {\r\n        var displaySelector;\r\n        var valueSelector;\r\n        var column = options.column;\r\n        var lookup = column.lookup;\r\n        var level = options.level;\r\n        path = path || [];\r\n        currentLevel = currentLevel || 0;\r\n        if (lookup) {\r\n            displaySelector = compileGetter(lookup.displayExpr);\r\n            valueSelector = compileGetter(lookup.valueExpr)\r\n        }\r\n        for (var i = 0; i < groupItems.length; i++) {\r\n            groupItems[i] = this._normalizeGroupItem(groupItems[i], currentLevel, {\r\n                column: options.column,\r\n                headerFilterOptions: options.headerFilterOptions,\r\n                displaySelector: displaySelector,\r\n                valueSelector: valueSelector,\r\n                path: path\r\n            });\r\n            if (\"items\" in groupItems[i]) {\r\n                if (currentLevel === level || !isDefined(groupItems[i].value)) {\r\n                    delete groupItems[i].items\r\n                } else {\r\n                    this._processGroupItems(groupItems[i].items, currentLevel + 1, path, options)\r\n                }\r\n            }\r\n            path.pop()\r\n        }\r\n    },\r\n    getDataSource: function(column) {\r\n        var _column$headerFilter;\r\n        var that = this;\r\n        var dataSource = that._dataController.dataSource();\r\n        var remoteGrouping = null === dataSource || void 0 === dataSource ? void 0 : dataSource.remoteOperations().grouping;\r\n        var group = gridCoreUtils.getHeaderFilterGroupParameters(column, remoteGrouping);\r\n        var headerFilterDataSource = null === (_column$headerFilter = column.headerFilter) || void 0 === _column$headerFilter ? void 0 : _column$headerFilter.dataSource;\r\n        var headerFilterOptions = that.option(\"headerFilter\");\r\n        var isLookup = false;\r\n        var options = {\r\n            component: that.component\r\n        };\r\n        if (!dataSource) {\r\n            return\r\n        }\r\n        if (isDefined(headerFilterDataSource) && !isFunction(headerFilterDataSource)) {\r\n            options.dataSource = normalizeDataSourceOptions(headerFilterDataSource)\r\n        } else if (column.lookup) {\r\n            isLookup = true;\r\n            var lookupDataSourceOptions;\r\n            if (column.lookup.items) {\r\n                lookupDataSourceOptions = column.lookup.items\r\n            } else {\r\n                lookupDataSourceOptions = column.lookup.dataSource;\r\n                if (isFunction(lookupDataSourceOptions) && !variableWrapper.isWrapped(lookupDataSourceOptions)) {\r\n                    lookupDataSourceOptions = lookupDataSourceOptions({})\r\n                }\r\n            }\r\n            options.dataSource = normalizeDataSourceOptions(lookupDataSourceOptions)\r\n        } else {\r\n            var cutoffLevel = Array.isArray(group) ? group.length - 1 : 0;\r\n            that._currentColumn = column;\r\n            var filter = that._dataController.getCombinedFilter();\r\n            that._currentColumn = null;\r\n            options.dataSource = {\r\n                filter: filter,\r\n                group: group,\r\n                useDefaultSearch: true,\r\n                load: function(options) {\r\n                    var d = new Deferred;\r\n                    options.dataField = column.dataField || column.name;\r\n                    dataSource.load(options).done((function(data) {\r\n                        var convertUTCDates = remoteGrouping && isUTCFormat(column.serializationFormat) && cutoffLevel > 3;\r\n                        if (convertUTCDates) {\r\n                            data = convertDataFromUTCToLocal(data, column)\r\n                        }\r\n                        that._processGroupItems(data, null, null, {\r\n                            level: cutoffLevel,\r\n                            column: column,\r\n                            headerFilterOptions: headerFilterOptions\r\n                        });\r\n                        d.resolve(data)\r\n                    })).fail(d.reject);\r\n                    return d\r\n                }\r\n            }\r\n        }\r\n        if (isFunction(headerFilterDataSource)) {\r\n            headerFilterDataSource.call(column, options)\r\n        }\r\n        var origPostProcess = options.dataSource.postProcess;\r\n        options.dataSource.postProcess = function(data) {\r\n            var items = data;\r\n            if (isLookup) {\r\n                if (0 === this.pageIndex() && !this.searchValue()) {\r\n                    items = items.slice(0);\r\n                    items.unshift(null)\r\n                }\r\n                that._processGroupItems(items, null, null, {\r\n                    level: 0,\r\n                    column: column,\r\n                    headerFilterOptions: headerFilterOptions\r\n                })\r\n            }\r\n            items = origPostProcess && origPostProcess.call(this, items) || items;\r\n            that._updateSelectedState(items, column);\r\n            return items\r\n        };\r\n        return options.dataSource\r\n    },\r\n    getCurrentColumn: function() {\r\n        return this._currentColumn\r\n    },\r\n    showHeaderFilterMenu: function(columnIndex, isGroupPanel) {\r\n        var columnsController = this._columnsController;\r\n        var column = extend(true, {}, this._columnsController.getColumns()[columnIndex]);\r\n        if (column) {\r\n            var visibleIndex = columnsController.getVisibleIndex(columnIndex);\r\n            var view = isGroupPanel ? this.getView(\"headerPanel\") : this.getView(\"columnHeadersView\");\r\n            var $columnElement = $columnElement || view.getColumnElements().eq(isGroupPanel ? column.groupIndex : visibleIndex);\r\n            this.showHeaderFilterMenuBase({\r\n                columnElement: $columnElement,\r\n                column: column,\r\n                applyFilter: true,\r\n                apply: function() {\r\n                    columnsController.columnOption(columnIndex, {\r\n                        filterValues: this.filterValues,\r\n                        filterType: this.filterType\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    showHeaderFilterMenuBase: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        if (column) {\r\n            var groupInterval = filterUtils.getGroupInterval(column);\r\n            var dataSource = that._dataController.dataSource();\r\n            var remoteFiltering = dataSource && dataSource.remoteOperations().filtering;\r\n            extend(options, column, {\r\n                type: groupInterval && groupInterval.length > 1 ? \"tree\" : \"list\",\r\n                remoteFiltering: remoteFiltering,\r\n                onShowing: function(e) {\r\n                    var dxResizableInstance = e.component.$overlayContent().dxResizable(\"instance\");\r\n                    dxResizableInstance && dxResizableInstance.option(\"onResizeEnd\", (function(e) {\r\n                        var columnsController = that.getController(\"columns\");\r\n                        var headerFilterByColumn = columnsController.columnOption(options.dataField, \"headerFilter\");\r\n                        headerFilterByColumn = headerFilterByColumn || {};\r\n                        headerFilterByColumn.width = e.width;\r\n                        headerFilterByColumn.height = e.height;\r\n                        columnsController.columnOption(options.dataField, \"headerFilter\", headerFilterByColumn, true)\r\n                    }))\r\n                },\r\n                onHidden: () => restoreFocus(this)\r\n            });\r\n            options.dataSource = that.getDataSource(options);\r\n            if (options.isFilterBuilder) {\r\n                options.dataSource.filter = null;\r\n                options.alignment = \"right\"\r\n            }\r\n            that._headerFilterView.showHeaderFilterMenu(options.columnElement, options)\r\n        }\r\n    },\r\n    hideHeaderFilterMenu: function() {\r\n        this._headerFilterView.hideHeaderFilterMenu()\r\n    }\r\n});\r\nvar ColumnHeadersViewHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _renderCellContent: function($cell, options) {\r\n        var $headerFilterIndicator;\r\n        var column = options.column;\r\n        if (!column.command && allowHeaderFiltering(column) && this.option(\"headerFilter.visible\") && \"header\" === options.rowType) {\r\n            $headerFilterIndicator = this._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $cell,\r\n                column: column,\r\n                showColumnLines: this.option(\"showColumnLines\")\r\n            });\r\n            $headerFilterIndicator && this._subscribeToIndicatorEvent($headerFilterIndicator, column, \"headerFilter\")\r\n        }\r\n        this.callBase($cell, options)\r\n    },\r\n    _subscribeToIndicatorEvent: function($indicator, column, indicatorName) {\r\n        var that = this;\r\n        if (\"headerFilter\" === indicatorName) {\r\n            eventsEngine.on($indicator, clickEventName, that.createAction((function(e) {\r\n                e.event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(column.index, false)\r\n            })))\r\n        }\r\n    },\r\n    _updateIndicator: function($cell, column, indicatorName) {\r\n        var $indicator = this.callBase($cell, column, indicatorName);\r\n        $indicator && this._subscribeToIndicatorEvent($indicator, column, indicatorName)\r\n    },\r\n    _updateHeaderFilterIndicators: function() {\r\n        if (this.option(\"headerFilter.visible\")) {\r\n            this._updateIndicators(\"headerFilter\")\r\n        }\r\n    },\r\n    _needUpdateFilterIndicators: function() {\r\n        return true\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"filterValues\", \"filterType\"])) {\r\n            if (this._needUpdateFilterIndicators()) {\r\n                this._updateHeaderFilterIndicators()\r\n            }\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    }\r\n});\r\nvar HeaderPanelHeaderFilterExtender = extend({}, headerFilterMixin, {\r\n    _createGroupPanelItem: function($rootElement, groupColumn) {\r\n        var that = this;\r\n        var $item = that.callBase.apply(that, arguments);\r\n        var $headerFilterIndicator;\r\n        if (!groupColumn.command && allowHeaderFiltering(groupColumn) && that.option(\"headerFilter.visible\")) {\r\n            $headerFilterIndicator = that._applyColumnState({\r\n                name: \"headerFilter\",\r\n                rootElement: $item,\r\n                column: {\r\n                    alignment: getDefaultAlignment(that.option(\"rtlEnabled\")),\r\n                    filterValues: groupColumn.filterValues,\r\n                    allowHeaderFiltering: true\r\n                },\r\n                showColumnLines: true\r\n            });\r\n            $headerFilterIndicator && eventsEngine.on($headerFilterIndicator, clickEventName, that.createAction((function(e) {\r\n                var event = e.event;\r\n                event.stopPropagation();\r\n                that.getController(\"headerFilter\").showHeaderFilterMenu(groupColumn.index, true)\r\n            })))\r\n        }\r\n        return $item\r\n    }\r\n});\r\nexport function invertFilterExpression(filter) {\r\n    return [\"!\", filter]\r\n}\r\nvar DataControllerFilterRowExtender = {\r\n    skipCalculateColumnFilters: function() {\r\n        return false\r\n    },\r\n    _calculateAdditionalFilter: function() {\r\n        if (this.skipCalculateColumnFilters()) {\r\n            return this.callBase()\r\n        }\r\n        var filters = [this.callBase()];\r\n        var columns = this._columnsController.getVisibleColumns(null, true);\r\n        var headerFilterController = this.getController(\"headerFilter\");\r\n        var currentColumn = headerFilterController.getCurrentColumn();\r\n        each(columns, (function(_, column) {\r\n            var filter;\r\n            if (currentColumn && currentColumn.index === column.index) {\r\n                return\r\n            }\r\n            if (allowHeaderFiltering(column) && column.calculateFilterExpression && Array.isArray(column.filterValues) && column.filterValues.length) {\r\n                var filterValues = [];\r\n                each(column.filterValues, (function(_, filterValue) {\r\n                    if (Array.isArray(filterValue)) {\r\n                        filter = filterValue\r\n                    } else {\r\n                        if (column.deserializeValue && !gridCoreUtils.isDateType(column.dataType) && \"number\" !== column.dataType) {\r\n                            filterValue = column.deserializeValue(filterValue)\r\n                        }\r\n                        filter = column.createFilterExpression(filterValue, \"=\", \"headerFilter\")\r\n                    }\r\n                    if (filter) {\r\n                        filter.columnIndex = column.index\r\n                    }\r\n                    filterValues.push(filter)\r\n                }));\r\n                filterValues = gridCoreUtils.combineFilters(filterValues, \"or\");\r\n                filters.push(\"exclude\" === column.filterType ? [\"!\", filterValues] : filterValues)\r\n            }\r\n        }));\r\n        return gridCoreUtils.combineFilters(filters)\r\n    }\r\n};\r\nexport var headerFilterModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            headerFilter: {\r\n                visible: false,\r\n                width: 252,\r\n                height: 325,\r\n                allowSearch: false,\r\n                searchTimeout: 500,\r\n                texts: {\r\n                    emptyValue: messageLocalization.format(\"dxDataGrid-headerFilterEmptyValue\"),\r\n                    ok: messageLocalization.format(\"dxDataGrid-headerFilterOK\"),\r\n                    cancel: messageLocalization.format(\"dxDataGrid-headerFilterCancel\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    controllers: {\r\n        headerFilter: HeaderFilterController\r\n    },\r\n    views: {\r\n        headerFilterView: HeaderFilterView\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: DataControllerFilterRowExtender\r\n        },\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewHeaderFilterExtender,\r\n            headerPanel: HeaderPanelHeaderFilterExtender\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}