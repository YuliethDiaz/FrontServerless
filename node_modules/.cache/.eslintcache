[{"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\index.js":"1","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\App.jsx":"2","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\Hooks\\useToken.jsx":"3","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\PostComponent.jsx":"4","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\GetComponent.jsx":"5","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\Home\\Layout.jsx":"6","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\Client\\ClientTable.jsx":"7"},{"size":342,"mtime":1643126320614,"results":"8","hashOfConfig":"9"},{"size":2106,"mtime":1643851067332,"results":"10","hashOfConfig":"9"},{"size":1510,"mtime":1643126320613,"results":"11","hashOfConfig":"9"},{"size":5598,"mtime":1643149133030,"results":"12","hashOfConfig":"9"},{"size":149,"mtime":1643126320610,"results":"13","hashOfConfig":"9"},{"size":3948,"mtime":1643851076065,"results":"14","hashOfConfig":"9"},{"size":2050,"mtime":1643851294637,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1wl7l50",{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\index.js",[],["34","35"],"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\App.jsx",["36","37","38","39","40","41","42","43","44"],"import React ,{Fragment,useEffect } from 'react'\r\nimport GetComponent from './components/GetComponent';\r\nimport PostComponent from './components/PostComponent';\r\nimport { Route,Routes,Link,Outlet } from 'react-router-dom';\r\nimport useToken from \"./components/Hooks/useToken\";\r\nimport Layout from './components/Home/Layout';\r\nimport ClientTable from './components/Client/ClientTable';\r\n\r\nconst App = () =>{\r\n\r\n\r\n  const urlSearchParams = new URLSearchParams(window.location.hash);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;    \r\n  const LOGIN =process.env.REACT_APP_LOGIN_URL;\r\n  const { Token, setToken } = useToken();\r\n\r\n\r\n  if(Token == null || Token == \"\") {\r\n    if(params[\"#id_token\"] != undefined){\r\n       setToken(params[\"#id_token\"])\r\n    }\r\n }\r\n \r\n    useEffect(() => {\r\n    \r\n      var TokenValue = Token.value ? Token.value : Token;\r\n\r\n     /*  axios.get(API_URL+'/decodetoken', {\r\n      params: {\r\n          encoded:'\"'+TokenValue+'\"'\r\n      }\r\n          }).then(response => { \r\n\r\n            var dataResult = JSON.parse(JSON.stringify(response.data));    \r\n            console.log(dataResult)  \r\n            if(dataResult.errorMessage !== undefined ){\r\n                if(dataResult.errorMessage){\r\n                  swal({  \r\n                      title:\"Error\",\r\n                      text:\"Not authorized\",\r\n                      icon: \"error\"\r\n                    }).then(() => {\r\n                      window.localStorage.clear();\r\n                      window.location.href = LOGIN; \r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }else{\r\n\r\n                //entro\r\n              }\r\n                  \r\n          \r\n          })  */\r\n            \r\n        }, [Token]);\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n     \r\n\r\n\r\n      <Routes>\r\n      <Route path=\"/\" element={<Layout />} >\r\n        <Route path=\"/clients\" element={<ClientTable />} ></Route>\r\n        <Route path=\"/post\" element={<PostComponent />} ></Route>\r\n        </Route>\r\n      </Routes>\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\Hooks\\useToken.jsx",[],"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\PostComponent.jsx",[],"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\GetComponent.jsx",[],"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\Home\\Layout.jsx",["45","46","47","48"],"import React from \"react\";\r\nimport { Link,Outlet } from 'react-router-dom';\r\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\r\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\r\nexport default function Layout(){\r\n\r\n    function classNames(...classes) {\r\n        return classes.filter(Boolean).join(' ')\r\n      }\r\n    \r\n      const navigation = [\r\n        { name: 'Clients', href: '/clients', current: true },\r\n        { name: 'Post', href: '/post', current: false }\r\n      ]\r\n    return(\r\n\r\n        <div>\r\n             <Disclosure as=\"nav\" className=\"bg-gray-800\">\r\n      {({ open }) => (\r\n        <>\r\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n            <div className=\"relative flex items-center justify-between h-16\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                {/* Mobile menu button*/}\r\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                  <span className=\"sr-only\">Open main menu</span>\r\n                  {open ? (\r\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  ) : (\r\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  )}\r\n                </Disclosure.Button>\r\n              </div>\r\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                <div className=\"flex-shrink-0 flex items-center\">\r\n                  <img\r\n                    className=\"block lg:hidden h-8 w-auto\"\r\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\r\n                    alt=\"Workflow\"\r\n                  />\r\n                  <img\r\n                    className=\"hidden lg:block h-8 w-auto\"\r\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\r\n                    alt=\"Workflow\"\r\n                  />\r\n                </div>\r\n                <div className=\"hidden sm:block sm:ml-6\">\r\n                  <div className=\"flex space-x-4\">\r\n                    {navigation.map((item) => (\r\n                      <Link to={item.href}>\r\n                        <a\r\n                        key={item.name}                     \r\n                        className={classNames(\r\n                          item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\r\n                          'px-3 py-2 rounded-md text-sm font-medium'\r\n                        )}\r\n                        aria-current={item.current ? 'page' : undefined}\r\n                      >\r\n                        {item.name}\r\n                      </a>\r\n                      </Link>\r\n                    \r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n           \r\n            </div>\r\n          </div>\r\n\r\n          <Disclosure.Panel className=\"sm:hidden\">\r\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n              {navigation.map((item) => (\r\n                <Disclosure.Button\r\n                  key={item.name}\r\n                  as=\"a\"\r\n                  href={item.href}\r\n                  className={classNames(\r\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\r\n                    'block px-3 py-2 rounded-md text-base font-medium'\r\n                  )}\r\n                  aria-current={item.current ? 'page' : undefined}\r\n                >\r\n                  {item.name}\r\n                </Disclosure.Button>\r\n              ))}\r\n            </div>\r\n          </Disclosure.Panel>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n\r\n\r\n\r\n      <Outlet/>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\Client\\ClientTable.jsx",["49","50","51","52","53","54","55","56","57"],"import React,{useEffect,useState, useCallback, Fragment} from 'react'\r\nimport 'devextreme/dist/css/dx.light.css';\r\nimport { PlusSmIcon } from '@heroicons/react/solid'\r\nimport { Link} from \"react-router-dom\";\r\nimport data from './data.json'\r\nimport DataGrid, {\r\n    Column,\r\n    Grouping,\r\n    GroupPanel,\r\n    Paging,\r\n    SearchPanel,\r\n    HeaderFilter,\r\n    FilterPanel,\r\n    FilterRow,\r\n    Selection, TotalItem,GroupItem\r\n  } from 'devextreme-react/data-grid';\r\n\r\nexport default function ClientTable() {\r\n\r\n    const API_URL = process.env.REACT_APP_SERVER_URL;    \r\n    const [dataClients, setdataClients] = useState([\"\"])  \r\n\r\nreturn (\r\n    <div className=\"p-4\">\r\n\r\n    <div class=\"flex justify-center mb-2 \">\r\n     <h1 className=\" text-lg font-medium text-2xl \">Clients</h1>\r\n               \r\n       <Link to=\"/post\"> \r\n                <button type=\"button\"  \r\n                  className=\"ml-2 p-1 border border-transparent rounded-full shadow-sm text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\">\r\n                  <PlusSmIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\r\n                  </button>\r\n              </Link>           \r\n                     \r\n        </div>\r\n        <hr />\r\n\r\n        <DataGrid\r\n      dataSource={data}\r\n      keyExpr=\"ID\"\r\n      allowColumnReordering={true}\r\n      showBorders={true}\r\n    >\r\n      <GroupPanel visible={true} />\r\n      <SearchPanel visible={true} />\r\n      <Grouping autoExpandAll={true} />\r\n    \r\n      <HeaderFilter visible={true} />\r\n      <FilterPanel visible={true} />\r\n      <FilterRow visible={true} />\r\n      <Paging defaultPageSize={20} />\r\n\r\n      <Column dataField=\"CompanyName\" dataType=\"string\" />\r\n      <Column dataField=\"City\" dataType=\"string\" />\r\n      <Column dataField=\"State\"  dataType=\"string\" />\r\n      <Column dataField=\"Phone\" dataType=\"string\" />\r\n      <Column dataField=\"Fax\" dataType=\"string\" />\r\n\r\n   \r\n    </DataGrid>\r\n\r\n\r\n\r\n    <div>\r\n               \r\n                </div>\r\n \r\n  </div>\r\n)\r\n\r\n}",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":24},{"ruleId":"62","severity":1,"message":"66","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":20},{"ruleId":"62","severity":1,"message":"67","line":4,"column":23,"nodeType":"64","messageId":"65","endLine":4,"endColumn":27},{"ruleId":"62","severity":1,"message":"68","line":4,"column":28,"nodeType":"64","messageId":"65","endLine":4,"endColumn":34},{"ruleId":"62","severity":1,"message":"69","line":14,"column":9,"nodeType":"64","messageId":"65","endLine":14,"endColumn":16},{"ruleId":"62","severity":1,"message":"70","line":15,"column":9,"nodeType":"64","messageId":"65","endLine":15,"endColumn":14},{"ruleId":"71","severity":1,"message":"72","line":19,"column":29,"nodeType":"73","messageId":"74","endLine":19,"endColumn":31},{"ruleId":"71","severity":1,"message":"75","line":20,"column":28,"nodeType":"73","messageId":"74","endLine":20,"endColumn":30},{"ruleId":"62","severity":1,"message":"76","line":27,"column":11,"nodeType":"64","messageId":"65","endLine":27,"endColumn":21},{"ruleId":"62","severity":1,"message":"77","line":3,"column":22,"nodeType":"64","messageId":"65","endLine":3,"endColumn":26},{"ruleId":"62","severity":1,"message":"78","line":3,"column":28,"nodeType":"64","messageId":"65","endLine":3,"endColumn":38},{"ruleId":"62","severity":1,"message":"79","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":51,"column":25,"nodeType":"82","endLine":58,"endColumn":24},{"ruleId":"62","severity":1,"message":"83","line":1,"column":15,"nodeType":"64","messageId":"65","endLine":1,"endColumn":24},{"ruleId":"62","severity":1,"message":"84","line":1,"column":35,"nodeType":"64","messageId":"65","endLine":1,"endColumn":46},{"ruleId":"62","severity":1,"message":"63","line":1,"column":48,"nodeType":"64","messageId":"65","endLine":1,"endColumn":56},{"ruleId":"62","severity":1,"message":"85","line":15,"column":5,"nodeType":"64","messageId":"65","endLine":15,"endColumn":14},{"ruleId":"62","severity":1,"message":"86","line":15,"column":16,"nodeType":"64","messageId":"65","endLine":15,"endColumn":25},{"ruleId":"62","severity":1,"message":"87","line":15,"column":26,"nodeType":"64","messageId":"65","endLine":15,"endColumn":35},{"ruleId":"62","severity":1,"message":"69","line":20,"column":11,"nodeType":"64","messageId":"65","endLine":20,"endColumn":18},{"ruleId":"62","severity":1,"message":"88","line":21,"column":12,"nodeType":"64","messageId":"65","endLine":21,"endColumn":23},{"ruleId":"62","severity":1,"message":"89","line":21,"column":25,"nodeType":"64","messageId":"65","endLine":21,"endColumn":39},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'GetComponent' is defined but never used.","'Link' is defined but never used.","'Outlet' is defined but never used.","'API_URL' is assigned a value but never used.","'LOGIN' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'TokenValue' is assigned a value but never used.","'Menu' is defined but never used.","'Transition' is defined but never used.","'BellIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'Selection' is defined but never used.","'TotalItem' is defined but never used.","'GroupItem' is defined but never used.","'dataClients' is assigned a value but never used.","'setdataClients' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]