[{"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\index.js":"1","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\App.jsx":"2","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\Hooks\\useToken.jsx":"3","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\PostComponent.jsx":"4","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\GetComponent.jsx":"5"},{"size":342,"mtime":1643126320614,"results":"6","hashOfConfig":"7"},{"size":5659,"mtime":1643126320585,"results":"8","hashOfConfig":"7"},{"size":1510,"mtime":1643126320613,"results":"9","hashOfConfig":"7"},{"size":5598,"mtime":1643149133030,"results":"10","hashOfConfig":"7"},{"size":149,"mtime":1643126320610,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1wl7l50",{"filePath":"15","messages":"16","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\index.js",[],["24","25"],"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\App.jsx",["26","27","28","29","30","31","32","33","34"],"import React ,{Fragment,useEffect } from 'react'\r\nimport GetComponent from './components/GetComponent';\r\nimport PostComponent from './components/PostComponent';\r\nimport { Route,Routes,Link,Outlet } from 'react-router-dom';\r\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\r\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\r\nimport useToken from \"./components/Hooks/useToken\";\r\n\r\nconst App = () =>{\r\n\r\n\r\n  const urlSearchParams = new URLSearchParams(window.location.hash);\r\n  const params = Object.fromEntries(urlSearchParams.entries());\r\n  const API_URL = process.env.REACT_APP_SERVER_URL;    \r\n  const LOGIN =process.env.REACT_APP_LOGIN_URL;\r\n  const { Token, setToken } = useToken();\r\n\r\n\r\n  if(Token == null || Token == \"\") {\r\n    if(params[\"#id_token\"] != undefined){\r\n       setToken(params[\"#id_token\"])\r\n    }\r\n }\r\n \r\n    useEffect(() => {\r\n    \r\n      var TokenValue = Token.value ? Token.value : Token;\r\n\r\n     /*  axios.get(API_URL+'/decodetoken', {\r\n      params: {\r\n          encoded:'\"'+TokenValue+'\"'\r\n      }\r\n          }).then(response => { \r\n\r\n            var dataResult = JSON.parse(JSON.stringify(response.data));    \r\n            console.log(dataResult)  \r\n            if(dataResult.errorMessage !== undefined ){\r\n                if(dataResult.errorMessage){\r\n                  swal({  \r\n                      title:\"Error\",\r\n                      text:\"Not authorized\",\r\n                      icon: \"error\"\r\n                    }).then(() => {\r\n                      window.localStorage.clear();\r\n                      window.location.href = LOGIN; \r\n\r\n                    });\r\n\r\n\r\n                }\r\n            }else{\r\n\r\n                //entro\r\n              }\r\n                  \r\n          \r\n          })  */\r\n            \r\n        }, [Token]);\r\n\r\n  function classNames(...classes) {\r\n    return classes.filter(Boolean).join(' ')\r\n  }\r\n\r\n  const navigation = [\r\n    { name: 'Get', href: '/get', current: true },\r\n    { name: 'Post', href: '/post', current: false }\r\n  ]\r\n  return (\r\n    <div>\r\n      \r\n      <Disclosure as=\"nav\" className=\"bg-gray-800\">\r\n      {({ open }) => (\r\n        <>\r\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n            <div className=\"relative flex items-center justify-between h-16\">\r\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                {/* Mobile menu button*/}\r\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\r\n                  <span className=\"sr-only\">Open main menu</span>\r\n                  {open ? (\r\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  ) : (\r\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\r\n                  )}\r\n                </Disclosure.Button>\r\n              </div>\r\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                <div className=\"flex-shrink-0 flex items-center\">\r\n                  <img\r\n                    className=\"block lg:hidden h-8 w-auto\"\r\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\r\n                    alt=\"Workflow\"\r\n                  />\r\n                  <img\r\n                    className=\"hidden lg:block h-8 w-auto\"\r\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\r\n                    alt=\"Workflow\"\r\n                  />\r\n                </div>\r\n                <div className=\"hidden sm:block sm:ml-6\">\r\n                  <div className=\"flex space-x-4\">\r\n                    {navigation.map((item) => (\r\n                      <Link to={item.href}>\r\n                        <a\r\n                        key={item.name}                     \r\n                        className={classNames(\r\n                          item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\r\n                          'px-3 py-2 rounded-md text-sm font-medium'\r\n                        )}\r\n                        aria-current={item.current ? 'page' : undefined}\r\n                      >\r\n                        {item.name}\r\n                      </a>\r\n                      </Link>\r\n                    \r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n           \r\n            </div>\r\n          </div>\r\n\r\n          <Disclosure.Panel className=\"sm:hidden\">\r\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n              {navigation.map((item) => (\r\n                <Disclosure.Button\r\n                  key={item.name}\r\n                  as=\"a\"\r\n                  href={item.href}\r\n                  className={classNames(\r\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\r\n                    'block px-3 py-2 rounded-md text-base font-medium'\r\n                  )}\r\n                  aria-current={item.current ? 'page' : undefined}\r\n                >\r\n                  {item.name}\r\n                </Disclosure.Button>\r\n              ))}\r\n            </div>\r\n          </Disclosure.Panel>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n\r\n\r\n\r\n      <Outlet/>\r\n\r\n\r\n\r\n      <Routes>\r\n        <Route path=\"/get\" element={<GetComponent />} ></Route>\r\n        <Route path=\"/post\" element={<PostComponent />} ></Route>\r\n\r\n      </Routes>\r\n    </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\Hooks\\useToken.jsx",[],"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\PostComponent.jsx",[],"C:\\Users\\Valen\\OneDrive\\Documentos\\Proyecto AWS\\FrontServerless\\src\\components\\GetComponent.jsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":22,"nodeType":"41","messageId":"42","endLine":5,"endColumn":26},{"ruleId":"39","severity":1,"message":"43","line":5,"column":28,"nodeType":"41","messageId":"42","endLine":5,"endColumn":38},{"ruleId":"39","severity":1,"message":"44","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":18},{"ruleId":"39","severity":1,"message":"45","line":14,"column":9,"nodeType":"41","messageId":"42","endLine":14,"endColumn":16},{"ruleId":"39","severity":1,"message":"46","line":15,"column":9,"nodeType":"41","messageId":"42","endLine":15,"endColumn":14},{"ruleId":"47","severity":1,"message":"48","line":19,"column":29,"nodeType":"49","messageId":"50","endLine":19,"endColumn":31},{"ruleId":"47","severity":1,"message":"51","line":20,"column":28,"nodeType":"49","messageId":"50","endLine":20,"endColumn":30},{"ruleId":"39","severity":1,"message":"52","line":27,"column":11,"nodeType":"41","messageId":"42","endLine":27,"endColumn":21},{"ruleId":"53","severity":1,"message":"54","line":105,"column":25,"nodeType":"55","endLine":112,"endColumn":24},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Transition' is defined but never used.","'BellIcon' is defined but never used.","'API_URL' is assigned a value but never used.","'LOGIN' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'TokenValue' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]