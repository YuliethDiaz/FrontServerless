{"version":3,"sources":["components/GetComponent.jsx","components/PostComponent.jsx","components/Hooks/useToken.jsx","App.jsx","index.js"],"names":["GetComponent","PostComponent","useToken","useState","tokenString","localStorage","getItem","LOGIN","process","REACT_APP_LOGIN_URL","userToken","now","Date","includes","JSON","parse","getTime","expiry","swal","title","text","icon","then","window","clear","location","href","getToken","Token","setToken","item","value","setMinutes","getMinutes","setItem","stringify","App","urlSearchParams","URLSearchParams","hash","params","Object","fromEntries","entries","REACT_APP_SERVER_URL","classNames","classes","filter","Boolean","join","undefined","useEffect","navigation","name","current","as","className","open","Button","src","alt","map","to","Panel","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LACe,SAASA,IAEpB,OACI,8BACI,uCCJG,SAASC,IAEpB,OACI,8BACI,wC,yDCsDGC,EAxDC,WACd,IAgCA,EAA0BC,mBAhCT,WACf,IAAMC,EAAcC,aAAaC,QAAQ,SACnCC,EAAQC,8NAAYC,oBACtBC,EAAY,GACVC,EAAM,IAAIC,KAyBhB,OAvBiB,MAAdR,GAAsBA,EAAYS,SAAS,WAC3CH,EAAYI,KAAKC,MAAMX,GAGhBO,EAAIK,UAAYN,EAAUO,QAI9BC,IAAK,CACHC,MAAM,SACNC,KAAK,2BACLC,KAAM,YACLC,MAAK,WACNC,OAAOlB,aAAamB,QACpBD,OAAOE,SAASC,KAAOnB,MASxBG,EAG0BiB,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,MAAO,CACLA,SAjBgB,SAAAnB,GAEhB,IAAMC,EAAM,IAAIC,KAIJkB,EAAO,CACXC,MAAOrB,EACPO,OAAQN,EAAIqB,WAAYrB,EAAIsB,aAAe,MAInD5B,aAAa6B,QAAQ,QAASpB,KAAKqB,UAAUL,IAC7CD,EAASnB,IAKTkB,UC4GWQ,EA5JH,WAGV,IAAMC,EAAkB,IAAIC,gBAAgBf,OAAOE,SAASc,MACtDC,EAASC,OAAOC,YAAYL,EAAgBM,WAGlD,GAFgBnC,8NAAYoC,qBACfpC,8NAAYC,oBACGP,KAApB0B,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SA6Cf,SAASgB,IAAwB,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAC9B,OAAOA,EAAQC,OAAOC,SAASC,KAAK,KA3C1B,MAATrB,GAA0B,IAATA,QACQsB,GAAvBV,EAAO,cACPX,EAASW,EAAO,cAInBW,qBAAU,WAESvB,EAAMG,OAAQH,EAAMG,QAgChC,CAACH,IAMV,IAAMwB,EAAa,CACjB,CAAEC,KAAM,MAAO3B,KAAM,OAAQ4B,SAAS,GACtC,CAAED,KAAM,OAAQ3B,KAAM,QAAS4B,SAAS,IAE1C,OACE,gCAEE,cAAC,IAAD,CAAYC,GAAG,MAAMC,UAAU,cAA/B,SACC,gBAAGC,EAAH,EAAGA,KAAH,OACC,qCACE,qBAAKD,UAAU,yCAAf,SACE,sBAAKA,UAAU,kDAAf,UACE,qBAAKA,UAAU,wDAAf,SAEE,eAAC,IAAWE,OAAZ,CAAmBF,UAAU,4KAA7B,UACE,sBAAMA,UAAU,UAAhB,4BACCC,EACC,cAAC,IAAD,CAAOD,UAAU,gBAAgB,cAAY,SAE7C,cAAC,IAAD,CAAUA,UAAU,gBAAgB,cAAY,cAItD,sBAAKA,UAAU,4EAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,qBACEA,UAAU,6BACVG,IAAI,gEACJC,IAAI,aAEN,qBACEJ,UAAU,6BACVG,IAAI,gFACJC,IAAI,gBAGR,qBAAKJ,UAAU,0BAAf,SACE,qBAAKA,UAAU,iBAAf,SACGJ,EAAWS,KAAI,SAAC/B,GAAD,OACd,cAAC,IAAD,CAAMgC,GAAIhC,EAAKJ,KAAf,SACE,mBAEA8B,UAAWX,EACTf,EAAKwB,QAAU,yBAA2B,mDAC1C,4CAEF,eAAcxB,EAAKwB,QAAU,YAASJ,EANtC,SAQCpB,EAAKuB,MAPDvB,EAAKuB,uBAmBxB,cAAC,IAAWU,MAAZ,CAAkBP,UAAU,YAA5B,SACE,qBAAKA,UAAU,2BAAf,SACGJ,EAAWS,KAAI,SAAC/B,GAAD,OACd,cAAC,IAAW4B,OAAZ,CAEEH,GAAG,IACH7B,KAAMI,EAAKJ,KACX8B,UAAWX,EACTf,EAAKwB,QAAU,yBAA2B,mDAC1C,oDAEF,eAAcxB,EAAKwB,QAAU,YAASJ,EARxC,SAUGpB,EAAKuB,MATDvB,EAAKuB,mBAoBtB,cAAC,IAAD,IAIA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOW,KAAK,OAAOC,QAAS,cAACjE,EAAD,MAC5B,cAAC,IAAD,CAAOgE,KAAK,QAAQC,QAAS,cAAChE,EAAD,aCnJrCiE,IAASC,OACP,cAAC,IAAMC,WAAP,UACK,cAAC,IAAD,UACA,cAAC,EAAD,QAGLC,SAASC,eAAe,W","file":"static/js/main.b0a1afca.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default function GetComponent(){\r\n\r\n    return(\r\n        <div>\r\n            <h1>GET</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nexport default function PostComponent(){\r\n    \r\n    return(\r\n        <div>\r\n            <h1>POST</h1>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\nimport swal from 'sweetalert';\r\n\r\nconst useToken= () =>  { \r\n  const getToken = () => {\r\n    const tokenString = localStorage.getItem('Token');\r\n    const LOGIN = process.env.REACT_APP_LOGIN_URL;\r\n    let userToken = \"\";\r\n    const now = new Date()\r\n  \r\n    if(tokenString !=null && tokenString.includes(\"value\")){\r\n       userToken = JSON.parse(tokenString);\r\n\r\n        // compare the expiry time of the item with the current time\r\n          if (now.getTime() > userToken.expiry) {\r\n          // If the item is expired, delete the item from storage\r\n          // and return null\r\n\r\n          swal({  \r\n            title:\"Alerta\",\r\n            text:\"La sesiÃ³n ha expirado\",\r\n            icon: \"warning\"\r\n          }).then(() => {\r\n            window.localStorage.clear();      \r\n            window.location.href = LOGIN; \r\n\r\n          });\r\n\r\n\r\n        }\r\n\r\n    }\r\n  \r\n    return userToken\r\n  };\r\n\r\n  const [Token, setToken] = useState(getToken());\r\n\r\n  const saveToken = userToken => {\r\n\r\n    const now = new Date()\r\n  \r\n          // `item` is an object which contains the original value\r\n          // as well as the time when it's supposed to expire\r\n          const item = {\r\n            value: userToken,\r\n            expiry: now.setMinutes( now.getMinutes() + 180 )\r\n            ,\r\n          }\r\n\r\n    localStorage.setItem('Token', JSON.stringify(item));\r\n    setToken(userToken);\r\n  };\r\n\r\n  return {\r\n    setToken: saveToken,\r\n    Token\r\n  }\r\n}\r\nexport default useToken;","import React ,{Fragment,useEffect } from 'react'\nimport GetComponent from './components/GetComponent';\nimport PostComponent from './components/PostComponent';\nimport { Route,Routes,Link,Outlet } from 'react-router-dom';\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { BellIcon, MenuIcon, XIcon } from '@heroicons/react/outline'\nimport useToken from \"./components/Hooks/useToken\";\n\nconst App = () =>{\n\n\n  const urlSearchParams = new URLSearchParams(window.location.hash);\n  const params = Object.fromEntries(urlSearchParams.entries());\n  const API_URL = process.env.REACT_APP_SERVER_URL;    \n  const LOGIN =process.env.REACT_APP_LOGIN_URL;\n  const { Token, setToken } = useToken();\n\n\n  if(Token == null || Token == \"\") {\n    if(params[\"#id_token\"] != undefined){\n       setToken(params[\"#id_token\"])\n    }\n }\n \n    useEffect(() => {\n    \n      var TokenValue = Token.value ? Token.value : Token;\n\n     /*  axios.get(API_URL+'/decodetoken', {\n      params: {\n          encoded:'\"'+TokenValue+'\"'\n      }\n          }).then(response => { \n\n            var dataResult = JSON.parse(JSON.stringify(response.data));    \n            console.log(dataResult)  \n            if(dataResult.errorMessage !== undefined ){\n                if(dataResult.errorMessage){\n                  swal({  \n                      title:\"Error\",\n                      text:\"Not authorized\",\n                      icon: \"error\"\n                    }).then(() => {\n                      window.localStorage.clear();\n                      window.location.href = LOGIN; \n\n                    });\n\n\n                }\n            }else{\n\n                //entro\n              }\n                  \n          \n          })  */\n            \n        }, [Token]);\n\n  function classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n  }\n\n  const navigation = [\n    { name: 'Get', href: '/get', current: true },\n    { name: 'Post', href: '/post', current: false }\n  ]\n  return (\n    <div>\n      \n      <Disclosure as=\"nav\" className=\"bg-gray-800\">\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex items-center justify-between h-16\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  <img\n                    className=\"block lg:hidden h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\n                    alt=\"Workflow\"\n                  />\n                  <img\n                    className=\"hidden lg:block h-8 w-auto\"\n                    src=\"https://tailwindui.com/img/logos/workflow-logo-indigo-500-mark-white-text.svg\"\n                    alt=\"Workflow\"\n                  />\n                </div>\n                <div className=\"hidden sm:block sm:ml-6\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <Link to={item.href}>\n                        <a\n                        key={item.name}                     \n                        className={classNames(\n                          item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                          'px-3 py-2 rounded-md text-sm font-medium'\n                        )}\n                        aria-current={item.current ? 'page' : undefined}\n                      >\n                        {item.name}\n                      </a>\n                      </Link>\n                    \n                    ))}\n                  </div>\n                </div>\n              </div>\n           \n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navigation.map((item) => (\n                <Disclosure.Button\n                  key={item.name}\n                  as=\"a\"\n                  href={item.href}\n                  className={classNames(\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                    'block px-3 py-2 rounded-md text-base font-medium'\n                  )}\n                  aria-current={item.current ? 'page' : undefined}\n                >\n                  {item.name}\n                </Disclosure.Button>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n\n\n\n      <Outlet/>\n\n\n\n      <Routes>\n        <Route path=\"/get\" element={<GetComponent />} ></Route>\n        <Route path=\"/post\" element={<PostComponent />} ></Route>\n\n      </Routes>\n    </div>\n\n\n\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App.jsx';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n       <Router>\n       <App />    \n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}